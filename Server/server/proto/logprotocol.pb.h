// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logprotocol.proto

#ifndef PROTOBUF_logprotocol_2eproto__INCLUDED
#define PROTOBUF_logprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_logprotocol_2eproto();
void protobuf_AssignDesc_logprotocol_2eproto();
void protobuf_ShutdownFile_logprotocol_2eproto();

class LogReportReq;

// ===================================================================

class LogReportReq : public ::google::protobuf::Message {
 public:
  LogReportReq();
  virtual ~LogReportReq();

  LogReportReq(const LogReportReq& from);

  inline LogReportReq& operator=(const LogReportReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogReportReq& default_instance();

  void Swap(LogReportReq* other);

  // implements Message ----------------------------------------------

  LogReportReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogReportReq& from);
  void MergeFrom(const LogReportReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 logid = 1;
  inline bool has_logid() const;
  inline void clear_logid();
  static const int kLogidFieldNumber = 1;
  inline ::google::protobuf::int32 logid() const;
  inline void set_logid(::google::protobuf::int32 value);

  // optional int32 logval1 = 2;
  inline bool has_logval1() const;
  inline void clear_logval1();
  static const int kLogval1FieldNumber = 2;
  inline ::google::protobuf::int32 logval1() const;
  inline void set_logval1(::google::protobuf::int32 value);

  // optional int32 logval2 = 3;
  inline bool has_logval2() const;
  inline void clear_logval2();
  static const int kLogval2FieldNumber = 3;
  inline ::google::protobuf::int32 logval2() const;
  inline void set_logval2(::google::protobuf::int32 value);

  // optional int32 logval3 = 4;
  inline bool has_logval3() const;
  inline void clear_logval3();
  static const int kLogval3FieldNumber = 4;
  inline ::google::protobuf::int32 logval3() const;
  inline void set_logval3(::google::protobuf::int32 value);

  // optional int32 logval4 = 5;
  inline bool has_logval4() const;
  inline void clear_logval4();
  static const int kLogval4FieldNumber = 5;
  inline ::google::protobuf::int32 logval4() const;
  inline void set_logval4(::google::protobuf::int32 value);

  // optional int32 logval5 = 6;
  inline bool has_logval5() const;
  inline void clear_logval5();
  static const int kLogval5FieldNumber = 6;
  inline ::google::protobuf::int32 logval5() const;
  inline void set_logval5(::google::protobuf::int32 value);

  // optional int32 logval6 = 7;
  inline bool has_logval6() const;
  inline void clear_logval6();
  static const int kLogval6FieldNumber = 7;
  inline ::google::protobuf::int32 logval6() const;
  inline void set_logval6(::google::protobuf::int32 value);

  // optional int32 logval7 = 8;
  inline bool has_logval7() const;
  inline void clear_logval7();
  static const int kLogval7FieldNumber = 8;
  inline ::google::protobuf::int32 logval7() const;
  inline void set_logval7(::google::protobuf::int32 value);

  // optional int32 logval8 = 9;
  inline bool has_logval8() const;
  inline void clear_logval8();
  static const int kLogval8FieldNumber = 9;
  inline ::google::protobuf::int32 logval8() const;
  inline void set_logval8(::google::protobuf::int32 value);

  // optional int32 logval9 = 10;
  inline bool has_logval9() const;
  inline void clear_logval9();
  static const int kLogval9FieldNumber = 10;
  inline ::google::protobuf::int32 logval9() const;
  inline void set_logval9(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LogReportReq)
 private:
  inline void set_has_logid();
  inline void clear_has_logid();
  inline void set_has_logval1();
  inline void clear_has_logval1();
  inline void set_has_logval2();
  inline void clear_has_logval2();
  inline void set_has_logval3();
  inline void clear_has_logval3();
  inline void set_has_logval4();
  inline void clear_has_logval4();
  inline void set_has_logval5();
  inline void clear_has_logval5();
  inline void set_has_logval6();
  inline void clear_has_logval6();
  inline void set_has_logval7();
  inline void clear_has_logval7();
  inline void set_has_logval8();
  inline void clear_has_logval8();
  inline void set_has_logval9();
  inline void clear_has_logval9();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 logid_;
  ::google::protobuf::int32 logval1_;
  ::google::protobuf::int32 logval2_;
  ::google::protobuf::int32 logval3_;
  ::google::protobuf::int32 logval4_;
  ::google::protobuf::int32 logval5_;
  ::google::protobuf::int32 logval6_;
  ::google::protobuf::int32 logval7_;
  ::google::protobuf::int32 logval8_;
  ::google::protobuf::int32 logval9_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_logprotocol_2eproto();
  friend void protobuf_AssignDesc_logprotocol_2eproto();
  friend void protobuf_ShutdownFile_logprotocol_2eproto();

  void InitAsDefaultInstance();
  static LogReportReq* default_instance_;
};
// ===================================================================


// ===================================================================

// LogReportReq

// required int32 logid = 1;
inline bool LogReportReq::has_logid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogReportReq::set_has_logid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogReportReq::clear_has_logid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogReportReq::clear_logid() {
  logid_ = 0;
  clear_has_logid();
}
inline ::google::protobuf::int32 LogReportReq::logid() const {
  return logid_;
}
inline void LogReportReq::set_logid(::google::protobuf::int32 value) {
  set_has_logid();
  logid_ = value;
}

// optional int32 logval1 = 2;
inline bool LogReportReq::has_logval1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogReportReq::set_has_logval1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogReportReq::clear_has_logval1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogReportReq::clear_logval1() {
  logval1_ = 0;
  clear_has_logval1();
}
inline ::google::protobuf::int32 LogReportReq::logval1() const {
  return logval1_;
}
inline void LogReportReq::set_logval1(::google::protobuf::int32 value) {
  set_has_logval1();
  logval1_ = value;
}

// optional int32 logval2 = 3;
inline bool LogReportReq::has_logval2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogReportReq::set_has_logval2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogReportReq::clear_has_logval2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogReportReq::clear_logval2() {
  logval2_ = 0;
  clear_has_logval2();
}
inline ::google::protobuf::int32 LogReportReq::logval2() const {
  return logval2_;
}
inline void LogReportReq::set_logval2(::google::protobuf::int32 value) {
  set_has_logval2();
  logval2_ = value;
}

// optional int32 logval3 = 4;
inline bool LogReportReq::has_logval3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogReportReq::set_has_logval3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogReportReq::clear_has_logval3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogReportReq::clear_logval3() {
  logval3_ = 0;
  clear_has_logval3();
}
inline ::google::protobuf::int32 LogReportReq::logval3() const {
  return logval3_;
}
inline void LogReportReq::set_logval3(::google::protobuf::int32 value) {
  set_has_logval3();
  logval3_ = value;
}

// optional int32 logval4 = 5;
inline bool LogReportReq::has_logval4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LogReportReq::set_has_logval4() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LogReportReq::clear_has_logval4() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LogReportReq::clear_logval4() {
  logval4_ = 0;
  clear_has_logval4();
}
inline ::google::protobuf::int32 LogReportReq::logval4() const {
  return logval4_;
}
inline void LogReportReq::set_logval4(::google::protobuf::int32 value) {
  set_has_logval4();
  logval4_ = value;
}

// optional int32 logval5 = 6;
inline bool LogReportReq::has_logval5() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LogReportReq::set_has_logval5() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LogReportReq::clear_has_logval5() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LogReportReq::clear_logval5() {
  logval5_ = 0;
  clear_has_logval5();
}
inline ::google::protobuf::int32 LogReportReq::logval5() const {
  return logval5_;
}
inline void LogReportReq::set_logval5(::google::protobuf::int32 value) {
  set_has_logval5();
  logval5_ = value;
}

// optional int32 logval6 = 7;
inline bool LogReportReq::has_logval6() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LogReportReq::set_has_logval6() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LogReportReq::clear_has_logval6() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LogReportReq::clear_logval6() {
  logval6_ = 0;
  clear_has_logval6();
}
inline ::google::protobuf::int32 LogReportReq::logval6() const {
  return logval6_;
}
inline void LogReportReq::set_logval6(::google::protobuf::int32 value) {
  set_has_logval6();
  logval6_ = value;
}

// optional int32 logval7 = 8;
inline bool LogReportReq::has_logval7() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LogReportReq::set_has_logval7() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LogReportReq::clear_has_logval7() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LogReportReq::clear_logval7() {
  logval7_ = 0;
  clear_has_logval7();
}
inline ::google::protobuf::int32 LogReportReq::logval7() const {
  return logval7_;
}
inline void LogReportReq::set_logval7(::google::protobuf::int32 value) {
  set_has_logval7();
  logval7_ = value;
}

// optional int32 logval8 = 9;
inline bool LogReportReq::has_logval8() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LogReportReq::set_has_logval8() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LogReportReq::clear_has_logval8() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LogReportReq::clear_logval8() {
  logval8_ = 0;
  clear_has_logval8();
}
inline ::google::protobuf::int32 LogReportReq::logval8() const {
  return logval8_;
}
inline void LogReportReq::set_logval8(::google::protobuf::int32 value) {
  set_has_logval8();
  logval8_ = value;
}

// optional int32 logval9 = 10;
inline bool LogReportReq::has_logval9() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LogReportReq::set_has_logval9() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LogReportReq::clear_has_logval9() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LogReportReq::clear_logval9() {
  logval9_ = 0;
  clear_has_logval9();
}
inline ::google::protobuf::int32 LogReportReq::logval9() const {
  return logval9_;
}
inline void LogReportReq::set_logval9(::google::protobuf::int32 value) {
  set_has_logval9();
  logval9_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_logprotocol_2eproto__INCLUDED
