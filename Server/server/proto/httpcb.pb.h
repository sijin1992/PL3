// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: httpcb.proto

#ifndef PROTOBUF_httpcb_2eproto__INCLUDED
#define PROTOBUF_httpcb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_httpcb_2eproto();
void protobuf_AssignDesc_httpcb_2eproto();
void protobuf_ShutdownFile_httpcb_2eproto();

class HttpAddMondyReq;
class HttpAddMondyResp;

// ===================================================================

class HttpAddMondyReq : public ::google::protobuf::Message {
 public:
  HttpAddMondyReq();
  virtual ~HttpAddMondyReq();

  HttpAddMondyReq(const HttpAddMondyReq& from);

  inline HttpAddMondyReq& operator=(const HttpAddMondyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpAddMondyReq& default_instance();

  void Swap(HttpAddMondyReq* other);

  // implements Message ----------------------------------------------

  HttpAddMondyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HttpAddMondyReq& from);
  void MergeFrom(const HttpAddMondyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 fd = 1;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 1;
  inline ::google::protobuf::int32 fd() const;
  inline void set_fd(::google::protobuf::int32 value);

  // required int64 session = 2;
  inline bool has_session() const;
  inline void clear_session();
  static const int kSessionFieldNumber = 2;
  inline ::google::protobuf::int64 session() const;
  inline void set_session(::google::protobuf::int64 value);

  // required string orderno = 3;
  inline bool has_orderno() const;
  inline void clear_orderno();
  static const int kOrdernoFieldNumber = 3;
  inline const ::std::string& orderno() const;
  inline void set_orderno(const ::std::string& value);
  inline void set_orderno(const char* value);
  inline void set_orderno(const char* value, size_t size);
  inline ::std::string* mutable_orderno();
  inline ::std::string* release_orderno();
  inline void set_allocated_orderno(::std::string* orderno);

  // required int32 money = 4;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 4;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);

  // optional string sid = 5;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 5;
  inline const ::std::string& sid() const;
  inline void set_sid(const ::std::string& value);
  inline void set_sid(const char* value);
  inline void set_sid(const char* value, size_t size);
  inline ::std::string* mutable_sid();
  inline ::std::string* release_sid();
  inline void set_allocated_sid(::std::string* sid);

  // optional string extinfo = 6;
  inline bool has_extinfo() const;
  inline void clear_extinfo();
  static const int kExtinfoFieldNumber = 6;
  inline const ::std::string& extinfo() const;
  inline void set_extinfo(const ::std::string& value);
  inline void set_extinfo(const char* value);
  inline void set_extinfo(const char* value, size_t size);
  inline ::std::string* mutable_extinfo();
  inline ::std::string* release_extinfo();
  inline void set_allocated_extinfo(::std::string* extinfo);

  // optional int32 selfdef = 7;
  inline bool has_selfdef() const;
  inline void clear_selfdef();
  static const int kSelfdefFieldNumber = 7;
  inline ::google::protobuf::int32 selfdef() const;
  inline void set_selfdef(::google::protobuf::int32 value);

  // optional int32 gamemoney = 8;
  inline bool has_gamemoney() const;
  inline void clear_gamemoney();
  static const int kGamemoneyFieldNumber = 8;
  inline ::google::protobuf::int32 gamemoney() const;
  inline void set_gamemoney(::google::protobuf::int32 value);

  // optional int32 basemoney = 9;
  inline bool has_basemoney() const;
  inline void clear_basemoney();
  static const int kBasemoneyFieldNumber = 9;
  inline ::google::protobuf::int32 basemoney() const;
  inline void set_basemoney(::google::protobuf::int32 value);

  // optional int32 monthcard = 10;
  inline bool has_monthcard() const;
  inline void clear_monthcard();
  static const int kMonthcardFieldNumber = 10;
  inline ::google::protobuf::int32 monthcard() const;
  inline void set_monthcard(::google::protobuf::int32 value);

  // optional int32 fake = 11;
  inline bool has_fake() const;
  inline void clear_fake();
  static const int kFakeFieldNumber = 11;
  inline ::google::protobuf::int32 fake() const;
  inline void set_fake(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HttpAddMondyReq)
 private:
  inline void set_has_fd();
  inline void clear_has_fd();
  inline void set_has_session();
  inline void clear_has_session();
  inline void set_has_orderno();
  inline void clear_has_orderno();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_extinfo();
  inline void clear_has_extinfo();
  inline void set_has_selfdef();
  inline void clear_has_selfdef();
  inline void set_has_gamemoney();
  inline void clear_has_gamemoney();
  inline void set_has_basemoney();
  inline void clear_has_basemoney();
  inline void set_has_monthcard();
  inline void clear_has_monthcard();
  inline void set_has_fake();
  inline void clear_has_fake();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 session_;
  ::google::protobuf::int32 fd_;
  ::google::protobuf::int32 money_;
  ::std::string* orderno_;
  ::std::string* sid_;
  ::std::string* extinfo_;
  ::google::protobuf::int32 selfdef_;
  ::google::protobuf::int32 gamemoney_;
  ::google::protobuf::int32 basemoney_;
  ::google::protobuf::int32 monthcard_;
  ::google::protobuf::int32 fake_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_httpcb_2eproto();
  friend void protobuf_AssignDesc_httpcb_2eproto();
  friend void protobuf_ShutdownFile_httpcb_2eproto();

  void InitAsDefaultInstance();
  static HttpAddMondyReq* default_instance_;
};
// -------------------------------------------------------------------

class HttpAddMondyResp : public ::google::protobuf::Message {
 public:
  HttpAddMondyResp();
  virtual ~HttpAddMondyResp();

  HttpAddMondyResp(const HttpAddMondyResp& from);

  inline HttpAddMondyResp& operator=(const HttpAddMondyResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpAddMondyResp& default_instance();

  void Swap(HttpAddMondyResp* other);

  // implements Message ----------------------------------------------

  HttpAddMondyResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HttpAddMondyResp& from);
  void MergeFrom(const HttpAddMondyResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required .HttpAddMondyReq req = 2;
  inline bool has_req() const;
  inline void clear_req();
  static const int kReqFieldNumber = 2;
  inline const ::HttpAddMondyReq& req() const;
  inline ::HttpAddMondyReq* mutable_req();
  inline ::HttpAddMondyReq* release_req();
  inline void set_allocated_req(::HttpAddMondyReq* req);

  // @@protoc_insertion_point(class_scope:HttpAddMondyResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_req();
  inline void clear_has_req();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::HttpAddMondyReq* req_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_httpcb_2eproto();
  friend void protobuf_AssignDesc_httpcb_2eproto();
  friend void protobuf_ShutdownFile_httpcb_2eproto();

  void InitAsDefaultInstance();
  static HttpAddMondyResp* default_instance_;
};
// ===================================================================


// ===================================================================

// HttpAddMondyReq

// required int32 fd = 1;
inline bool HttpAddMondyReq::has_fd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HttpAddMondyReq::set_has_fd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HttpAddMondyReq::clear_has_fd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HttpAddMondyReq::clear_fd() {
  fd_ = 0;
  clear_has_fd();
}
inline ::google::protobuf::int32 HttpAddMondyReq::fd() const {
  return fd_;
}
inline void HttpAddMondyReq::set_fd(::google::protobuf::int32 value) {
  set_has_fd();
  fd_ = value;
}

// required int64 session = 2;
inline bool HttpAddMondyReq::has_session() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HttpAddMondyReq::set_has_session() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HttpAddMondyReq::clear_has_session() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HttpAddMondyReq::clear_session() {
  session_ = GOOGLE_LONGLONG(0);
  clear_has_session();
}
inline ::google::protobuf::int64 HttpAddMondyReq::session() const {
  return session_;
}
inline void HttpAddMondyReq::set_session(::google::protobuf::int64 value) {
  set_has_session();
  session_ = value;
}

// required string orderno = 3;
inline bool HttpAddMondyReq::has_orderno() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HttpAddMondyReq::set_has_orderno() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HttpAddMondyReq::clear_has_orderno() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HttpAddMondyReq::clear_orderno() {
  if (orderno_ != &::google::protobuf::internal::kEmptyString) {
    orderno_->clear();
  }
  clear_has_orderno();
}
inline const ::std::string& HttpAddMondyReq::orderno() const {
  return *orderno_;
}
inline void HttpAddMondyReq::set_orderno(const ::std::string& value) {
  set_has_orderno();
  if (orderno_ == &::google::protobuf::internal::kEmptyString) {
    orderno_ = new ::std::string;
  }
  orderno_->assign(value);
}
inline void HttpAddMondyReq::set_orderno(const char* value) {
  set_has_orderno();
  if (orderno_ == &::google::protobuf::internal::kEmptyString) {
    orderno_ = new ::std::string;
  }
  orderno_->assign(value);
}
inline void HttpAddMondyReq::set_orderno(const char* value, size_t size) {
  set_has_orderno();
  if (orderno_ == &::google::protobuf::internal::kEmptyString) {
    orderno_ = new ::std::string;
  }
  orderno_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HttpAddMondyReq::mutable_orderno() {
  set_has_orderno();
  if (orderno_ == &::google::protobuf::internal::kEmptyString) {
    orderno_ = new ::std::string;
  }
  return orderno_;
}
inline ::std::string* HttpAddMondyReq::release_orderno() {
  clear_has_orderno();
  if (orderno_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = orderno_;
    orderno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HttpAddMondyReq::set_allocated_orderno(::std::string* orderno) {
  if (orderno_ != &::google::protobuf::internal::kEmptyString) {
    delete orderno_;
  }
  if (orderno) {
    set_has_orderno();
    orderno_ = orderno;
  } else {
    clear_has_orderno();
    orderno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 money = 4;
inline bool HttpAddMondyReq::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HttpAddMondyReq::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HttpAddMondyReq::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HttpAddMondyReq::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 HttpAddMondyReq::money() const {
  return money_;
}
inline void HttpAddMondyReq::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
}

// optional string sid = 5;
inline bool HttpAddMondyReq::has_sid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HttpAddMondyReq::set_has_sid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HttpAddMondyReq::clear_has_sid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HttpAddMondyReq::clear_sid() {
  if (sid_ != &::google::protobuf::internal::kEmptyString) {
    sid_->clear();
  }
  clear_has_sid();
}
inline const ::std::string& HttpAddMondyReq::sid() const {
  return *sid_;
}
inline void HttpAddMondyReq::set_sid(const ::std::string& value) {
  set_has_sid();
  if (sid_ == &::google::protobuf::internal::kEmptyString) {
    sid_ = new ::std::string;
  }
  sid_->assign(value);
}
inline void HttpAddMondyReq::set_sid(const char* value) {
  set_has_sid();
  if (sid_ == &::google::protobuf::internal::kEmptyString) {
    sid_ = new ::std::string;
  }
  sid_->assign(value);
}
inline void HttpAddMondyReq::set_sid(const char* value, size_t size) {
  set_has_sid();
  if (sid_ == &::google::protobuf::internal::kEmptyString) {
    sid_ = new ::std::string;
  }
  sid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HttpAddMondyReq::mutable_sid() {
  set_has_sid();
  if (sid_ == &::google::protobuf::internal::kEmptyString) {
    sid_ = new ::std::string;
  }
  return sid_;
}
inline ::std::string* HttpAddMondyReq::release_sid() {
  clear_has_sid();
  if (sid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sid_;
    sid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HttpAddMondyReq::set_allocated_sid(::std::string* sid) {
  if (sid_ != &::google::protobuf::internal::kEmptyString) {
    delete sid_;
  }
  if (sid) {
    set_has_sid();
    sid_ = sid;
  } else {
    clear_has_sid();
    sid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string extinfo = 6;
inline bool HttpAddMondyReq::has_extinfo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HttpAddMondyReq::set_has_extinfo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HttpAddMondyReq::clear_has_extinfo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HttpAddMondyReq::clear_extinfo() {
  if (extinfo_ != &::google::protobuf::internal::kEmptyString) {
    extinfo_->clear();
  }
  clear_has_extinfo();
}
inline const ::std::string& HttpAddMondyReq::extinfo() const {
  return *extinfo_;
}
inline void HttpAddMondyReq::set_extinfo(const ::std::string& value) {
  set_has_extinfo();
  if (extinfo_ == &::google::protobuf::internal::kEmptyString) {
    extinfo_ = new ::std::string;
  }
  extinfo_->assign(value);
}
inline void HttpAddMondyReq::set_extinfo(const char* value) {
  set_has_extinfo();
  if (extinfo_ == &::google::protobuf::internal::kEmptyString) {
    extinfo_ = new ::std::string;
  }
  extinfo_->assign(value);
}
inline void HttpAddMondyReq::set_extinfo(const char* value, size_t size) {
  set_has_extinfo();
  if (extinfo_ == &::google::protobuf::internal::kEmptyString) {
    extinfo_ = new ::std::string;
  }
  extinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HttpAddMondyReq::mutable_extinfo() {
  set_has_extinfo();
  if (extinfo_ == &::google::protobuf::internal::kEmptyString) {
    extinfo_ = new ::std::string;
  }
  return extinfo_;
}
inline ::std::string* HttpAddMondyReq::release_extinfo() {
  clear_has_extinfo();
  if (extinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = extinfo_;
    extinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HttpAddMondyReq::set_allocated_extinfo(::std::string* extinfo) {
  if (extinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete extinfo_;
  }
  if (extinfo) {
    set_has_extinfo();
    extinfo_ = extinfo;
  } else {
    clear_has_extinfo();
    extinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 selfdef = 7;
inline bool HttpAddMondyReq::has_selfdef() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HttpAddMondyReq::set_has_selfdef() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HttpAddMondyReq::clear_has_selfdef() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HttpAddMondyReq::clear_selfdef() {
  selfdef_ = 0;
  clear_has_selfdef();
}
inline ::google::protobuf::int32 HttpAddMondyReq::selfdef() const {
  return selfdef_;
}
inline void HttpAddMondyReq::set_selfdef(::google::protobuf::int32 value) {
  set_has_selfdef();
  selfdef_ = value;
}

// optional int32 gamemoney = 8;
inline bool HttpAddMondyReq::has_gamemoney() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HttpAddMondyReq::set_has_gamemoney() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HttpAddMondyReq::clear_has_gamemoney() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HttpAddMondyReq::clear_gamemoney() {
  gamemoney_ = 0;
  clear_has_gamemoney();
}
inline ::google::protobuf::int32 HttpAddMondyReq::gamemoney() const {
  return gamemoney_;
}
inline void HttpAddMondyReq::set_gamemoney(::google::protobuf::int32 value) {
  set_has_gamemoney();
  gamemoney_ = value;
}

// optional int32 basemoney = 9;
inline bool HttpAddMondyReq::has_basemoney() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HttpAddMondyReq::set_has_basemoney() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HttpAddMondyReq::clear_has_basemoney() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HttpAddMondyReq::clear_basemoney() {
  basemoney_ = 0;
  clear_has_basemoney();
}
inline ::google::protobuf::int32 HttpAddMondyReq::basemoney() const {
  return basemoney_;
}
inline void HttpAddMondyReq::set_basemoney(::google::protobuf::int32 value) {
  set_has_basemoney();
  basemoney_ = value;
}

// optional int32 monthcard = 10;
inline bool HttpAddMondyReq::has_monthcard() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void HttpAddMondyReq::set_has_monthcard() {
  _has_bits_[0] |= 0x00000200u;
}
inline void HttpAddMondyReq::clear_has_monthcard() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void HttpAddMondyReq::clear_monthcard() {
  monthcard_ = 0;
  clear_has_monthcard();
}
inline ::google::protobuf::int32 HttpAddMondyReq::monthcard() const {
  return monthcard_;
}
inline void HttpAddMondyReq::set_monthcard(::google::protobuf::int32 value) {
  set_has_monthcard();
  monthcard_ = value;
}

// optional int32 fake = 11;
inline bool HttpAddMondyReq::has_fake() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void HttpAddMondyReq::set_has_fake() {
  _has_bits_[0] |= 0x00000400u;
}
inline void HttpAddMondyReq::clear_has_fake() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void HttpAddMondyReq::clear_fake() {
  fake_ = 0;
  clear_has_fake();
}
inline ::google::protobuf::int32 HttpAddMondyReq::fake() const {
  return fake_;
}
inline void HttpAddMondyReq::set_fake(::google::protobuf::int32 value) {
  set_has_fake();
  fake_ = value;
}

// -------------------------------------------------------------------

// HttpAddMondyResp

// required int32 result = 1;
inline bool HttpAddMondyResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HttpAddMondyResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HttpAddMondyResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HttpAddMondyResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 HttpAddMondyResp::result() const {
  return result_;
}
inline void HttpAddMondyResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required .HttpAddMondyReq req = 2;
inline bool HttpAddMondyResp::has_req() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HttpAddMondyResp::set_has_req() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HttpAddMondyResp::clear_has_req() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HttpAddMondyResp::clear_req() {
  if (req_ != NULL) req_->::HttpAddMondyReq::Clear();
  clear_has_req();
}
inline const ::HttpAddMondyReq& HttpAddMondyResp::req() const {
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
inline ::HttpAddMondyReq* HttpAddMondyResp::mutable_req() {
  set_has_req();
  if (req_ == NULL) req_ = new ::HttpAddMondyReq;
  return req_;
}
inline ::HttpAddMondyReq* HttpAddMondyResp::release_req() {
  clear_has_req();
  ::HttpAddMondyReq* temp = req_;
  req_ = NULL;
  return temp;
}
inline void HttpAddMondyResp::set_allocated_req(::HttpAddMondyReq* req) {
  delete req_;
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_httpcb_2eproto__INCLUDED
