// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CmdMail.proto

#ifndef PROTOBUF_CmdMail_2eproto__INCLUDED
#define PROTOBUF_CmdMail_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Mail.pb.h"
#include "Item.pb.h"
#include "UserSync.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CmdMail_2eproto();
void protobuf_AssignDesc_CmdMail_2eproto();
void protobuf_ShutdownFile_CmdMail_2eproto();

class GetMailListReq;
class GetMailListResp;
class ReadMailReq;
class ReadMailResp;
class SendMailReq;
class SendMailResp;
class DelMailReq;
class DelMailResp;

// ===================================================================

class GetMailListReq : public ::google::protobuf::Message {
 public:
  GetMailListReq();
  virtual ~GetMailListReq();

  GetMailListReq(const GetMailListReq& from);

  inline GetMailListReq& operator=(const GetMailListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMailListReq& default_instance();

  void Swap(GetMailListReq* other);

  // implements Message ----------------------------------------------

  GetMailListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMailListReq& from);
  void MergeFrom(const GetMailListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GetMailListReq)
 private:
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CmdMail_2eproto();
  friend void protobuf_AssignDesc_CmdMail_2eproto();
  friend void protobuf_ShutdownFile_CmdMail_2eproto();

  void InitAsDefaultInstance();
  static GetMailListReq* default_instance_;
};
// -------------------------------------------------------------------

class GetMailListResp : public ::google::protobuf::Message {
 public:
  GetMailListResp();
  virtual ~GetMailListResp();

  GetMailListResp(const GetMailListResp& from);

  inline GetMailListResp& operator=(const GetMailListResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMailListResp& default_instance();

  void Swap(GetMailListResp* other);

  // implements Message ----------------------------------------------

  GetMailListResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMailListResp& from);
  void MergeFrom(const GetMailListResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .UserSync user_sync = 2;
  inline bool has_user_sync() const;
  inline void clear_user_sync();
  static const int kUserSyncFieldNumber = 2;
  inline const ::UserSync& user_sync() const;
  inline ::UserSync* mutable_user_sync();
  inline ::UserSync* release_user_sync();
  inline void set_allocated_user_sync(::UserSync* user_sync);

  // @@protoc_insertion_point(class_scope:GetMailListResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_sync();
  inline void clear_has_user_sync();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::UserSync* user_sync_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CmdMail_2eproto();
  friend void protobuf_AssignDesc_CmdMail_2eproto();
  friend void protobuf_ShutdownFile_CmdMail_2eproto();

  void InitAsDefaultInstance();
  static GetMailListResp* default_instance_;
};
// -------------------------------------------------------------------

class ReadMailReq : public ::google::protobuf::Message {
 public:
  ReadMailReq();
  virtual ~ReadMailReq();

  ReadMailReq(const ReadMailReq& from);

  inline ReadMailReq& operator=(const ReadMailReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadMailReq& default_instance();

  void Swap(ReadMailReq* other);

  // implements Message ----------------------------------------------

  ReadMailReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadMailReq& from);
  void MergeFrom(const ReadMailReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::int32 guid() const;
  inline void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ReadMailReq)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 guid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CmdMail_2eproto();
  friend void protobuf_AssignDesc_CmdMail_2eproto();
  friend void protobuf_ShutdownFile_CmdMail_2eproto();

  void InitAsDefaultInstance();
  static ReadMailReq* default_instance_;
};
// -------------------------------------------------------------------

class ReadMailResp : public ::google::protobuf::Message {
 public:
  ReadMailResp();
  virtual ~ReadMailResp();

  ReadMailResp(const ReadMailResp& from);

  inline ReadMailResp& operator=(const ReadMailResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadMailResp& default_instance();

  void Swap(ReadMailResp* other);

  // implements Message ----------------------------------------------

  ReadMailResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadMailResp& from);
  void MergeFrom(const ReadMailResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .UserSync user_sync = 2;
  inline bool has_user_sync() const;
  inline void clear_user_sync();
  static const int kUserSyncFieldNumber = 2;
  inline const ::UserSync& user_sync() const;
  inline ::UserSync* mutable_user_sync();
  inline ::UserSync* release_user_sync();
  inline void set_allocated_user_sync(::UserSync* user_sync);

  // required .ReadMailReq req = 3;
  inline bool has_req() const;
  inline void clear_req();
  static const int kReqFieldNumber = 3;
  inline const ::ReadMailReq& req() const;
  inline ::ReadMailReq* mutable_req();
  inline ::ReadMailReq* release_req();
  inline void set_allocated_req(::ReadMailReq* req);

  // repeated .Pair get_item_list = 4;
  inline int get_item_list_size() const;
  inline void clear_get_item_list();
  static const int kGetItemListFieldNumber = 4;
  inline const ::Pair& get_item_list(int index) const;
  inline ::Pair* mutable_get_item_list(int index);
  inline ::Pair* add_get_item_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Pair >&
      get_item_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pair >*
      mutable_get_item_list();

  // @@protoc_insertion_point(class_scope:ReadMailResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_sync();
  inline void clear_has_user_sync();
  inline void set_has_req();
  inline void clear_has_req();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::UserSync* user_sync_;
  ::ReadMailReq* req_;
  ::google::protobuf::RepeatedPtrField< ::Pair > get_item_list_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CmdMail_2eproto();
  friend void protobuf_AssignDesc_CmdMail_2eproto();
  friend void protobuf_ShutdownFile_CmdMail_2eproto();

  void InitAsDefaultInstance();
  static ReadMailResp* default_instance_;
};
// -------------------------------------------------------------------

class SendMailReq : public ::google::protobuf::Message {
 public:
  SendMailReq();
  virtual ~SendMailReq();

  SendMailReq(const SendMailReq& from);

  inline SendMailReq& operator=(const SendMailReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMailReq& default_instance();

  void Swap(SendMailReq* other);

  // implements Message ----------------------------------------------

  SendMailReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendMailReq& from);
  void MergeFrom(const SendMailReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string user_name = 1;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 1;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  inline void set_allocated_user_name(::std::string* user_name);

  // required string subject = 2;
  inline bool has_subject() const;
  inline void clear_subject();
  static const int kSubjectFieldNumber = 2;
  inline const ::std::string& subject() const;
  inline void set_subject(const ::std::string& value);
  inline void set_subject(const char* value);
  inline void set_subject(const char* value, size_t size);
  inline ::std::string* mutable_subject();
  inline ::std::string* release_subject();
  inline void set_allocated_subject(::std::string* subject);

  // required string message = 3;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 3;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:SendMailReq)
 private:
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_subject();
  inline void clear_has_subject();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* user_name_;
  ::std::string* subject_;
  ::std::string* message_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CmdMail_2eproto();
  friend void protobuf_AssignDesc_CmdMail_2eproto();
  friend void protobuf_ShutdownFile_CmdMail_2eproto();

  void InitAsDefaultInstance();
  static SendMailReq* default_instance_;
};
// -------------------------------------------------------------------

class SendMailResp : public ::google::protobuf::Message {
 public:
  SendMailResp();
  virtual ~SendMailResp();

  SendMailResp(const SendMailResp& from);

  inline SendMailResp& operator=(const SendMailResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMailResp& default_instance();

  void Swap(SendMailResp* other);

  // implements Message ----------------------------------------------

  SendMailResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendMailResp& from);
  void MergeFrom(const SendMailResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .UserSync user_sync = 2;
  inline bool has_user_sync() const;
  inline void clear_user_sync();
  static const int kUserSyncFieldNumber = 2;
  inline const ::UserSync& user_sync() const;
  inline ::UserSync* mutable_user_sync();
  inline ::UserSync* release_user_sync();
  inline void set_allocated_user_sync(::UserSync* user_sync);

  // @@protoc_insertion_point(class_scope:SendMailResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_sync();
  inline void clear_has_user_sync();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::UserSync* user_sync_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CmdMail_2eproto();
  friend void protobuf_AssignDesc_CmdMail_2eproto();
  friend void protobuf_ShutdownFile_CmdMail_2eproto();

  void InitAsDefaultInstance();
  static SendMailResp* default_instance_;
};
// -------------------------------------------------------------------

class DelMailReq : public ::google::protobuf::Message {
 public:
  DelMailReq();
  virtual ~DelMailReq();

  DelMailReq(const DelMailReq& from);

  inline DelMailReq& operator=(const DelMailReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelMailReq& default_instance();

  void Swap(DelMailReq* other);

  // implements Message ----------------------------------------------

  DelMailReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelMailReq& from);
  void MergeFrom(const DelMailReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 guid_list = 1;
  inline int guid_list_size() const;
  inline void clear_guid_list();
  static const int kGuidListFieldNumber = 1;
  inline ::google::protobuf::int32 guid_list(int index) const;
  inline void set_guid_list(int index, ::google::protobuf::int32 value);
  inline void add_guid_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guid_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guid_list();

  // @@protoc_insertion_point(class_scope:DelMailReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guid_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CmdMail_2eproto();
  friend void protobuf_AssignDesc_CmdMail_2eproto();
  friend void protobuf_ShutdownFile_CmdMail_2eproto();

  void InitAsDefaultInstance();
  static DelMailReq* default_instance_;
};
// -------------------------------------------------------------------

class DelMailResp : public ::google::protobuf::Message {
 public:
  DelMailResp();
  virtual ~DelMailResp();

  DelMailResp(const DelMailResp& from);

  inline DelMailResp& operator=(const DelMailResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelMailResp& default_instance();

  void Swap(DelMailResp* other);

  // implements Message ----------------------------------------------

  DelMailResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelMailResp& from);
  void MergeFrom(const DelMailResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .UserSync user_sync = 2;
  inline bool has_user_sync() const;
  inline void clear_user_sync();
  static const int kUserSyncFieldNumber = 2;
  inline const ::UserSync& user_sync() const;
  inline ::UserSync* mutable_user_sync();
  inline ::UserSync* release_user_sync();
  inline void set_allocated_user_sync(::UserSync* user_sync);

  // @@protoc_insertion_point(class_scope:DelMailResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_sync();
  inline void clear_has_user_sync();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::UserSync* user_sync_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CmdMail_2eproto();
  friend void protobuf_AssignDesc_CmdMail_2eproto();
  friend void protobuf_ShutdownFile_CmdMail_2eproto();

  void InitAsDefaultInstance();
  static DelMailResp* default_instance_;
};
// ===================================================================


// ===================================================================

// GetMailListReq

// required int32 num = 1;
inline bool GetMailListReq::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetMailListReq::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetMailListReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetMailListReq::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 GetMailListReq::num() const {
  return num_;
}
inline void GetMailListReq::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// GetMailListResp

// required int32 result = 1;
inline bool GetMailListResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetMailListResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetMailListResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetMailListResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GetMailListResp::result() const {
  return result_;
}
inline void GetMailListResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .UserSync user_sync = 2;
inline bool GetMailListResp::has_user_sync() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetMailListResp::set_has_user_sync() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetMailListResp::clear_has_user_sync() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetMailListResp::clear_user_sync() {
  if (user_sync_ != NULL) user_sync_->::UserSync::Clear();
  clear_has_user_sync();
}
inline const ::UserSync& GetMailListResp::user_sync() const {
  return user_sync_ != NULL ? *user_sync_ : *default_instance_->user_sync_;
}
inline ::UserSync* GetMailListResp::mutable_user_sync() {
  set_has_user_sync();
  if (user_sync_ == NULL) user_sync_ = new ::UserSync;
  return user_sync_;
}
inline ::UserSync* GetMailListResp::release_user_sync() {
  clear_has_user_sync();
  ::UserSync* temp = user_sync_;
  user_sync_ = NULL;
  return temp;
}
inline void GetMailListResp::set_allocated_user_sync(::UserSync* user_sync) {
  delete user_sync_;
  user_sync_ = user_sync;
  if (user_sync) {
    set_has_user_sync();
  } else {
    clear_has_user_sync();
  }
}

// -------------------------------------------------------------------

// ReadMailReq

// required int32 guid = 1;
inline bool ReadMailReq::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadMailReq::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadMailReq::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadMailReq::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 ReadMailReq::guid() const {
  return guid_;
}
inline void ReadMailReq::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
}

// -------------------------------------------------------------------

// ReadMailResp

// required int32 result = 1;
inline bool ReadMailResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadMailResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadMailResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadMailResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ReadMailResp::result() const {
  return result_;
}
inline void ReadMailResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .UserSync user_sync = 2;
inline bool ReadMailResp::has_user_sync() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReadMailResp::set_has_user_sync() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReadMailResp::clear_has_user_sync() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReadMailResp::clear_user_sync() {
  if (user_sync_ != NULL) user_sync_->::UserSync::Clear();
  clear_has_user_sync();
}
inline const ::UserSync& ReadMailResp::user_sync() const {
  return user_sync_ != NULL ? *user_sync_ : *default_instance_->user_sync_;
}
inline ::UserSync* ReadMailResp::mutable_user_sync() {
  set_has_user_sync();
  if (user_sync_ == NULL) user_sync_ = new ::UserSync;
  return user_sync_;
}
inline ::UserSync* ReadMailResp::release_user_sync() {
  clear_has_user_sync();
  ::UserSync* temp = user_sync_;
  user_sync_ = NULL;
  return temp;
}
inline void ReadMailResp::set_allocated_user_sync(::UserSync* user_sync) {
  delete user_sync_;
  user_sync_ = user_sync;
  if (user_sync) {
    set_has_user_sync();
  } else {
    clear_has_user_sync();
  }
}

// required .ReadMailReq req = 3;
inline bool ReadMailResp::has_req() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReadMailResp::set_has_req() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReadMailResp::clear_has_req() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReadMailResp::clear_req() {
  if (req_ != NULL) req_->::ReadMailReq::Clear();
  clear_has_req();
}
inline const ::ReadMailReq& ReadMailResp::req() const {
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
inline ::ReadMailReq* ReadMailResp::mutable_req() {
  set_has_req();
  if (req_ == NULL) req_ = new ::ReadMailReq;
  return req_;
}
inline ::ReadMailReq* ReadMailResp::release_req() {
  clear_has_req();
  ::ReadMailReq* temp = req_;
  req_ = NULL;
  return temp;
}
inline void ReadMailResp::set_allocated_req(::ReadMailReq* req) {
  delete req_;
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
}

// repeated .Pair get_item_list = 4;
inline int ReadMailResp::get_item_list_size() const {
  return get_item_list_.size();
}
inline void ReadMailResp::clear_get_item_list() {
  get_item_list_.Clear();
}
inline const ::Pair& ReadMailResp::get_item_list(int index) const {
  return get_item_list_.Get(index);
}
inline ::Pair* ReadMailResp::mutable_get_item_list(int index) {
  return get_item_list_.Mutable(index);
}
inline ::Pair* ReadMailResp::add_get_item_list() {
  return get_item_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pair >&
ReadMailResp::get_item_list() const {
  return get_item_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pair >*
ReadMailResp::mutable_get_item_list() {
  return &get_item_list_;
}

// -------------------------------------------------------------------

// SendMailReq

// required string user_name = 1;
inline bool SendMailReq::has_user_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMailReq::set_has_user_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMailReq::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMailReq::clear_user_name() {
  if (user_name_ != &::google::protobuf::internal::kEmptyString) {
    user_name_->clear();
  }
  clear_has_user_name();
}
inline const ::std::string& SendMailReq::user_name() const {
  return *user_name_;
}
inline void SendMailReq::set_user_name(const ::std::string& value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void SendMailReq::set_user_name(const char* value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void SendMailReq::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SendMailReq::mutable_user_name() {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  return user_name_;
}
inline ::std::string* SendMailReq::release_user_name() {
  clear_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_name_;
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SendMailReq::set_allocated_user_name(::std::string* user_name) {
  if (user_name_ != &::google::protobuf::internal::kEmptyString) {
    delete user_name_;
  }
  if (user_name) {
    set_has_user_name();
    user_name_ = user_name;
  } else {
    clear_has_user_name();
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string subject = 2;
inline bool SendMailReq::has_subject() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendMailReq::set_has_subject() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendMailReq::clear_has_subject() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendMailReq::clear_subject() {
  if (subject_ != &::google::protobuf::internal::kEmptyString) {
    subject_->clear();
  }
  clear_has_subject();
}
inline const ::std::string& SendMailReq::subject() const {
  return *subject_;
}
inline void SendMailReq::set_subject(const ::std::string& value) {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::kEmptyString) {
    subject_ = new ::std::string;
  }
  subject_->assign(value);
}
inline void SendMailReq::set_subject(const char* value) {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::kEmptyString) {
    subject_ = new ::std::string;
  }
  subject_->assign(value);
}
inline void SendMailReq::set_subject(const char* value, size_t size) {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::kEmptyString) {
    subject_ = new ::std::string;
  }
  subject_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SendMailReq::mutable_subject() {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::kEmptyString) {
    subject_ = new ::std::string;
  }
  return subject_;
}
inline ::std::string* SendMailReq::release_subject() {
  clear_has_subject();
  if (subject_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = subject_;
    subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SendMailReq::set_allocated_subject(::std::string* subject) {
  if (subject_ != &::google::protobuf::internal::kEmptyString) {
    delete subject_;
  }
  if (subject) {
    set_has_subject();
    subject_ = subject;
  } else {
    clear_has_subject();
    subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string message = 3;
inline bool SendMailReq::has_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendMailReq::set_has_message() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendMailReq::clear_has_message() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendMailReq::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& SendMailReq::message() const {
  return *message_;
}
inline void SendMailReq::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void SendMailReq::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void SendMailReq::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SendMailReq::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* SendMailReq::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SendMailReq::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SendMailResp

// required int32 result = 1;
inline bool SendMailResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMailResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMailResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMailResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SendMailResp::result() const {
  return result_;
}
inline void SendMailResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .UserSync user_sync = 2;
inline bool SendMailResp::has_user_sync() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendMailResp::set_has_user_sync() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendMailResp::clear_has_user_sync() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendMailResp::clear_user_sync() {
  if (user_sync_ != NULL) user_sync_->::UserSync::Clear();
  clear_has_user_sync();
}
inline const ::UserSync& SendMailResp::user_sync() const {
  return user_sync_ != NULL ? *user_sync_ : *default_instance_->user_sync_;
}
inline ::UserSync* SendMailResp::mutable_user_sync() {
  set_has_user_sync();
  if (user_sync_ == NULL) user_sync_ = new ::UserSync;
  return user_sync_;
}
inline ::UserSync* SendMailResp::release_user_sync() {
  clear_has_user_sync();
  ::UserSync* temp = user_sync_;
  user_sync_ = NULL;
  return temp;
}
inline void SendMailResp::set_allocated_user_sync(::UserSync* user_sync) {
  delete user_sync_;
  user_sync_ = user_sync;
  if (user_sync) {
    set_has_user_sync();
  } else {
    clear_has_user_sync();
  }
}

// -------------------------------------------------------------------

// DelMailReq

// repeated int32 guid_list = 1;
inline int DelMailReq::guid_list_size() const {
  return guid_list_.size();
}
inline void DelMailReq::clear_guid_list() {
  guid_list_.Clear();
}
inline ::google::protobuf::int32 DelMailReq::guid_list(int index) const {
  return guid_list_.Get(index);
}
inline void DelMailReq::set_guid_list(int index, ::google::protobuf::int32 value) {
  guid_list_.Set(index, value);
}
inline void DelMailReq::add_guid_list(::google::protobuf::int32 value) {
  guid_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DelMailReq::guid_list() const {
  return guid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DelMailReq::mutable_guid_list() {
  return &guid_list_;
}

// -------------------------------------------------------------------

// DelMailResp

// required int32 result = 1;
inline bool DelMailResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelMailResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelMailResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelMailResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DelMailResp::result() const {
  return result_;
}
inline void DelMailResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .UserSync user_sync = 2;
inline bool DelMailResp::has_user_sync() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DelMailResp::set_has_user_sync() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DelMailResp::clear_has_user_sync() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DelMailResp::clear_user_sync() {
  if (user_sync_ != NULL) user_sync_->::UserSync::Clear();
  clear_has_user_sync();
}
inline const ::UserSync& DelMailResp::user_sync() const {
  return user_sync_ != NULL ? *user_sync_ : *default_instance_->user_sync_;
}
inline ::UserSync* DelMailResp::mutable_user_sync() {
  set_has_user_sync();
  if (user_sync_ == NULL) user_sync_ = new ::UserSync;
  return user_sync_;
}
inline ::UserSync* DelMailResp::release_user_sync() {
  clear_has_user_sync();
  ::UserSync* temp = user_sync_;
  user_sync_ = NULL;
  return temp;
}
inline void DelMailResp::set_allocated_user_sync(::UserSync* user_sync) {
  delete user_sync_;
  user_sync_ = user_sync;
  if (user_sync) {
    set_has_user_sync();
  } else {
    clear_has_user_sync();
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CmdMail_2eproto__INCLUDED
