// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datablock.proto

#ifndef PROTOBUF_datablock_2eproto__INCLUDED
#define PROTOBUF_datablock_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_datablock_2eproto();
void protobuf_AssignDesc_datablock_2eproto();
void protobuf_ShutdownFile_datablock_2eproto();

class DataBlock;
class DataBlockSet;

enum DataBlock_RetCode {
  DataBlock_RetCode_OK = 0,
  DataBlock_RetCode_NOT_MODIFIED = 1,
  DataBlock_RetCode_LOCKED = 3,
  DataBlock_RetCode_MISS = 9
};
bool DataBlock_RetCode_IsValid(int value);
const DataBlock_RetCode DataBlock_RetCode_RetCode_MIN = DataBlock_RetCode_OK;
const DataBlock_RetCode DataBlock_RetCode_RetCode_MAX = DataBlock_RetCode_MISS;
const int DataBlock_RetCode_RetCode_ARRAYSIZE = DataBlock_RetCode_RetCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataBlock_RetCode_descriptor();
inline const ::std::string& DataBlock_RetCode_Name(DataBlock_RetCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataBlock_RetCode_descriptor(), value);
}
inline bool DataBlock_RetCode_Parse(
    const ::std::string& name, DataBlock_RetCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataBlock_RetCode>(
    DataBlock_RetCode_descriptor(), name, value);
}
enum DataBlockSet_Result {
  DataBlockSet_Result_FAIL = -1,
  DataBlockSet_Result_OK = 0,
  DataBlockSet_Result_LOCKED = 1,
  DataBlockSet_Result_MISS = 9,
  DataBlockSet_Result_NO_DATA = 10
};
bool DataBlockSet_Result_IsValid(int value);
const DataBlockSet_Result DataBlockSet_Result_Result_MIN = DataBlockSet_Result_FAIL;
const DataBlockSet_Result DataBlockSet_Result_Result_MAX = DataBlockSet_Result_NO_DATA;
const int DataBlockSet_Result_Result_ARRAYSIZE = DataBlockSet_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataBlockSet_Result_descriptor();
inline const ::std::string& DataBlockSet_Result_Name(DataBlockSet_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataBlockSet_Result_descriptor(), value);
}
inline bool DataBlockSet_Result_Parse(
    const ::std::string& name, DataBlockSet_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataBlockSet_Result>(
    DataBlockSet_Result_descriptor(), name, value);
}
// ===================================================================

class DataBlock : public ::google::protobuf::Message {
 public:
  DataBlock();
  virtual ~DataBlock();

  DataBlock(const DataBlock& from);

  inline DataBlock& operator=(const DataBlock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataBlock& default_instance();

  void Swap(DataBlock* other);

  // implements Message ----------------------------------------------

  DataBlock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataBlock& from);
  void MergeFrom(const DataBlock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DataBlock_RetCode RetCode;
  static const RetCode OK = DataBlock_RetCode_OK;
  static const RetCode NOT_MODIFIED = DataBlock_RetCode_NOT_MODIFIED;
  static const RetCode LOCKED = DataBlock_RetCode_LOCKED;
  static const RetCode MISS = DataBlock_RetCode_MISS;
  static inline bool RetCode_IsValid(int value) {
    return DataBlock_RetCode_IsValid(value);
  }
  static const RetCode RetCode_MIN =
    DataBlock_RetCode_RetCode_MIN;
  static const RetCode RetCode_MAX =
    DataBlock_RetCode_RetCode_MAX;
  static const int RetCode_ARRAYSIZE =
    DataBlock_RetCode_RetCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RetCode_descriptor() {
    return DataBlock_RetCode_descriptor();
  }
  static inline const ::std::string& RetCode_Name(RetCode value) {
    return DataBlock_RetCode_Name(value);
  }
  static inline bool RetCode_Parse(const ::std::string& name,
      RetCode* value) {
    return DataBlock_RetCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional bytes buff = 2;
  inline bool has_buff() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 2;
  inline const ::std::string& buff() const;
  inline void set_buff(const ::std::string& value);
  inline void set_buff(const char* value);
  inline void set_buff(const void* value, size_t size);
  inline ::std::string* mutable_buff();
  inline ::std::string* release_buff();
  inline void set_allocated_buff(::std::string* buff);

  // optional fixed64 stamp = 3 [default = 0];
  inline bool has_stamp() const;
  inline void clear_stamp();
  static const int kStampFieldNumber = 3;
  inline ::google::protobuf::uint64 stamp() const;
  inline void set_stamp(::google::protobuf::uint64 value);

  // optional fixed64 lock = 4 [default = 0];
  inline bool has_lock() const;
  inline void clear_lock();
  static const int kLockFieldNumber = 4;
  inline ::google::protobuf::uint64 lock() const;
  inline void set_lock(::google::protobuf::uint64 value);

  // optional int32 unlock = 5 [default = 0];
  inline bool has_unlock() const;
  inline void clear_unlock();
  static const int kUnlockFieldNumber = 5;
  inline ::google::protobuf::int32 unlock() const;
  inline void set_unlock(::google::protobuf::int32 value);

  // optional .DataBlock.RetCode retcode = 6 [default = OK];
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 6;
  inline ::DataBlock_RetCode retcode() const;
  inline void set_retcode(::DataBlock_RetCode value);

  // @@protoc_insertion_point(class_scope:DataBlock)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_buff();
  inline void clear_has_buff();
  inline void set_has_stamp();
  inline void clear_has_stamp();
  inline void set_has_lock();
  inline void clear_has_lock();
  inline void set_has_unlock();
  inline void clear_has_unlock();
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* buff_;
  ::google::protobuf::uint64 stamp_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 unlock_;
  ::google::protobuf::uint64 lock_;
  int retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_datablock_2eproto();
  friend void protobuf_AssignDesc_datablock_2eproto();
  friend void protobuf_ShutdownFile_datablock_2eproto();

  void InitAsDefaultInstance();
  static DataBlock* default_instance_;
};
// -------------------------------------------------------------------

class DataBlockSet : public ::google::protobuf::Message {
 public:
  DataBlockSet();
  virtual ~DataBlockSet();

  DataBlockSet(const DataBlockSet& from);

  inline DataBlockSet& operator=(const DataBlockSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataBlockSet& default_instance();

  void Swap(DataBlockSet* other);

  // implements Message ----------------------------------------------

  DataBlockSet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataBlockSet& from);
  void MergeFrom(const DataBlockSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DataBlockSet_Result Result;
  static const Result FAIL = DataBlockSet_Result_FAIL;
  static const Result OK = DataBlockSet_Result_OK;
  static const Result LOCKED = DataBlockSet_Result_LOCKED;
  static const Result MISS = DataBlockSet_Result_MISS;
  static const Result NO_DATA = DataBlockSet_Result_NO_DATA;
  static inline bool Result_IsValid(int value) {
    return DataBlockSet_Result_IsValid(value);
  }
  static const Result Result_MIN =
    DataBlockSet_Result_Result_MIN;
  static const Result Result_MAX =
    DataBlockSet_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    DataBlockSet_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return DataBlockSet_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return DataBlockSet_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return DataBlockSet_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .DataBlock blocks = 1;
  inline int blocks_size() const;
  inline void clear_blocks();
  static const int kBlocksFieldNumber = 1;
  inline const ::DataBlock& blocks(int index) const;
  inline ::DataBlock* mutable_blocks(int index);
  inline ::DataBlock* add_blocks();
  inline const ::google::protobuf::RepeatedPtrField< ::DataBlock >&
      blocks() const;
  inline ::google::protobuf::RepeatedPtrField< ::DataBlock >*
      mutable_blocks();

  // optional .DataBlockSet.Result result = 2 [default = OK];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::DataBlockSet_Result result() const;
  inline void set_result(::DataBlockSet_Result value);

  // optional int32 noresp = 3 [default = 1];
  inline bool has_noresp() const;
  inline void clear_noresp();
  static const int kNorespFieldNumber = 3;
  inline ::google::protobuf::int32 noresp() const;
  inline void set_noresp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DataBlockSet)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_noresp();
  inline void clear_has_noresp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DataBlock > blocks_;
  int result_;
  ::google::protobuf::int32 noresp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_datablock_2eproto();
  friend void protobuf_AssignDesc_datablock_2eproto();
  friend void protobuf_ShutdownFile_datablock_2eproto();

  void InitAsDefaultInstance();
  static DataBlockSet* default_instance_;
};
// ===================================================================


// ===================================================================

// DataBlock

// required int32 id = 1;
inline bool DataBlock::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataBlock::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataBlock::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataBlock::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DataBlock::id() const {
  return id_;
}
inline void DataBlock::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional bytes buff = 2;
inline bool DataBlock::has_buff() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataBlock::set_has_buff() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataBlock::clear_has_buff() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataBlock::clear_buff() {
  if (buff_ != &::google::protobuf::internal::kEmptyString) {
    buff_->clear();
  }
  clear_has_buff();
}
inline const ::std::string& DataBlock::buff() const {
  return *buff_;
}
inline void DataBlock::set_buff(const ::std::string& value) {
  set_has_buff();
  if (buff_ == &::google::protobuf::internal::kEmptyString) {
    buff_ = new ::std::string;
  }
  buff_->assign(value);
}
inline void DataBlock::set_buff(const char* value) {
  set_has_buff();
  if (buff_ == &::google::protobuf::internal::kEmptyString) {
    buff_ = new ::std::string;
  }
  buff_->assign(value);
}
inline void DataBlock::set_buff(const void* value, size_t size) {
  set_has_buff();
  if (buff_ == &::google::protobuf::internal::kEmptyString) {
    buff_ = new ::std::string;
  }
  buff_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataBlock::mutable_buff() {
  set_has_buff();
  if (buff_ == &::google::protobuf::internal::kEmptyString) {
    buff_ = new ::std::string;
  }
  return buff_;
}
inline ::std::string* DataBlock::release_buff() {
  clear_has_buff();
  if (buff_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = buff_;
    buff_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataBlock::set_allocated_buff(::std::string* buff) {
  if (buff_ != &::google::protobuf::internal::kEmptyString) {
    delete buff_;
  }
  if (buff) {
    set_has_buff();
    buff_ = buff;
  } else {
    clear_has_buff();
    buff_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional fixed64 stamp = 3 [default = 0];
inline bool DataBlock::has_stamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataBlock::set_has_stamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataBlock::clear_has_stamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataBlock::clear_stamp() {
  stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_stamp();
}
inline ::google::protobuf::uint64 DataBlock::stamp() const {
  return stamp_;
}
inline void DataBlock::set_stamp(::google::protobuf::uint64 value) {
  set_has_stamp();
  stamp_ = value;
}

// optional fixed64 lock = 4 [default = 0];
inline bool DataBlock::has_lock() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DataBlock::set_has_lock() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DataBlock::clear_has_lock() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DataBlock::clear_lock() {
  lock_ = GOOGLE_ULONGLONG(0);
  clear_has_lock();
}
inline ::google::protobuf::uint64 DataBlock::lock() const {
  return lock_;
}
inline void DataBlock::set_lock(::google::protobuf::uint64 value) {
  set_has_lock();
  lock_ = value;
}

// optional int32 unlock = 5 [default = 0];
inline bool DataBlock::has_unlock() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DataBlock::set_has_unlock() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DataBlock::clear_has_unlock() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DataBlock::clear_unlock() {
  unlock_ = 0;
  clear_has_unlock();
}
inline ::google::protobuf::int32 DataBlock::unlock() const {
  return unlock_;
}
inline void DataBlock::set_unlock(::google::protobuf::int32 value) {
  set_has_unlock();
  unlock_ = value;
}

// optional .DataBlock.RetCode retcode = 6 [default = OK];
inline bool DataBlock::has_retcode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DataBlock::set_has_retcode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DataBlock::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DataBlock::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::DataBlock_RetCode DataBlock::retcode() const {
  return static_cast< ::DataBlock_RetCode >(retcode_);
}
inline void DataBlock::set_retcode(::DataBlock_RetCode value) {
  assert(::DataBlock_RetCode_IsValid(value));
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// DataBlockSet

// repeated .DataBlock blocks = 1;
inline int DataBlockSet::blocks_size() const {
  return blocks_.size();
}
inline void DataBlockSet::clear_blocks() {
  blocks_.Clear();
}
inline const ::DataBlock& DataBlockSet::blocks(int index) const {
  return blocks_.Get(index);
}
inline ::DataBlock* DataBlockSet::mutable_blocks(int index) {
  return blocks_.Mutable(index);
}
inline ::DataBlock* DataBlockSet::add_blocks() {
  return blocks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DataBlock >&
DataBlockSet::blocks() const {
  return blocks_;
}
inline ::google::protobuf::RepeatedPtrField< ::DataBlock >*
DataBlockSet::mutable_blocks() {
  return &blocks_;
}

// optional .DataBlockSet.Result result = 2 [default = OK];
inline bool DataBlockSet::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataBlockSet::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataBlockSet::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataBlockSet::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::DataBlockSet_Result DataBlockSet::result() const {
  return static_cast< ::DataBlockSet_Result >(result_);
}
inline void DataBlockSet::set_result(::DataBlockSet_Result value) {
  assert(::DataBlockSet_Result_IsValid(value));
  set_has_result();
  result_ = value;
}

// optional int32 noresp = 3 [default = 1];
inline bool DataBlockSet::has_noresp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataBlockSet::set_has_noresp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataBlockSet::clear_has_noresp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataBlockSet::clear_noresp() {
  noresp_ = 1;
  clear_has_noresp();
}
inline ::google::protobuf::int32 DataBlockSet::noresp() const {
  return noresp_;
}
inline void DataBlockSet::set_noresp(::google::protobuf::int32 value) {
  set_has_noresp();
  noresp_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DataBlock_RetCode>() {
  return ::DataBlock_RetCode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DataBlockSet_Result>() {
  return ::DataBlockSet_Result_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_datablock_2eproto__INCLUDED
