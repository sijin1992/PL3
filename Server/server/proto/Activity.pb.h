// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Activity.proto

#ifndef PROTOBUF_Activity_2eproto__INCLUDED
#define PROTOBUF_Activity_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Item.pb.h"
#include "Stage.pb.h"
#include "Trial.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Activity_2eproto();
void protobuf_AssignDesc_Activity_2eproto();
void protobuf_ShutdownFile_Activity_2eproto();

class ChangeData;
class RechargeData;
class ConsumeData;
class SignInData;
class SevenDaysData;
class CreditReturnData;
class OnlineData;
class PowerData;
class FirstRechargeData;
class GrowthFundData;
class InvestData;
class ChangeShipData;
class MonthSignData;
class Activity;

// ===================================================================

class ChangeData : public ::google::protobuf::Message {
 public:
  ChangeData();
  virtual ~ChangeData();

  ChangeData(const ChangeData& from);

  inline ChangeData& operator=(const ChangeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeData& default_instance();

  void Swap(ChangeData* other);

  // implements Message ----------------------------------------------

  ChangeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeData& from);
  void MergeFrom(const ChangeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pair limit_list = 1;
  inline int limit_list_size() const;
  inline void clear_limit_list();
  static const int kLimitListFieldNumber = 1;
  inline const ::Pair& limit_list(int index) const;
  inline ::Pair* mutable_limit_list(int index);
  inline ::Pair* add_limit_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Pair >&
      limit_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pair >*
      mutable_limit_list();

  // @@protoc_insertion_point(class_scope:ChangeData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Pair > limit_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2eproto();
  friend void protobuf_AssignDesc_Activity_2eproto();
  friend void protobuf_ShutdownFile_Activity_2eproto();

  void InitAsDefaultInstance();
  static ChangeData* default_instance_;
};
// -------------------------------------------------------------------

class RechargeData : public ::google::protobuf::Message {
 public:
  RechargeData();
  virtual ~RechargeData();

  RechargeData(const RechargeData& from);

  inline RechargeData& operator=(const RechargeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RechargeData& default_instance();

  void Swap(RechargeData* other);

  // implements Message ----------------------------------------------

  RechargeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RechargeData& from);
  void MergeFrom(const RechargeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 recharge_money = 1;
  inline bool has_recharge_money() const;
  inline void clear_recharge_money();
  static const int kRechargeMoneyFieldNumber = 1;
  inline ::google::protobuf::int32 recharge_money() const;
  inline void set_recharge_money(::google::protobuf::int32 value);

  // repeated int32 getted_id_list = 2;
  inline int getted_id_list_size() const;
  inline void clear_getted_id_list();
  static const int kGettedIdListFieldNumber = 2;
  inline ::google::protobuf::int32 getted_id_list(int index) const;
  inline void set_getted_id_list(int index, ::google::protobuf::int32 value);
  inline void add_getted_id_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      getted_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_getted_id_list();

  // @@protoc_insertion_point(class_scope:RechargeData)
 private:
  inline void set_has_recharge_money();
  inline void clear_has_recharge_money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > getted_id_list_;
  ::google::protobuf::int32 recharge_money_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2eproto();
  friend void protobuf_AssignDesc_Activity_2eproto();
  friend void protobuf_ShutdownFile_Activity_2eproto();

  void InitAsDefaultInstance();
  static RechargeData* default_instance_;
};
// -------------------------------------------------------------------

class ConsumeData : public ::google::protobuf::Message {
 public:
  ConsumeData();
  virtual ~ConsumeData();

  ConsumeData(const ConsumeData& from);

  inline ConsumeData& operator=(const ConsumeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConsumeData& default_instance();

  void Swap(ConsumeData* other);

  // implements Message ----------------------------------------------

  ConsumeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConsumeData& from);
  void MergeFrom(const ConsumeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 consume = 1;
  inline bool has_consume() const;
  inline void clear_consume();
  static const int kConsumeFieldNumber = 1;
  inline ::google::protobuf::int32 consume() const;
  inline void set_consume(::google::protobuf::int32 value);

  // repeated int32 getted_id_list = 2;
  inline int getted_id_list_size() const;
  inline void clear_getted_id_list();
  static const int kGettedIdListFieldNumber = 2;
  inline ::google::protobuf::int32 getted_id_list(int index) const;
  inline void set_getted_id_list(int index, ::google::protobuf::int32 value);
  inline void add_getted_id_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      getted_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_getted_id_list();

  // @@protoc_insertion_point(class_scope:ConsumeData)
 private:
  inline void set_has_consume();
  inline void clear_has_consume();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > getted_id_list_;
  ::google::protobuf::int32 consume_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2eproto();
  friend void protobuf_AssignDesc_Activity_2eproto();
  friend void protobuf_ShutdownFile_Activity_2eproto();

  void InitAsDefaultInstance();
  static ConsumeData* default_instance_;
};
// -------------------------------------------------------------------

class SignInData : public ::google::protobuf::Message {
 public:
  SignInData();
  virtual ~SignInData();

  SignInData(const SignInData& from);

  inline SignInData& operator=(const SignInData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SignInData& default_instance();

  void Swap(SignInData* other);

  // implements Message ----------------------------------------------

  SignInData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignInData& from);
  void MergeFrom(const SignInData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 cur_day = 1;
  inline bool has_cur_day() const;
  inline void clear_cur_day();
  static const int kCurDayFieldNumber = 1;
  inline ::google::protobuf::int32 cur_day() const;
  inline void set_cur_day(::google::protobuf::int32 value);

  // required bool getted_today = 2;
  inline bool has_getted_today() const;
  inline void clear_getted_today();
  static const int kGettedTodayFieldNumber = 2;
  inline bool getted_today() const;
  inline void set_getted_today(bool value);

  // @@protoc_insertion_point(class_scope:SignInData)
 private:
  inline void set_has_cur_day();
  inline void clear_has_cur_day();
  inline void set_has_getted_today();
  inline void clear_has_getted_today();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 cur_day_;
  bool getted_today_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2eproto();
  friend void protobuf_AssignDesc_Activity_2eproto();
  friend void protobuf_ShutdownFile_Activity_2eproto();

  void InitAsDefaultInstance();
  static SignInData* default_instance_;
};
// -------------------------------------------------------------------

class SevenDaysData : public ::google::protobuf::Message {
 public:
  SevenDaysData();
  virtual ~SevenDaysData();

  SevenDaysData(const SevenDaysData& from);

  inline SevenDaysData& operator=(const SevenDaysData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SevenDaysData& default_instance();

  void Swap(SevenDaysData* other);

  // implements Message ----------------------------------------------

  SevenDaysData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SevenDaysData& from);
  void MergeFrom(const SevenDaysData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 getted_reward_list = 1;
  inline int getted_reward_list_size() const;
  inline void clear_getted_reward_list();
  static const int kGettedRewardListFieldNumber = 1;
  inline ::google::protobuf::int32 getted_reward_list(int index) const;
  inline void set_getted_reward_list(int index, ::google::protobuf::int32 value);
  inline void add_getted_reward_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      getted_reward_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_getted_reward_list();

  // repeated .LevelInfo level_info = 2;
  inline int level_info_size() const;
  inline void clear_level_info();
  static const int kLevelInfoFieldNumber = 2;
  inline const ::LevelInfo& level_info(int index) const;
  inline ::LevelInfo* mutable_level_info(int index);
  inline ::LevelInfo* add_level_info();
  inline const ::google::protobuf::RepeatedPtrField< ::LevelInfo >&
      level_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::LevelInfo >*
      mutable_level_info();

  // optional int32 building_levelup_count = 3;
  inline bool has_building_levelup_count() const;
  inline void clear_building_levelup_count();
  static const int kBuildingLevelupCountFieldNumber = 3;
  inline ::google::protobuf::int32 building_levelup_count() const;
  inline void set_building_levelup_count(::google::protobuf::int32 value);

  // optional int32 home_levelup_count = 4;
  inline bool has_home_levelup_count() const;
  inline void clear_home_levelup_count();
  static const int kHomeLevelupCountFieldNumber = 4;
  inline ::google::protobuf::int32 home_levelup_count() const;
  inline void set_home_levelup_count(::google::protobuf::int32 value);

  // optional int32 ship_levelup_count = 5;
  inline bool has_ship_levelup_count() const;
  inline void clear_ship_levelup_count();
  static const int kShipLevelupCountFieldNumber = 5;
  inline ::google::protobuf::int32 ship_levelup_count() const;
  inline void set_ship_levelup_count(::google::protobuf::int32 value);

  // optional int32 equip_strength_count = 6;
  inline bool has_equip_strength_count() const;
  inline void clear_equip_strength_count();
  static const int kEquipStrengthCountFieldNumber = 6;
  inline ::google::protobuf::int32 equip_strength_count() const;
  inline void set_equip_strength_count(::google::protobuf::int32 value);

  // optional int32 ship_break_count = 7;
  inline bool has_ship_break_count() const;
  inline void clear_ship_break_count();
  static const int kShipBreakCountFieldNumber = 7;
  inline ::google::protobuf::int32 ship_break_count() const;
  inline void set_ship_break_count(::google::protobuf::int32 value);

  // optional int32 already_challenge_times = 8;
  inline bool has_already_challenge_times() const;
  inline void clear_already_challenge_times();
  static const int kAlreadyChallengeTimesFieldNumber = 8;
  inline ::google::protobuf::int32 already_challenge_times() const;
  inline void set_already_challenge_times(::google::protobuf::int32 value);

  // optional int32 win_challenge_times = 9;
  inline bool has_win_challenge_times() const;
  inline void clear_win_challenge_times();
  static const int kWinChallengeTimesFieldNumber = 9;
  inline ::google::protobuf::int32 win_challenge_times() const;
  inline void set_win_challenge_times(::google::protobuf::int32 value);

  // optional int32 contribute_times = 10;
  inline bool has_contribute_times() const;
  inline void clear_contribute_times();
  static const int kContributeTimesFieldNumber = 10;
  inline ::google::protobuf::int32 contribute_times() const;
  inline void set_contribute_times(::google::protobuf::int32 value);

  // optional int32 recharge_money = 11;
  inline bool has_recharge_money() const;
  inline void clear_recharge_money();
  static const int kRechargeMoneyFieldNumber = 11;
  inline ::google::protobuf::int32 recharge_money() const;
  inline void set_recharge_money(::google::protobuf::int32 value);

  // optional int32 consume_money = 12;
  inline bool has_consume_money() const;
  inline void clear_consume_money();
  static const int kConsumeMoneyFieldNumber = 12;
  inline ::google::protobuf::int32 consume_money() const;
  inline void set_consume_money(::google::protobuf::int32 value);

  // optional int32 sign_in_days = 13;
  inline bool has_sign_in_days() const;
  inline void clear_sign_in_days();
  static const int kSignInDaysFieldNumber = 13;
  inline ::google::protobuf::int32 sign_in_days() const;
  inline void set_sign_in_days(::google::protobuf::int32 value);

  // optional int32 lottery_count = 14;
  inline bool has_lottery_count() const;
  inline void clear_lottery_count();
  static const int kLotteryCountFieldNumber = 14;
  inline ::google::protobuf::int32 lottery_count() const;
  inline void set_lottery_count(::google::protobuf::int32 value);

  // optional int32 money_lottery_count = 15;
  inline bool has_money_lottery_count() const;
  inline void clear_money_lottery_count();
  static const int kMoneyLotteryCountFieldNumber = 15;
  inline ::google::protobuf::int32 money_lottery_count() const;
  inline void set_money_lottery_count(::google::protobuf::int32 value);

  // repeated .TrialLevel trial_level_list = 16;
  inline int trial_level_list_size() const;
  inline void clear_trial_level_list();
  static const int kTrialLevelListFieldNumber = 16;
  inline const ::TrialLevel& trial_level_list(int index) const;
  inline ::TrialLevel* mutable_trial_level_list(int index);
  inline ::TrialLevel* add_trial_level_list();
  inline const ::google::protobuf::RepeatedPtrField< ::TrialLevel >&
      trial_level_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::TrialLevel >*
      mutable_trial_level_list();

  // optional int32 technology_levelup_count = 17;
  inline bool has_technology_levelup_count() const;
  inline void clear_technology_levelup_count();
  static const int kTechnologyLevelupCountFieldNumber = 17;
  inline ::google::protobuf::int32 technology_levelup_count() const;
  inline void set_technology_levelup_count(::google::protobuf::int32 value);

  // optional int32 weapon_levelup_count = 18;
  inline bool has_weapon_levelup_count() const;
  inline void clear_weapon_levelup_count();
  static const int kWeaponLevelupCountFieldNumber = 18;
  inline ::google::protobuf::int32 weapon_levelup_count() const;
  inline void set_weapon_levelup_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SevenDaysData)
 private:
  inline void set_has_building_levelup_count();
  inline void clear_has_building_levelup_count();
  inline void set_has_home_levelup_count();
  inline void clear_has_home_levelup_count();
  inline void set_has_ship_levelup_count();
  inline void clear_has_ship_levelup_count();
  inline void set_has_equip_strength_count();
  inline void clear_has_equip_strength_count();
  inline void set_has_ship_break_count();
  inline void clear_has_ship_break_count();
  inline void set_has_already_challenge_times();
  inline void clear_has_already_challenge_times();
  inline void set_has_win_challenge_times();
  inline void clear_has_win_challenge_times();
  inline void set_has_contribute_times();
  inline void clear_has_contribute_times();
  inline void set_has_recharge_money();
  inline void clear_has_recharge_money();
  inline void set_has_consume_money();
  inline void clear_has_consume_money();
  inline void set_has_sign_in_days();
  inline void clear_has_sign_in_days();
  inline void set_has_lottery_count();
  inline void clear_has_lottery_count();
  inline void set_has_money_lottery_count();
  inline void clear_has_money_lottery_count();
  inline void set_has_technology_levelup_count();
  inline void clear_has_technology_levelup_count();
  inline void set_has_weapon_levelup_count();
  inline void clear_has_weapon_levelup_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > getted_reward_list_;
  ::google::protobuf::RepeatedPtrField< ::LevelInfo > level_info_;
  ::google::protobuf::int32 building_levelup_count_;
  ::google::protobuf::int32 home_levelup_count_;
  ::google::protobuf::int32 ship_levelup_count_;
  ::google::protobuf::int32 equip_strength_count_;
  ::google::protobuf::int32 ship_break_count_;
  ::google::protobuf::int32 already_challenge_times_;
  ::google::protobuf::int32 win_challenge_times_;
  ::google::protobuf::int32 contribute_times_;
  ::google::protobuf::int32 recharge_money_;
  ::google::protobuf::int32 consume_money_;
  ::google::protobuf::int32 sign_in_days_;
  ::google::protobuf::int32 lottery_count_;
  ::google::protobuf::RepeatedPtrField< ::TrialLevel > trial_level_list_;
  ::google::protobuf::int32 money_lottery_count_;
  ::google::protobuf::int32 technology_levelup_count_;
  ::google::protobuf::int32 weapon_levelup_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2eproto();
  friend void protobuf_AssignDesc_Activity_2eproto();
  friend void protobuf_ShutdownFile_Activity_2eproto();

  void InitAsDefaultInstance();
  static SevenDaysData* default_instance_;
};
// -------------------------------------------------------------------

class CreditReturnData : public ::google::protobuf::Message {
 public:
  CreditReturnData();
  virtual ~CreditReturnData();

  CreditReturnData(const CreditReturnData& from);

  inline CreditReturnData& operator=(const CreditReturnData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreditReturnData& default_instance();

  void Swap(CreditReturnData* other);

  // implements Message ----------------------------------------------

  CreditReturnData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreditReturnData& from);
  void MergeFrom(const CreditReturnData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 return_index = 1;
  inline bool has_return_index() const;
  inline void clear_return_index();
  static const int kReturnIndexFieldNumber = 1;
  inline ::google::protobuf::int32 return_index() const;
  inline void set_return_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CreditReturnData)
 private:
  inline void set_has_return_index();
  inline void clear_has_return_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 return_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2eproto();
  friend void protobuf_AssignDesc_Activity_2eproto();
  friend void protobuf_ShutdownFile_Activity_2eproto();

  void InitAsDefaultInstance();
  static CreditReturnData* default_instance_;
};
// -------------------------------------------------------------------

class OnlineData : public ::google::protobuf::Message {
 public:
  OnlineData();
  virtual ~OnlineData();

  OnlineData(const OnlineData& from);

  inline OnlineData& operator=(const OnlineData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnlineData& default_instance();

  void Swap(OnlineData* other);

  // implements Message ----------------------------------------------

  OnlineData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OnlineData& from);
  void MergeFrom(const OnlineData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 get_indexs = 1;
  inline int get_indexs_size() const;
  inline void clear_get_indexs();
  static const int kGetIndexsFieldNumber = 1;
  inline ::google::protobuf::int32 get_indexs(int index) const;
  inline void set_get_indexs(int index, ::google::protobuf::int32 value);
  inline void add_get_indexs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      get_indexs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_get_indexs();

  // @@protoc_insertion_point(class_scope:OnlineData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > get_indexs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2eproto();
  friend void protobuf_AssignDesc_Activity_2eproto();
  friend void protobuf_ShutdownFile_Activity_2eproto();

  void InitAsDefaultInstance();
  static OnlineData* default_instance_;
};
// -------------------------------------------------------------------

class PowerData : public ::google::protobuf::Message {
 public:
  PowerData();
  virtual ~PowerData();

  PowerData(const PowerData& from);

  inline PowerData& operator=(const PowerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PowerData& default_instance();

  void Swap(PowerData* other);

  // implements Message ----------------------------------------------

  PowerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PowerData& from);
  void MergeFrom(const PowerData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 get_indexs = 1;
  inline int get_indexs_size() const;
  inline void clear_get_indexs();
  static const int kGetIndexsFieldNumber = 1;
  inline ::google::protobuf::int32 get_indexs(int index) const;
  inline void set_get_indexs(int index, ::google::protobuf::int32 value);
  inline void add_get_indexs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      get_indexs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_get_indexs();

  // @@protoc_insertion_point(class_scope:PowerData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > get_indexs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2eproto();
  friend void protobuf_AssignDesc_Activity_2eproto();
  friend void protobuf_ShutdownFile_Activity_2eproto();

  void InitAsDefaultInstance();
  static PowerData* default_instance_;
};
// -------------------------------------------------------------------

class FirstRechargeData : public ::google::protobuf::Message {
 public:
  FirstRechargeData();
  virtual ~FirstRechargeData();

  FirstRechargeData(const FirstRechargeData& from);

  inline FirstRechargeData& operator=(const FirstRechargeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FirstRechargeData& default_instance();

  void Swap(FirstRechargeData* other);

  // implements Message ----------------------------------------------

  FirstRechargeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FirstRechargeData& from);
  void MergeFrom(const FirstRechargeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool getted_reward = 1;
  inline bool has_getted_reward() const;
  inline void clear_getted_reward();
  static const int kGettedRewardFieldNumber = 1;
  inline bool getted_reward() const;
  inline void set_getted_reward(bool value);

  // @@protoc_insertion_point(class_scope:FirstRechargeData)
 private:
  inline void set_has_getted_reward();
  inline void clear_has_getted_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool getted_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2eproto();
  friend void protobuf_AssignDesc_Activity_2eproto();
  friend void protobuf_ShutdownFile_Activity_2eproto();

  void InitAsDefaultInstance();
  static FirstRechargeData* default_instance_;
};
// -------------------------------------------------------------------

class GrowthFundData : public ::google::protobuf::Message {
 public:
  GrowthFundData();
  virtual ~GrowthFundData();

  GrowthFundData(const GrowthFundData& from);

  inline GrowthFundData& operator=(const GrowthFundData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GrowthFundData& default_instance();

  void Swap(GrowthFundData* other);

  // implements Message ----------------------------------------------

  GrowthFundData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GrowthFundData& from);
  void MergeFrom(const GrowthFundData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool purchased = 1;
  inline bool has_purchased() const;
  inline void clear_purchased();
  static const int kPurchasedFieldNumber = 1;
  inline bool purchased() const;
  inline void set_purchased(bool value);

  // repeated int32 get_indexs = 2;
  inline int get_indexs_size() const;
  inline void clear_get_indexs();
  static const int kGetIndexsFieldNumber = 2;
  inline ::google::protobuf::int32 get_indexs(int index) const;
  inline void set_get_indexs(int index, ::google::protobuf::int32 value);
  inline void add_get_indexs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      get_indexs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_get_indexs();

  // @@protoc_insertion_point(class_scope:GrowthFundData)
 private:
  inline void set_has_purchased();
  inline void clear_has_purchased();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > get_indexs_;
  bool purchased_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2eproto();
  friend void protobuf_AssignDesc_Activity_2eproto();
  friend void protobuf_ShutdownFile_Activity_2eproto();

  void InitAsDefaultInstance();
  static GrowthFundData* default_instance_;
};
// -------------------------------------------------------------------

class InvestData : public ::google::protobuf::Message {
 public:
  InvestData();
  virtual ~InvestData();

  InvestData(const InvestData& from);

  inline InvestData& operator=(const InvestData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InvestData& default_instance();

  void Swap(InvestData* other);

  // implements Message ----------------------------------------------

  InvestData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InvestData& from);
  void MergeFrom(const InvestData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int64 start_time = 2;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:InvestData)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_start_time();
  inline void clear_has_start_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2eproto();
  friend void protobuf_AssignDesc_Activity_2eproto();
  friend void protobuf_ShutdownFile_Activity_2eproto();

  void InitAsDefaultInstance();
  static InvestData* default_instance_;
};
// -------------------------------------------------------------------

class ChangeShipData : public ::google::protobuf::Message {
 public:
  ChangeShipData();
  virtual ~ChangeShipData();

  ChangeShipData(const ChangeShipData& from);

  inline ChangeShipData& operator=(const ChangeShipData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeShipData& default_instance();

  void Swap(ChangeShipData* other);

  // implements Message ----------------------------------------------

  ChangeShipData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeShipData& from);
  void MergeFrom(const ChangeShipData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool getted_reward = 1;
  inline bool has_getted_reward() const;
  inline void clear_getted_reward();
  static const int kGettedRewardFieldNumber = 1;
  inline bool getted_reward() const;
  inline void set_getted_reward(bool value);

  // @@protoc_insertion_point(class_scope:ChangeShipData)
 private:
  inline void set_has_getted_reward();
  inline void clear_has_getted_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool getted_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2eproto();
  friend void protobuf_AssignDesc_Activity_2eproto();
  friend void protobuf_ShutdownFile_Activity_2eproto();

  void InitAsDefaultInstance();
  static ChangeShipData* default_instance_;
};
// -------------------------------------------------------------------

class MonthSignData : public ::google::protobuf::Message {
 public:
  MonthSignData();
  virtual ~MonthSignData();

  MonthSignData(const MonthSignData& from);

  inline MonthSignData& operator=(const MonthSignData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MonthSignData& default_instance();

  void Swap(MonthSignData* other);

  // implements Message ----------------------------------------------

  MonthSignData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MonthSignData& from);
  void MergeFrom(const MonthSignData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 resign_times = 1;
  inline bool has_resign_times() const;
  inline void clear_resign_times();
  static const int kResignTimesFieldNumber = 1;
  inline ::google::protobuf::int32 resign_times() const;
  inline void set_resign_times(::google::protobuf::int32 value);

  // repeated int32 get_nums = 2;
  inline int get_nums_size() const;
  inline void clear_get_nums();
  static const int kGetNumsFieldNumber = 2;
  inline ::google::protobuf::int32 get_nums(int index) const;
  inline void set_get_nums(int index, ::google::protobuf::int32 value);
  inline void add_get_nums(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      get_nums() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_get_nums();

  // repeated bool get_rewards = 3;
  inline int get_rewards_size() const;
  inline void clear_get_rewards();
  static const int kGetRewardsFieldNumber = 3;
  inline bool get_rewards(int index) const;
  inline void set_get_rewards(int index, bool value);
  inline void add_get_rewards(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      get_rewards() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_get_rewards();

  // @@protoc_insertion_point(class_scope:MonthSignData)
 private:
  inline void set_has_resign_times();
  inline void clear_has_resign_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > get_nums_;
  ::google::protobuf::RepeatedField< bool > get_rewards_;
  ::google::protobuf::int32 resign_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2eproto();
  friend void protobuf_AssignDesc_Activity_2eproto();
  friend void protobuf_ShutdownFile_Activity_2eproto();

  void InitAsDefaultInstance();
  static MonthSignData* default_instance_;
};
// -------------------------------------------------------------------

class Activity : public ::google::protobuf::Message {
 public:
  Activity();
  virtual ~Activity();

  Activity(const Activity& from);

  inline Activity& operator=(const Activity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Activity& default_instance();

  void Swap(Activity* other);

  // implements Message ----------------------------------------------

  Activity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Activity& from);
  void MergeFrom(const Activity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int64 start_time = 3;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 3;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // required int64 end_time = 4;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // optional .ChangeData change_data = 5;
  inline bool has_change_data() const;
  inline void clear_change_data();
  static const int kChangeDataFieldNumber = 5;
  inline const ::ChangeData& change_data() const;
  inline ::ChangeData* mutable_change_data();
  inline ::ChangeData* release_change_data();
  inline void set_allocated_change_data(::ChangeData* change_data);

  // optional .RechargeData recharge_data = 6;
  inline bool has_recharge_data() const;
  inline void clear_recharge_data();
  static const int kRechargeDataFieldNumber = 6;
  inline const ::RechargeData& recharge_data() const;
  inline ::RechargeData* mutable_recharge_data();
  inline ::RechargeData* release_recharge_data();
  inline void set_allocated_recharge_data(::RechargeData* recharge_data);

  // optional .SignInData sign_in_data = 7;
  inline bool has_sign_in_data() const;
  inline void clear_sign_in_data();
  static const int kSignInDataFieldNumber = 7;
  inline const ::SignInData& sign_in_data() const;
  inline ::SignInData* mutable_sign_in_data();
  inline ::SignInData* release_sign_in_data();
  inline void set_allocated_sign_in_data(::SignInData* sign_in_data);

  // optional .SevenDaysData seven_days_data = 8;
  inline bool has_seven_days_data() const;
  inline void clear_seven_days_data();
  static const int kSevenDaysDataFieldNumber = 8;
  inline const ::SevenDaysData& seven_days_data() const;
  inline ::SevenDaysData* mutable_seven_days_data();
  inline ::SevenDaysData* release_seven_days_data();
  inline void set_allocated_seven_days_data(::SevenDaysData* seven_days_data);

  // optional .FirstRechargeData first_recharge_data = 9;
  inline bool has_first_recharge_data() const;
  inline void clear_first_recharge_data();
  static const int kFirstRechargeDataFieldNumber = 9;
  inline const ::FirstRechargeData& first_recharge_data() const;
  inline ::FirstRechargeData* mutable_first_recharge_data();
  inline ::FirstRechargeData* release_first_recharge_data();
  inline void set_allocated_first_recharge_data(::FirstRechargeData* first_recharge_data);

  // optional .CreditReturnData credit_retrun_data = 10;
  inline bool has_credit_retrun_data() const;
  inline void clear_credit_retrun_data();
  static const int kCreditRetrunDataFieldNumber = 10;
  inline const ::CreditReturnData& credit_retrun_data() const;
  inline ::CreditReturnData* mutable_credit_retrun_data();
  inline ::CreditReturnData* release_credit_retrun_data();
  inline void set_allocated_credit_retrun_data(::CreditReturnData* credit_retrun_data);

  // optional .ConsumeData consume_data = 11;
  inline bool has_consume_data() const;
  inline void clear_consume_data();
  static const int kConsumeDataFieldNumber = 11;
  inline const ::ConsumeData& consume_data() const;
  inline ::ConsumeData* mutable_consume_data();
  inline ::ConsumeData* release_consume_data();
  inline void set_allocated_consume_data(::ConsumeData* consume_data);

  // optional .OnlineData online_data = 12;
  inline bool has_online_data() const;
  inline void clear_online_data();
  static const int kOnlineDataFieldNumber = 12;
  inline const ::OnlineData& online_data() const;
  inline ::OnlineData* mutable_online_data();
  inline ::OnlineData* release_online_data();
  inline void set_allocated_online_data(::OnlineData* online_data);

  // optional .PowerData power_data = 13;
  inline bool has_power_data() const;
  inline void clear_power_data();
  static const int kPowerDataFieldNumber = 13;
  inline const ::PowerData& power_data() const;
  inline ::PowerData* mutable_power_data();
  inline ::PowerData* release_power_data();
  inline void set_allocated_power_data(::PowerData* power_data);

  // optional .GrowthFundData growth_fund_data = 14;
  inline bool has_growth_fund_data() const;
  inline void clear_growth_fund_data();
  static const int kGrowthFundDataFieldNumber = 14;
  inline const ::GrowthFundData& growth_fund_data() const;
  inline ::GrowthFundData* mutable_growth_fund_data();
  inline ::GrowthFundData* release_growth_fund_data();
  inline void set_allocated_growth_fund_data(::GrowthFundData* growth_fund_data);

  // optional .InvestData invest_data = 15;
  inline bool has_invest_data() const;
  inline void clear_invest_data();
  static const int kInvestDataFieldNumber = 15;
  inline const ::InvestData& invest_data() const;
  inline ::InvestData* mutable_invest_data();
  inline ::InvestData* release_invest_data();
  inline void set_allocated_invest_data(::InvestData* invest_data);

  // optional .ChangeShipData change_ship_data = 16;
  inline bool has_change_ship_data() const;
  inline void clear_change_ship_data();
  static const int kChangeShipDataFieldNumber = 16;
  inline const ::ChangeShipData& change_ship_data() const;
  inline ::ChangeShipData* mutable_change_ship_data();
  inline ::ChangeShipData* release_change_ship_data();
  inline void set_allocated_change_ship_data(::ChangeShipData* change_ship_data);

  // optional .MonthSignData month_sign_data = 17;
  inline bool has_month_sign_data() const;
  inline void clear_month_sign_data();
  static const int kMonthSignDataFieldNumber = 17;
  inline const ::MonthSignData& month_sign_data() const;
  inline ::MonthSignData* mutable_month_sign_data();
  inline ::MonthSignData* release_month_sign_data();
  inline void set_allocated_month_sign_data(::MonthSignData* month_sign_data);

  // @@protoc_insertion_point(class_scope:Activity)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_change_data();
  inline void clear_has_change_data();
  inline void set_has_recharge_data();
  inline void clear_has_recharge_data();
  inline void set_has_sign_in_data();
  inline void clear_has_sign_in_data();
  inline void set_has_seven_days_data();
  inline void clear_has_seven_days_data();
  inline void set_has_first_recharge_data();
  inline void clear_has_first_recharge_data();
  inline void set_has_credit_retrun_data();
  inline void clear_has_credit_retrun_data();
  inline void set_has_consume_data();
  inline void clear_has_consume_data();
  inline void set_has_online_data();
  inline void clear_has_online_data();
  inline void set_has_power_data();
  inline void clear_has_power_data();
  inline void set_has_growth_fund_data();
  inline void clear_has_growth_fund_data();
  inline void set_has_invest_data();
  inline void clear_has_invest_data();
  inline void set_has_change_ship_data();
  inline void clear_has_change_ship_data();
  inline void set_has_month_sign_data();
  inline void clear_has_month_sign_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int64 end_time_;
  ::ChangeData* change_data_;
  ::RechargeData* recharge_data_;
  ::SignInData* sign_in_data_;
  ::SevenDaysData* seven_days_data_;
  ::FirstRechargeData* first_recharge_data_;
  ::CreditReturnData* credit_retrun_data_;
  ::ConsumeData* consume_data_;
  ::OnlineData* online_data_;
  ::PowerData* power_data_;
  ::GrowthFundData* growth_fund_data_;
  ::InvestData* invest_data_;
  ::ChangeShipData* change_ship_data_;
  ::MonthSignData* month_sign_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_Activity_2eproto();
  friend void protobuf_AssignDesc_Activity_2eproto();
  friend void protobuf_ShutdownFile_Activity_2eproto();

  void InitAsDefaultInstance();
  static Activity* default_instance_;
};
// ===================================================================


// ===================================================================

// ChangeData

// repeated .Pair limit_list = 1;
inline int ChangeData::limit_list_size() const {
  return limit_list_.size();
}
inline void ChangeData::clear_limit_list() {
  limit_list_.Clear();
}
inline const ::Pair& ChangeData::limit_list(int index) const {
  return limit_list_.Get(index);
}
inline ::Pair* ChangeData::mutable_limit_list(int index) {
  return limit_list_.Mutable(index);
}
inline ::Pair* ChangeData::add_limit_list() {
  return limit_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pair >&
ChangeData::limit_list() const {
  return limit_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pair >*
ChangeData::mutable_limit_list() {
  return &limit_list_;
}

// -------------------------------------------------------------------

// RechargeData

// required int32 recharge_money = 1;
inline bool RechargeData::has_recharge_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RechargeData::set_has_recharge_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RechargeData::clear_has_recharge_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RechargeData::clear_recharge_money() {
  recharge_money_ = 0;
  clear_has_recharge_money();
}
inline ::google::protobuf::int32 RechargeData::recharge_money() const {
  return recharge_money_;
}
inline void RechargeData::set_recharge_money(::google::protobuf::int32 value) {
  set_has_recharge_money();
  recharge_money_ = value;
}

// repeated int32 getted_id_list = 2;
inline int RechargeData::getted_id_list_size() const {
  return getted_id_list_.size();
}
inline void RechargeData::clear_getted_id_list() {
  getted_id_list_.Clear();
}
inline ::google::protobuf::int32 RechargeData::getted_id_list(int index) const {
  return getted_id_list_.Get(index);
}
inline void RechargeData::set_getted_id_list(int index, ::google::protobuf::int32 value) {
  getted_id_list_.Set(index, value);
}
inline void RechargeData::add_getted_id_list(::google::protobuf::int32 value) {
  getted_id_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RechargeData::getted_id_list() const {
  return getted_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RechargeData::mutable_getted_id_list() {
  return &getted_id_list_;
}

// -------------------------------------------------------------------

// ConsumeData

// required int32 consume = 1;
inline bool ConsumeData::has_consume() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConsumeData::set_has_consume() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConsumeData::clear_has_consume() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConsumeData::clear_consume() {
  consume_ = 0;
  clear_has_consume();
}
inline ::google::protobuf::int32 ConsumeData::consume() const {
  return consume_;
}
inline void ConsumeData::set_consume(::google::protobuf::int32 value) {
  set_has_consume();
  consume_ = value;
}

// repeated int32 getted_id_list = 2;
inline int ConsumeData::getted_id_list_size() const {
  return getted_id_list_.size();
}
inline void ConsumeData::clear_getted_id_list() {
  getted_id_list_.Clear();
}
inline ::google::protobuf::int32 ConsumeData::getted_id_list(int index) const {
  return getted_id_list_.Get(index);
}
inline void ConsumeData::set_getted_id_list(int index, ::google::protobuf::int32 value) {
  getted_id_list_.Set(index, value);
}
inline void ConsumeData::add_getted_id_list(::google::protobuf::int32 value) {
  getted_id_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ConsumeData::getted_id_list() const {
  return getted_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ConsumeData::mutable_getted_id_list() {
  return &getted_id_list_;
}

// -------------------------------------------------------------------

// SignInData

// required int32 cur_day = 1;
inline bool SignInData::has_cur_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SignInData::set_has_cur_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SignInData::clear_has_cur_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SignInData::clear_cur_day() {
  cur_day_ = 0;
  clear_has_cur_day();
}
inline ::google::protobuf::int32 SignInData::cur_day() const {
  return cur_day_;
}
inline void SignInData::set_cur_day(::google::protobuf::int32 value) {
  set_has_cur_day();
  cur_day_ = value;
}

// required bool getted_today = 2;
inline bool SignInData::has_getted_today() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SignInData::set_has_getted_today() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SignInData::clear_has_getted_today() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SignInData::clear_getted_today() {
  getted_today_ = false;
  clear_has_getted_today();
}
inline bool SignInData::getted_today() const {
  return getted_today_;
}
inline void SignInData::set_getted_today(bool value) {
  set_has_getted_today();
  getted_today_ = value;
}

// -------------------------------------------------------------------

// SevenDaysData

// repeated int32 getted_reward_list = 1;
inline int SevenDaysData::getted_reward_list_size() const {
  return getted_reward_list_.size();
}
inline void SevenDaysData::clear_getted_reward_list() {
  getted_reward_list_.Clear();
}
inline ::google::protobuf::int32 SevenDaysData::getted_reward_list(int index) const {
  return getted_reward_list_.Get(index);
}
inline void SevenDaysData::set_getted_reward_list(int index, ::google::protobuf::int32 value) {
  getted_reward_list_.Set(index, value);
}
inline void SevenDaysData::add_getted_reward_list(::google::protobuf::int32 value) {
  getted_reward_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SevenDaysData::getted_reward_list() const {
  return getted_reward_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SevenDaysData::mutable_getted_reward_list() {
  return &getted_reward_list_;
}

// repeated .LevelInfo level_info = 2;
inline int SevenDaysData::level_info_size() const {
  return level_info_.size();
}
inline void SevenDaysData::clear_level_info() {
  level_info_.Clear();
}
inline const ::LevelInfo& SevenDaysData::level_info(int index) const {
  return level_info_.Get(index);
}
inline ::LevelInfo* SevenDaysData::mutable_level_info(int index) {
  return level_info_.Mutable(index);
}
inline ::LevelInfo* SevenDaysData::add_level_info() {
  return level_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::LevelInfo >&
SevenDaysData::level_info() const {
  return level_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::LevelInfo >*
SevenDaysData::mutable_level_info() {
  return &level_info_;
}

// optional int32 building_levelup_count = 3;
inline bool SevenDaysData::has_building_levelup_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SevenDaysData::set_has_building_levelup_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SevenDaysData::clear_has_building_levelup_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SevenDaysData::clear_building_levelup_count() {
  building_levelup_count_ = 0;
  clear_has_building_levelup_count();
}
inline ::google::protobuf::int32 SevenDaysData::building_levelup_count() const {
  return building_levelup_count_;
}
inline void SevenDaysData::set_building_levelup_count(::google::protobuf::int32 value) {
  set_has_building_levelup_count();
  building_levelup_count_ = value;
}

// optional int32 home_levelup_count = 4;
inline bool SevenDaysData::has_home_levelup_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SevenDaysData::set_has_home_levelup_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SevenDaysData::clear_has_home_levelup_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SevenDaysData::clear_home_levelup_count() {
  home_levelup_count_ = 0;
  clear_has_home_levelup_count();
}
inline ::google::protobuf::int32 SevenDaysData::home_levelup_count() const {
  return home_levelup_count_;
}
inline void SevenDaysData::set_home_levelup_count(::google::protobuf::int32 value) {
  set_has_home_levelup_count();
  home_levelup_count_ = value;
}

// optional int32 ship_levelup_count = 5;
inline bool SevenDaysData::has_ship_levelup_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SevenDaysData::set_has_ship_levelup_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SevenDaysData::clear_has_ship_levelup_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SevenDaysData::clear_ship_levelup_count() {
  ship_levelup_count_ = 0;
  clear_has_ship_levelup_count();
}
inline ::google::protobuf::int32 SevenDaysData::ship_levelup_count() const {
  return ship_levelup_count_;
}
inline void SevenDaysData::set_ship_levelup_count(::google::protobuf::int32 value) {
  set_has_ship_levelup_count();
  ship_levelup_count_ = value;
}

// optional int32 equip_strength_count = 6;
inline bool SevenDaysData::has_equip_strength_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SevenDaysData::set_has_equip_strength_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SevenDaysData::clear_has_equip_strength_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SevenDaysData::clear_equip_strength_count() {
  equip_strength_count_ = 0;
  clear_has_equip_strength_count();
}
inline ::google::protobuf::int32 SevenDaysData::equip_strength_count() const {
  return equip_strength_count_;
}
inline void SevenDaysData::set_equip_strength_count(::google::protobuf::int32 value) {
  set_has_equip_strength_count();
  equip_strength_count_ = value;
}

// optional int32 ship_break_count = 7;
inline bool SevenDaysData::has_ship_break_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SevenDaysData::set_has_ship_break_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SevenDaysData::clear_has_ship_break_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SevenDaysData::clear_ship_break_count() {
  ship_break_count_ = 0;
  clear_has_ship_break_count();
}
inline ::google::protobuf::int32 SevenDaysData::ship_break_count() const {
  return ship_break_count_;
}
inline void SevenDaysData::set_ship_break_count(::google::protobuf::int32 value) {
  set_has_ship_break_count();
  ship_break_count_ = value;
}

// optional int32 already_challenge_times = 8;
inline bool SevenDaysData::has_already_challenge_times() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SevenDaysData::set_has_already_challenge_times() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SevenDaysData::clear_has_already_challenge_times() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SevenDaysData::clear_already_challenge_times() {
  already_challenge_times_ = 0;
  clear_has_already_challenge_times();
}
inline ::google::protobuf::int32 SevenDaysData::already_challenge_times() const {
  return already_challenge_times_;
}
inline void SevenDaysData::set_already_challenge_times(::google::protobuf::int32 value) {
  set_has_already_challenge_times();
  already_challenge_times_ = value;
}

// optional int32 win_challenge_times = 9;
inline bool SevenDaysData::has_win_challenge_times() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SevenDaysData::set_has_win_challenge_times() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SevenDaysData::clear_has_win_challenge_times() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SevenDaysData::clear_win_challenge_times() {
  win_challenge_times_ = 0;
  clear_has_win_challenge_times();
}
inline ::google::protobuf::int32 SevenDaysData::win_challenge_times() const {
  return win_challenge_times_;
}
inline void SevenDaysData::set_win_challenge_times(::google::protobuf::int32 value) {
  set_has_win_challenge_times();
  win_challenge_times_ = value;
}

// optional int32 contribute_times = 10;
inline bool SevenDaysData::has_contribute_times() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SevenDaysData::set_has_contribute_times() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SevenDaysData::clear_has_contribute_times() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SevenDaysData::clear_contribute_times() {
  contribute_times_ = 0;
  clear_has_contribute_times();
}
inline ::google::protobuf::int32 SevenDaysData::contribute_times() const {
  return contribute_times_;
}
inline void SevenDaysData::set_contribute_times(::google::protobuf::int32 value) {
  set_has_contribute_times();
  contribute_times_ = value;
}

// optional int32 recharge_money = 11;
inline bool SevenDaysData::has_recharge_money() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SevenDaysData::set_has_recharge_money() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SevenDaysData::clear_has_recharge_money() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SevenDaysData::clear_recharge_money() {
  recharge_money_ = 0;
  clear_has_recharge_money();
}
inline ::google::protobuf::int32 SevenDaysData::recharge_money() const {
  return recharge_money_;
}
inline void SevenDaysData::set_recharge_money(::google::protobuf::int32 value) {
  set_has_recharge_money();
  recharge_money_ = value;
}

// optional int32 consume_money = 12;
inline bool SevenDaysData::has_consume_money() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SevenDaysData::set_has_consume_money() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SevenDaysData::clear_has_consume_money() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SevenDaysData::clear_consume_money() {
  consume_money_ = 0;
  clear_has_consume_money();
}
inline ::google::protobuf::int32 SevenDaysData::consume_money() const {
  return consume_money_;
}
inline void SevenDaysData::set_consume_money(::google::protobuf::int32 value) {
  set_has_consume_money();
  consume_money_ = value;
}

// optional int32 sign_in_days = 13;
inline bool SevenDaysData::has_sign_in_days() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SevenDaysData::set_has_sign_in_days() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SevenDaysData::clear_has_sign_in_days() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SevenDaysData::clear_sign_in_days() {
  sign_in_days_ = 0;
  clear_has_sign_in_days();
}
inline ::google::protobuf::int32 SevenDaysData::sign_in_days() const {
  return sign_in_days_;
}
inline void SevenDaysData::set_sign_in_days(::google::protobuf::int32 value) {
  set_has_sign_in_days();
  sign_in_days_ = value;
}

// optional int32 lottery_count = 14;
inline bool SevenDaysData::has_lottery_count() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SevenDaysData::set_has_lottery_count() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SevenDaysData::clear_has_lottery_count() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SevenDaysData::clear_lottery_count() {
  lottery_count_ = 0;
  clear_has_lottery_count();
}
inline ::google::protobuf::int32 SevenDaysData::lottery_count() const {
  return lottery_count_;
}
inline void SevenDaysData::set_lottery_count(::google::protobuf::int32 value) {
  set_has_lottery_count();
  lottery_count_ = value;
}

// optional int32 money_lottery_count = 15;
inline bool SevenDaysData::has_money_lottery_count() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SevenDaysData::set_has_money_lottery_count() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SevenDaysData::clear_has_money_lottery_count() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SevenDaysData::clear_money_lottery_count() {
  money_lottery_count_ = 0;
  clear_has_money_lottery_count();
}
inline ::google::protobuf::int32 SevenDaysData::money_lottery_count() const {
  return money_lottery_count_;
}
inline void SevenDaysData::set_money_lottery_count(::google::protobuf::int32 value) {
  set_has_money_lottery_count();
  money_lottery_count_ = value;
}

// repeated .TrialLevel trial_level_list = 16;
inline int SevenDaysData::trial_level_list_size() const {
  return trial_level_list_.size();
}
inline void SevenDaysData::clear_trial_level_list() {
  trial_level_list_.Clear();
}
inline const ::TrialLevel& SevenDaysData::trial_level_list(int index) const {
  return trial_level_list_.Get(index);
}
inline ::TrialLevel* SevenDaysData::mutable_trial_level_list(int index) {
  return trial_level_list_.Mutable(index);
}
inline ::TrialLevel* SevenDaysData::add_trial_level_list() {
  return trial_level_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TrialLevel >&
SevenDaysData::trial_level_list() const {
  return trial_level_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::TrialLevel >*
SevenDaysData::mutable_trial_level_list() {
  return &trial_level_list_;
}

// optional int32 technology_levelup_count = 17;
inline bool SevenDaysData::has_technology_levelup_count() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SevenDaysData::set_has_technology_levelup_count() {
  _has_bits_[0] |= 0x00010000u;
}
inline void SevenDaysData::clear_has_technology_levelup_count() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void SevenDaysData::clear_technology_levelup_count() {
  technology_levelup_count_ = 0;
  clear_has_technology_levelup_count();
}
inline ::google::protobuf::int32 SevenDaysData::technology_levelup_count() const {
  return technology_levelup_count_;
}
inline void SevenDaysData::set_technology_levelup_count(::google::protobuf::int32 value) {
  set_has_technology_levelup_count();
  technology_levelup_count_ = value;
}

// optional int32 weapon_levelup_count = 18;
inline bool SevenDaysData::has_weapon_levelup_count() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SevenDaysData::set_has_weapon_levelup_count() {
  _has_bits_[0] |= 0x00020000u;
}
inline void SevenDaysData::clear_has_weapon_levelup_count() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void SevenDaysData::clear_weapon_levelup_count() {
  weapon_levelup_count_ = 0;
  clear_has_weapon_levelup_count();
}
inline ::google::protobuf::int32 SevenDaysData::weapon_levelup_count() const {
  return weapon_levelup_count_;
}
inline void SevenDaysData::set_weapon_levelup_count(::google::protobuf::int32 value) {
  set_has_weapon_levelup_count();
  weapon_levelup_count_ = value;
}

// -------------------------------------------------------------------

// CreditReturnData

// required int32 return_index = 1;
inline bool CreditReturnData::has_return_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreditReturnData::set_has_return_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreditReturnData::clear_has_return_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreditReturnData::clear_return_index() {
  return_index_ = 0;
  clear_has_return_index();
}
inline ::google::protobuf::int32 CreditReturnData::return_index() const {
  return return_index_;
}
inline void CreditReturnData::set_return_index(::google::protobuf::int32 value) {
  set_has_return_index();
  return_index_ = value;
}

// -------------------------------------------------------------------

// OnlineData

// repeated int32 get_indexs = 1;
inline int OnlineData::get_indexs_size() const {
  return get_indexs_.size();
}
inline void OnlineData::clear_get_indexs() {
  get_indexs_.Clear();
}
inline ::google::protobuf::int32 OnlineData::get_indexs(int index) const {
  return get_indexs_.Get(index);
}
inline void OnlineData::set_get_indexs(int index, ::google::protobuf::int32 value) {
  get_indexs_.Set(index, value);
}
inline void OnlineData::add_get_indexs(::google::protobuf::int32 value) {
  get_indexs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
OnlineData::get_indexs() const {
  return get_indexs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
OnlineData::mutable_get_indexs() {
  return &get_indexs_;
}

// -------------------------------------------------------------------

// PowerData

// repeated int32 get_indexs = 1;
inline int PowerData::get_indexs_size() const {
  return get_indexs_.size();
}
inline void PowerData::clear_get_indexs() {
  get_indexs_.Clear();
}
inline ::google::protobuf::int32 PowerData::get_indexs(int index) const {
  return get_indexs_.Get(index);
}
inline void PowerData::set_get_indexs(int index, ::google::protobuf::int32 value) {
  get_indexs_.Set(index, value);
}
inline void PowerData::add_get_indexs(::google::protobuf::int32 value) {
  get_indexs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PowerData::get_indexs() const {
  return get_indexs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PowerData::mutable_get_indexs() {
  return &get_indexs_;
}

// -------------------------------------------------------------------

// FirstRechargeData

// required bool getted_reward = 1;
inline bool FirstRechargeData::has_getted_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FirstRechargeData::set_has_getted_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FirstRechargeData::clear_has_getted_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FirstRechargeData::clear_getted_reward() {
  getted_reward_ = false;
  clear_has_getted_reward();
}
inline bool FirstRechargeData::getted_reward() const {
  return getted_reward_;
}
inline void FirstRechargeData::set_getted_reward(bool value) {
  set_has_getted_reward();
  getted_reward_ = value;
}

// -------------------------------------------------------------------

// GrowthFundData

// required bool purchased = 1;
inline bool GrowthFundData::has_purchased() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GrowthFundData::set_has_purchased() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GrowthFundData::clear_has_purchased() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GrowthFundData::clear_purchased() {
  purchased_ = false;
  clear_has_purchased();
}
inline bool GrowthFundData::purchased() const {
  return purchased_;
}
inline void GrowthFundData::set_purchased(bool value) {
  set_has_purchased();
  purchased_ = value;
}

// repeated int32 get_indexs = 2;
inline int GrowthFundData::get_indexs_size() const {
  return get_indexs_.size();
}
inline void GrowthFundData::clear_get_indexs() {
  get_indexs_.Clear();
}
inline ::google::protobuf::int32 GrowthFundData::get_indexs(int index) const {
  return get_indexs_.Get(index);
}
inline void GrowthFundData::set_get_indexs(int index, ::google::protobuf::int32 value) {
  get_indexs_.Set(index, value);
}
inline void GrowthFundData::add_get_indexs(::google::protobuf::int32 value) {
  get_indexs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GrowthFundData::get_indexs() const {
  return get_indexs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GrowthFundData::mutable_get_indexs() {
  return &get_indexs_;
}

// -------------------------------------------------------------------

// InvestData

// required int32 index = 1;
inline bool InvestData::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InvestData::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InvestData::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InvestData::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 InvestData::index() const {
  return index_;
}
inline void InvestData::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// required int64 start_time = 2;
inline bool InvestData::has_start_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InvestData::set_has_start_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InvestData::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InvestData::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 InvestData::start_time() const {
  return start_time_;
}
inline void InvestData::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
}

// -------------------------------------------------------------------

// ChangeShipData

// required bool getted_reward = 1;
inline bool ChangeShipData::has_getted_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeShipData::set_has_getted_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeShipData::clear_has_getted_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeShipData::clear_getted_reward() {
  getted_reward_ = false;
  clear_has_getted_reward();
}
inline bool ChangeShipData::getted_reward() const {
  return getted_reward_;
}
inline void ChangeShipData::set_getted_reward(bool value) {
  set_has_getted_reward();
  getted_reward_ = value;
}

// -------------------------------------------------------------------

// MonthSignData

// required int32 resign_times = 1;
inline bool MonthSignData::has_resign_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonthSignData::set_has_resign_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonthSignData::clear_has_resign_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonthSignData::clear_resign_times() {
  resign_times_ = 0;
  clear_has_resign_times();
}
inline ::google::protobuf::int32 MonthSignData::resign_times() const {
  return resign_times_;
}
inline void MonthSignData::set_resign_times(::google::protobuf::int32 value) {
  set_has_resign_times();
  resign_times_ = value;
}

// repeated int32 get_nums = 2;
inline int MonthSignData::get_nums_size() const {
  return get_nums_.size();
}
inline void MonthSignData::clear_get_nums() {
  get_nums_.Clear();
}
inline ::google::protobuf::int32 MonthSignData::get_nums(int index) const {
  return get_nums_.Get(index);
}
inline void MonthSignData::set_get_nums(int index, ::google::protobuf::int32 value) {
  get_nums_.Set(index, value);
}
inline void MonthSignData::add_get_nums(::google::protobuf::int32 value) {
  get_nums_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MonthSignData::get_nums() const {
  return get_nums_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MonthSignData::mutable_get_nums() {
  return &get_nums_;
}

// repeated bool get_rewards = 3;
inline int MonthSignData::get_rewards_size() const {
  return get_rewards_.size();
}
inline void MonthSignData::clear_get_rewards() {
  get_rewards_.Clear();
}
inline bool MonthSignData::get_rewards(int index) const {
  return get_rewards_.Get(index);
}
inline void MonthSignData::set_get_rewards(int index, bool value) {
  get_rewards_.Set(index, value);
}
inline void MonthSignData::add_get_rewards(bool value) {
  get_rewards_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
MonthSignData::get_rewards() const {
  return get_rewards_;
}
inline ::google::protobuf::RepeatedField< bool >*
MonthSignData::mutable_get_rewards() {
  return &get_rewards_;
}

// -------------------------------------------------------------------

// Activity

// required int32 id = 1;
inline bool Activity::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Activity::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Activity::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Activity::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Activity::id() const {
  return id_;
}
inline void Activity::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 type = 2;
inline bool Activity::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Activity::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Activity::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Activity::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Activity::type() const {
  return type_;
}
inline void Activity::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int64 start_time = 3;
inline bool Activity::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Activity::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Activity::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Activity::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 Activity::start_time() const {
  return start_time_;
}
inline void Activity::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
}

// required int64 end_time = 4;
inline bool Activity::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Activity::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Activity::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Activity::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 Activity::end_time() const {
  return end_time_;
}
inline void Activity::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
}

// optional .ChangeData change_data = 5;
inline bool Activity::has_change_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Activity::set_has_change_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Activity::clear_has_change_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Activity::clear_change_data() {
  if (change_data_ != NULL) change_data_->::ChangeData::Clear();
  clear_has_change_data();
}
inline const ::ChangeData& Activity::change_data() const {
  return change_data_ != NULL ? *change_data_ : *default_instance_->change_data_;
}
inline ::ChangeData* Activity::mutable_change_data() {
  set_has_change_data();
  if (change_data_ == NULL) change_data_ = new ::ChangeData;
  return change_data_;
}
inline ::ChangeData* Activity::release_change_data() {
  clear_has_change_data();
  ::ChangeData* temp = change_data_;
  change_data_ = NULL;
  return temp;
}
inline void Activity::set_allocated_change_data(::ChangeData* change_data) {
  delete change_data_;
  change_data_ = change_data;
  if (change_data) {
    set_has_change_data();
  } else {
    clear_has_change_data();
  }
}

// optional .RechargeData recharge_data = 6;
inline bool Activity::has_recharge_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Activity::set_has_recharge_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Activity::clear_has_recharge_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Activity::clear_recharge_data() {
  if (recharge_data_ != NULL) recharge_data_->::RechargeData::Clear();
  clear_has_recharge_data();
}
inline const ::RechargeData& Activity::recharge_data() const {
  return recharge_data_ != NULL ? *recharge_data_ : *default_instance_->recharge_data_;
}
inline ::RechargeData* Activity::mutable_recharge_data() {
  set_has_recharge_data();
  if (recharge_data_ == NULL) recharge_data_ = new ::RechargeData;
  return recharge_data_;
}
inline ::RechargeData* Activity::release_recharge_data() {
  clear_has_recharge_data();
  ::RechargeData* temp = recharge_data_;
  recharge_data_ = NULL;
  return temp;
}
inline void Activity::set_allocated_recharge_data(::RechargeData* recharge_data) {
  delete recharge_data_;
  recharge_data_ = recharge_data;
  if (recharge_data) {
    set_has_recharge_data();
  } else {
    clear_has_recharge_data();
  }
}

// optional .SignInData sign_in_data = 7;
inline bool Activity::has_sign_in_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Activity::set_has_sign_in_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Activity::clear_has_sign_in_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Activity::clear_sign_in_data() {
  if (sign_in_data_ != NULL) sign_in_data_->::SignInData::Clear();
  clear_has_sign_in_data();
}
inline const ::SignInData& Activity::sign_in_data() const {
  return sign_in_data_ != NULL ? *sign_in_data_ : *default_instance_->sign_in_data_;
}
inline ::SignInData* Activity::mutable_sign_in_data() {
  set_has_sign_in_data();
  if (sign_in_data_ == NULL) sign_in_data_ = new ::SignInData;
  return sign_in_data_;
}
inline ::SignInData* Activity::release_sign_in_data() {
  clear_has_sign_in_data();
  ::SignInData* temp = sign_in_data_;
  sign_in_data_ = NULL;
  return temp;
}
inline void Activity::set_allocated_sign_in_data(::SignInData* sign_in_data) {
  delete sign_in_data_;
  sign_in_data_ = sign_in_data;
  if (sign_in_data) {
    set_has_sign_in_data();
  } else {
    clear_has_sign_in_data();
  }
}

// optional .SevenDaysData seven_days_data = 8;
inline bool Activity::has_seven_days_data() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Activity::set_has_seven_days_data() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Activity::clear_has_seven_days_data() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Activity::clear_seven_days_data() {
  if (seven_days_data_ != NULL) seven_days_data_->::SevenDaysData::Clear();
  clear_has_seven_days_data();
}
inline const ::SevenDaysData& Activity::seven_days_data() const {
  return seven_days_data_ != NULL ? *seven_days_data_ : *default_instance_->seven_days_data_;
}
inline ::SevenDaysData* Activity::mutable_seven_days_data() {
  set_has_seven_days_data();
  if (seven_days_data_ == NULL) seven_days_data_ = new ::SevenDaysData;
  return seven_days_data_;
}
inline ::SevenDaysData* Activity::release_seven_days_data() {
  clear_has_seven_days_data();
  ::SevenDaysData* temp = seven_days_data_;
  seven_days_data_ = NULL;
  return temp;
}
inline void Activity::set_allocated_seven_days_data(::SevenDaysData* seven_days_data) {
  delete seven_days_data_;
  seven_days_data_ = seven_days_data;
  if (seven_days_data) {
    set_has_seven_days_data();
  } else {
    clear_has_seven_days_data();
  }
}

// optional .FirstRechargeData first_recharge_data = 9;
inline bool Activity::has_first_recharge_data() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Activity::set_has_first_recharge_data() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Activity::clear_has_first_recharge_data() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Activity::clear_first_recharge_data() {
  if (first_recharge_data_ != NULL) first_recharge_data_->::FirstRechargeData::Clear();
  clear_has_first_recharge_data();
}
inline const ::FirstRechargeData& Activity::first_recharge_data() const {
  return first_recharge_data_ != NULL ? *first_recharge_data_ : *default_instance_->first_recharge_data_;
}
inline ::FirstRechargeData* Activity::mutable_first_recharge_data() {
  set_has_first_recharge_data();
  if (first_recharge_data_ == NULL) first_recharge_data_ = new ::FirstRechargeData;
  return first_recharge_data_;
}
inline ::FirstRechargeData* Activity::release_first_recharge_data() {
  clear_has_first_recharge_data();
  ::FirstRechargeData* temp = first_recharge_data_;
  first_recharge_data_ = NULL;
  return temp;
}
inline void Activity::set_allocated_first_recharge_data(::FirstRechargeData* first_recharge_data) {
  delete first_recharge_data_;
  first_recharge_data_ = first_recharge_data;
  if (first_recharge_data) {
    set_has_first_recharge_data();
  } else {
    clear_has_first_recharge_data();
  }
}

// optional .CreditReturnData credit_retrun_data = 10;
inline bool Activity::has_credit_retrun_data() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Activity::set_has_credit_retrun_data() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Activity::clear_has_credit_retrun_data() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Activity::clear_credit_retrun_data() {
  if (credit_retrun_data_ != NULL) credit_retrun_data_->::CreditReturnData::Clear();
  clear_has_credit_retrun_data();
}
inline const ::CreditReturnData& Activity::credit_retrun_data() const {
  return credit_retrun_data_ != NULL ? *credit_retrun_data_ : *default_instance_->credit_retrun_data_;
}
inline ::CreditReturnData* Activity::mutable_credit_retrun_data() {
  set_has_credit_retrun_data();
  if (credit_retrun_data_ == NULL) credit_retrun_data_ = new ::CreditReturnData;
  return credit_retrun_data_;
}
inline ::CreditReturnData* Activity::release_credit_retrun_data() {
  clear_has_credit_retrun_data();
  ::CreditReturnData* temp = credit_retrun_data_;
  credit_retrun_data_ = NULL;
  return temp;
}
inline void Activity::set_allocated_credit_retrun_data(::CreditReturnData* credit_retrun_data) {
  delete credit_retrun_data_;
  credit_retrun_data_ = credit_retrun_data;
  if (credit_retrun_data) {
    set_has_credit_retrun_data();
  } else {
    clear_has_credit_retrun_data();
  }
}

// optional .ConsumeData consume_data = 11;
inline bool Activity::has_consume_data() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Activity::set_has_consume_data() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Activity::clear_has_consume_data() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Activity::clear_consume_data() {
  if (consume_data_ != NULL) consume_data_->::ConsumeData::Clear();
  clear_has_consume_data();
}
inline const ::ConsumeData& Activity::consume_data() const {
  return consume_data_ != NULL ? *consume_data_ : *default_instance_->consume_data_;
}
inline ::ConsumeData* Activity::mutable_consume_data() {
  set_has_consume_data();
  if (consume_data_ == NULL) consume_data_ = new ::ConsumeData;
  return consume_data_;
}
inline ::ConsumeData* Activity::release_consume_data() {
  clear_has_consume_data();
  ::ConsumeData* temp = consume_data_;
  consume_data_ = NULL;
  return temp;
}
inline void Activity::set_allocated_consume_data(::ConsumeData* consume_data) {
  delete consume_data_;
  consume_data_ = consume_data;
  if (consume_data) {
    set_has_consume_data();
  } else {
    clear_has_consume_data();
  }
}

// optional .OnlineData online_data = 12;
inline bool Activity::has_online_data() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Activity::set_has_online_data() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Activity::clear_has_online_data() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Activity::clear_online_data() {
  if (online_data_ != NULL) online_data_->::OnlineData::Clear();
  clear_has_online_data();
}
inline const ::OnlineData& Activity::online_data() const {
  return online_data_ != NULL ? *online_data_ : *default_instance_->online_data_;
}
inline ::OnlineData* Activity::mutable_online_data() {
  set_has_online_data();
  if (online_data_ == NULL) online_data_ = new ::OnlineData;
  return online_data_;
}
inline ::OnlineData* Activity::release_online_data() {
  clear_has_online_data();
  ::OnlineData* temp = online_data_;
  online_data_ = NULL;
  return temp;
}
inline void Activity::set_allocated_online_data(::OnlineData* online_data) {
  delete online_data_;
  online_data_ = online_data;
  if (online_data) {
    set_has_online_data();
  } else {
    clear_has_online_data();
  }
}

// optional .PowerData power_data = 13;
inline bool Activity::has_power_data() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Activity::set_has_power_data() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Activity::clear_has_power_data() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Activity::clear_power_data() {
  if (power_data_ != NULL) power_data_->::PowerData::Clear();
  clear_has_power_data();
}
inline const ::PowerData& Activity::power_data() const {
  return power_data_ != NULL ? *power_data_ : *default_instance_->power_data_;
}
inline ::PowerData* Activity::mutable_power_data() {
  set_has_power_data();
  if (power_data_ == NULL) power_data_ = new ::PowerData;
  return power_data_;
}
inline ::PowerData* Activity::release_power_data() {
  clear_has_power_data();
  ::PowerData* temp = power_data_;
  power_data_ = NULL;
  return temp;
}
inline void Activity::set_allocated_power_data(::PowerData* power_data) {
  delete power_data_;
  power_data_ = power_data;
  if (power_data) {
    set_has_power_data();
  } else {
    clear_has_power_data();
  }
}

// optional .GrowthFundData growth_fund_data = 14;
inline bool Activity::has_growth_fund_data() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Activity::set_has_growth_fund_data() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Activity::clear_has_growth_fund_data() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Activity::clear_growth_fund_data() {
  if (growth_fund_data_ != NULL) growth_fund_data_->::GrowthFundData::Clear();
  clear_has_growth_fund_data();
}
inline const ::GrowthFundData& Activity::growth_fund_data() const {
  return growth_fund_data_ != NULL ? *growth_fund_data_ : *default_instance_->growth_fund_data_;
}
inline ::GrowthFundData* Activity::mutable_growth_fund_data() {
  set_has_growth_fund_data();
  if (growth_fund_data_ == NULL) growth_fund_data_ = new ::GrowthFundData;
  return growth_fund_data_;
}
inline ::GrowthFundData* Activity::release_growth_fund_data() {
  clear_has_growth_fund_data();
  ::GrowthFundData* temp = growth_fund_data_;
  growth_fund_data_ = NULL;
  return temp;
}
inline void Activity::set_allocated_growth_fund_data(::GrowthFundData* growth_fund_data) {
  delete growth_fund_data_;
  growth_fund_data_ = growth_fund_data;
  if (growth_fund_data) {
    set_has_growth_fund_data();
  } else {
    clear_has_growth_fund_data();
  }
}

// optional .InvestData invest_data = 15;
inline bool Activity::has_invest_data() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Activity::set_has_invest_data() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Activity::clear_has_invest_data() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Activity::clear_invest_data() {
  if (invest_data_ != NULL) invest_data_->::InvestData::Clear();
  clear_has_invest_data();
}
inline const ::InvestData& Activity::invest_data() const {
  return invest_data_ != NULL ? *invest_data_ : *default_instance_->invest_data_;
}
inline ::InvestData* Activity::mutable_invest_data() {
  set_has_invest_data();
  if (invest_data_ == NULL) invest_data_ = new ::InvestData;
  return invest_data_;
}
inline ::InvestData* Activity::release_invest_data() {
  clear_has_invest_data();
  ::InvestData* temp = invest_data_;
  invest_data_ = NULL;
  return temp;
}
inline void Activity::set_allocated_invest_data(::InvestData* invest_data) {
  delete invest_data_;
  invest_data_ = invest_data;
  if (invest_data) {
    set_has_invest_data();
  } else {
    clear_has_invest_data();
  }
}

// optional .ChangeShipData change_ship_data = 16;
inline bool Activity::has_change_ship_data() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Activity::set_has_change_ship_data() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Activity::clear_has_change_ship_data() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Activity::clear_change_ship_data() {
  if (change_ship_data_ != NULL) change_ship_data_->::ChangeShipData::Clear();
  clear_has_change_ship_data();
}
inline const ::ChangeShipData& Activity::change_ship_data() const {
  return change_ship_data_ != NULL ? *change_ship_data_ : *default_instance_->change_ship_data_;
}
inline ::ChangeShipData* Activity::mutable_change_ship_data() {
  set_has_change_ship_data();
  if (change_ship_data_ == NULL) change_ship_data_ = new ::ChangeShipData;
  return change_ship_data_;
}
inline ::ChangeShipData* Activity::release_change_ship_data() {
  clear_has_change_ship_data();
  ::ChangeShipData* temp = change_ship_data_;
  change_ship_data_ = NULL;
  return temp;
}
inline void Activity::set_allocated_change_ship_data(::ChangeShipData* change_ship_data) {
  delete change_ship_data_;
  change_ship_data_ = change_ship_data;
  if (change_ship_data) {
    set_has_change_ship_data();
  } else {
    clear_has_change_ship_data();
  }
}

// optional .MonthSignData month_sign_data = 17;
inline bool Activity::has_month_sign_data() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Activity::set_has_month_sign_data() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Activity::clear_has_month_sign_data() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Activity::clear_month_sign_data() {
  if (month_sign_data_ != NULL) month_sign_data_->::MonthSignData::Clear();
  clear_has_month_sign_data();
}
inline const ::MonthSignData& Activity::month_sign_data() const {
  return month_sign_data_ != NULL ? *month_sign_data_ : *default_instance_->month_sign_data_;
}
inline ::MonthSignData* Activity::mutable_month_sign_data() {
  set_has_month_sign_data();
  if (month_sign_data_ == NULL) month_sign_data_ = new ::MonthSignData;
  return month_sign_data_;
}
inline ::MonthSignData* Activity::release_month_sign_data() {
  clear_has_month_sign_data();
  ::MonthSignData* temp = month_sign_data_;
  month_sign_data_ = NULL;
  return temp;
}
inline void Activity::set_allocated_month_sign_data(::MonthSignData* month_sign_data) {
  delete month_sign_data_;
  month_sign_data_ = month_sign_data;
  if (month_sign_data) {
    set_has_month_sign_data();
  } else {
    clear_has_month_sign_data();
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Activity_2eproto__INCLUDED
