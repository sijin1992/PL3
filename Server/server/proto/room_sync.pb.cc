// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: room_sync.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "room_sync.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* JoinRoomReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JoinRoomReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* JoinRoomResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JoinRoomResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerInRoomInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerInRoomInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomSyncResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomSyncResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerMoveInRoomReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerMoveInRoomReq_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_room_5fsync_2eproto() {
  protobuf_AddDesc_room_5fsync_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "room_sync.proto");
  GOOGLE_CHECK(file != NULL);
  JoinRoomReq_descriptor_ = file->message_type(0);
  static const int JoinRoomReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomReq, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomReq, room_id_),
  };
  JoinRoomReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JoinRoomReq_descriptor_,
      JoinRoomReq::default_instance_,
      JoinRoomReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JoinRoomReq));
  JoinRoomResp_descriptor_ = file->message_type(1);
  static const int JoinRoomResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomResp, nothing_),
  };
  JoinRoomResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JoinRoomResp_descriptor_,
      JoinRoomResp::default_instance_,
      JoinRoomResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinRoomResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JoinRoomResp));
  PlayerInRoomInfo_descriptor_ = file->message_type(2);
  static const int PlayerInRoomInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInRoomInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInRoomInfo, posi_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInRoomInfo, posi_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInRoomInfo, avatar_),
  };
  PlayerInRoomInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PlayerInRoomInfo_descriptor_,
      PlayerInRoomInfo::default_instance_,
      PlayerInRoomInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInRoomInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInRoomInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PlayerInRoomInfo));
  RoomSyncResp_descriptor_ = file->message_type(3);
  static const int RoomSyncResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomSyncResp, room_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomSyncResp, player_list_),
  };
  RoomSyncResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RoomSyncResp_descriptor_,
      RoomSyncResp::default_instance_,
      RoomSyncResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomSyncResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomSyncResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RoomSyncResp));
  PlayerMoveInRoomReq_descriptor_ = file->message_type(4);
  static const int PlayerMoveInRoomReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMoveInRoomReq, posi_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMoveInRoomReq, posi_y_),
  };
  PlayerMoveInRoomReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PlayerMoveInRoomReq_descriptor_,
      PlayerMoveInRoomReq::default_instance_,
      PlayerMoveInRoomReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMoveInRoomReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMoveInRoomReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PlayerMoveInRoomReq));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_room_5fsync_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JoinRoomReq_descriptor_, &JoinRoomReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JoinRoomResp_descriptor_, &JoinRoomResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PlayerInRoomInfo_descriptor_, &PlayerInRoomInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RoomSyncResp_descriptor_, &RoomSyncResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PlayerMoveInRoomReq_descriptor_, &PlayerMoveInRoomReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_room_5fsync_2eproto() {
  delete JoinRoomReq::default_instance_;
  delete JoinRoomReq_reflection_;
  delete JoinRoomResp::default_instance_;
  delete JoinRoomResp_reflection_;
  delete PlayerInRoomInfo::default_instance_;
  delete PlayerInRoomInfo_reflection_;
  delete RoomSyncResp::default_instance_;
  delete RoomSyncResp_reflection_;
  delete PlayerMoveInRoomReq::default_instance_;
  delete PlayerMoveInRoomReq_reflection_;
}

void protobuf_AddDesc_room_5fsync_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017room_sync.proto\",\n\013JoinRoomReq\022\014\n\004name"
    "\030\001 \002(\014\022\017\n\007room_id\030\002 \002(\005\"\037\n\014JoinRoomResp\022"
    "\017\n\007nothing\030\001 \001(\005\"P\n\020PlayerInRoomInfo\022\014\n\004"
    "name\030\001 \002(\014\022\016\n\006posi_x\030\002 \002(\005\022\016\n\006posi_y\030\003 \002"
    "(\005\022\016\n\006avatar\030\004 \002(\005\"G\n\014RoomSyncResp\022\017\n\007ro"
    "om_id\030\001 \002(\005\022&\n\013player_list\030\002 \003(\0132\021.Playe"
    "rInRoomInfo\"5\n\023PlayerMoveInRoomReq\022\016\n\006po"
    "si_x\030\001 \002(\005\022\016\n\006posi_y\030\002 \002(\005", 306);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "room_sync.proto", &protobuf_RegisterTypes);
  JoinRoomReq::default_instance_ = new JoinRoomReq();
  JoinRoomResp::default_instance_ = new JoinRoomResp();
  PlayerInRoomInfo::default_instance_ = new PlayerInRoomInfo();
  RoomSyncResp::default_instance_ = new RoomSyncResp();
  PlayerMoveInRoomReq::default_instance_ = new PlayerMoveInRoomReq();
  JoinRoomReq::default_instance_->InitAsDefaultInstance();
  JoinRoomResp::default_instance_->InitAsDefaultInstance();
  PlayerInRoomInfo::default_instance_->InitAsDefaultInstance();
  RoomSyncResp::default_instance_->InitAsDefaultInstance();
  PlayerMoveInRoomReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_room_5fsync_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_room_5fsync_2eproto {
  StaticDescriptorInitializer_room_5fsync_2eproto() {
    protobuf_AddDesc_room_5fsync_2eproto();
  }
} static_descriptor_initializer_room_5fsync_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int JoinRoomReq::kNameFieldNumber;
const int JoinRoomReq::kRoomIdFieldNumber;
#endif  // !_MSC_VER

JoinRoomReq::JoinRoomReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void JoinRoomReq::InitAsDefaultInstance() {
}

JoinRoomReq::JoinRoomReq(const JoinRoomReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void JoinRoomReq::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  room_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JoinRoomReq::~JoinRoomReq() {
  SharedDtor();
}

void JoinRoomReq::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void JoinRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinRoomReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JoinRoomReq_descriptor_;
}

const JoinRoomReq& JoinRoomReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_5fsync_2eproto();
  return *default_instance_;
}

JoinRoomReq* JoinRoomReq::default_instance_ = NULL;

JoinRoomReq* JoinRoomReq::New() const {
  return new JoinRoomReq;
}

void JoinRoomReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    room_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JoinRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_room_id;
        break;
      }

      // required int32 room_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_room_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
          set_has_room_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void JoinRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bytes name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->name(), output);
  }

  // required int32 room_id = 2;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->room_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* JoinRoomReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bytes name = 1;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // required int32 room_id = 2;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->room_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int JoinRoomReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }

    // required int32 room_id = 2;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->room_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JoinRoomReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JoinRoomReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JoinRoomReq::MergeFrom(const JoinRoomReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JoinRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinRoomReq::CopyFrom(const JoinRoomReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinRoomReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void JoinRoomReq::Swap(JoinRoomReq* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(room_id_, other->room_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JoinRoomReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JoinRoomReq_descriptor_;
  metadata.reflection = JoinRoomReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int JoinRoomResp::kNothingFieldNumber;
#endif  // !_MSC_VER

JoinRoomResp::JoinRoomResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void JoinRoomResp::InitAsDefaultInstance() {
}

JoinRoomResp::JoinRoomResp(const JoinRoomResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void JoinRoomResp::SharedCtor() {
  _cached_size_ = 0;
  nothing_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JoinRoomResp::~JoinRoomResp() {
  SharedDtor();
}

void JoinRoomResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void JoinRoomResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinRoomResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JoinRoomResp_descriptor_;
}

const JoinRoomResp& JoinRoomResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_5fsync_2eproto();
  return *default_instance_;
}

JoinRoomResp* JoinRoomResp::default_instance_ = NULL;

JoinRoomResp* JoinRoomResp::New() const {
  return new JoinRoomResp;
}

void JoinRoomResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nothing_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JoinRoomResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 nothing = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nothing_)));
          set_has_nothing();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void JoinRoomResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 nothing = 1;
  if (has_nothing()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nothing(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* JoinRoomResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 nothing = 1;
  if (has_nothing()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nothing(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int JoinRoomResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 nothing = 1;
    if (has_nothing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nothing());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinRoomResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JoinRoomResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JoinRoomResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JoinRoomResp::MergeFrom(const JoinRoomResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nothing()) {
      set_nothing(from.nothing());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JoinRoomResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinRoomResp::CopyFrom(const JoinRoomResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinRoomResp::IsInitialized() const {

  return true;
}

void JoinRoomResp::Swap(JoinRoomResp* other) {
  if (other != this) {
    std::swap(nothing_, other->nothing_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JoinRoomResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JoinRoomResp_descriptor_;
  metadata.reflection = JoinRoomResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PlayerInRoomInfo::kNameFieldNumber;
const int PlayerInRoomInfo::kPosiXFieldNumber;
const int PlayerInRoomInfo::kPosiYFieldNumber;
const int PlayerInRoomInfo::kAvatarFieldNumber;
#endif  // !_MSC_VER

PlayerInRoomInfo::PlayerInRoomInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PlayerInRoomInfo::InitAsDefaultInstance() {
}

PlayerInRoomInfo::PlayerInRoomInfo(const PlayerInRoomInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PlayerInRoomInfo::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  posi_x_ = 0;
  posi_y_ = 0;
  avatar_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlayerInRoomInfo::~PlayerInRoomInfo() {
  SharedDtor();
}

void PlayerInRoomInfo::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void PlayerInRoomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerInRoomInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerInRoomInfo_descriptor_;
}

const PlayerInRoomInfo& PlayerInRoomInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_5fsync_2eproto();
  return *default_instance_;
}

PlayerInRoomInfo* PlayerInRoomInfo::default_instance_ = NULL;

PlayerInRoomInfo* PlayerInRoomInfo::New() const {
  return new PlayerInRoomInfo;
}

void PlayerInRoomInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    posi_x_ = 0;
    posi_y_ = 0;
    avatar_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PlayerInRoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_posi_x;
        break;
      }

      // required int32 posi_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_posi_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posi_x_)));
          set_has_posi_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_posi_y;
        break;
      }

      // required int32 posi_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_posi_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posi_y_)));
          set_has_posi_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_avatar;
        break;
      }

      // required int32 avatar = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_avatar:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &avatar_)));
          set_has_avatar();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PlayerInRoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bytes name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->name(), output);
  }

  // required int32 posi_x = 2;
  if (has_posi_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->posi_x(), output);
  }

  // required int32 posi_y = 3;
  if (has_posi_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->posi_y(), output);
  }

  // required int32 avatar = 4;
  if (has_avatar()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->avatar(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PlayerInRoomInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bytes name = 1;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // required int32 posi_x = 2;
  if (has_posi_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->posi_x(), target);
  }

  // required int32 posi_y = 3;
  if (has_posi_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->posi_y(), target);
  }

  // required int32 avatar = 4;
  if (has_avatar()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->avatar(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PlayerInRoomInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }

    // required int32 posi_x = 2;
    if (has_posi_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posi_x());
    }

    // required int32 posi_y = 3;
    if (has_posi_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posi_y());
    }

    // required int32 avatar = 4;
    if (has_avatar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->avatar());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerInRoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PlayerInRoomInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PlayerInRoomInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PlayerInRoomInfo::MergeFrom(const PlayerInRoomInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_posi_x()) {
      set_posi_x(from.posi_x());
    }
    if (from.has_posi_y()) {
      set_posi_y(from.posi_y());
    }
    if (from.has_avatar()) {
      set_avatar(from.avatar());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PlayerInRoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerInRoomInfo::CopyFrom(const PlayerInRoomInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerInRoomInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void PlayerInRoomInfo::Swap(PlayerInRoomInfo* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(posi_x_, other->posi_x_);
    std::swap(posi_y_, other->posi_y_);
    std::swap(avatar_, other->avatar_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PlayerInRoomInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerInRoomInfo_descriptor_;
  metadata.reflection = PlayerInRoomInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RoomSyncResp::kRoomIdFieldNumber;
const int RoomSyncResp::kPlayerListFieldNumber;
#endif  // !_MSC_VER

RoomSyncResp::RoomSyncResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RoomSyncResp::InitAsDefaultInstance() {
}

RoomSyncResp::RoomSyncResp(const RoomSyncResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RoomSyncResp::SharedCtor() {
  _cached_size_ = 0;
  room_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoomSyncResp::~RoomSyncResp() {
  SharedDtor();
}

void RoomSyncResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoomSyncResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomSyncResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomSyncResp_descriptor_;
}

const RoomSyncResp& RoomSyncResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_5fsync_2eproto();
  return *default_instance_;
}

RoomSyncResp* RoomSyncResp::default_instance_ = NULL;

RoomSyncResp* RoomSyncResp::New() const {
  return new RoomSyncResp;
}

void RoomSyncResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    room_id_ = 0;
  }
  player_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RoomSyncResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 room_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
          set_has_room_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_player_list;
        break;
      }

      // repeated .PlayerInRoomInfo player_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_player_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_player_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_player_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RoomSyncResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 room_id = 1;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->room_id(), output);
  }

  // repeated .PlayerInRoomInfo player_list = 2;
  for (int i = 0; i < this->player_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->player_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RoomSyncResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 room_id = 1;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->room_id(), target);
  }

  // repeated .PlayerInRoomInfo player_list = 2;
  for (int i = 0; i < this->player_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->player_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RoomSyncResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 room_id = 1;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->room_id());
    }

  }
  // repeated .PlayerInRoomInfo player_list = 2;
  total_size += 1 * this->player_list_size();
  for (int i = 0; i < this->player_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->player_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomSyncResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RoomSyncResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RoomSyncResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RoomSyncResp::MergeFrom(const RoomSyncResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  player_list_.MergeFrom(from.player_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RoomSyncResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomSyncResp::CopyFrom(const RoomSyncResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomSyncResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < player_list_size(); i++) {
    if (!this->player_list(i).IsInitialized()) return false;
  }
  return true;
}

void RoomSyncResp::Swap(RoomSyncResp* other) {
  if (other != this) {
    std::swap(room_id_, other->room_id_);
    player_list_.Swap(&other->player_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RoomSyncResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomSyncResp_descriptor_;
  metadata.reflection = RoomSyncResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PlayerMoveInRoomReq::kPosiXFieldNumber;
const int PlayerMoveInRoomReq::kPosiYFieldNumber;
#endif  // !_MSC_VER

PlayerMoveInRoomReq::PlayerMoveInRoomReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PlayerMoveInRoomReq::InitAsDefaultInstance() {
}

PlayerMoveInRoomReq::PlayerMoveInRoomReq(const PlayerMoveInRoomReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PlayerMoveInRoomReq::SharedCtor() {
  _cached_size_ = 0;
  posi_x_ = 0;
  posi_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlayerMoveInRoomReq::~PlayerMoveInRoomReq() {
  SharedDtor();
}

void PlayerMoveInRoomReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PlayerMoveInRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerMoveInRoomReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerMoveInRoomReq_descriptor_;
}

const PlayerMoveInRoomReq& PlayerMoveInRoomReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_5fsync_2eproto();
  return *default_instance_;
}

PlayerMoveInRoomReq* PlayerMoveInRoomReq::default_instance_ = NULL;

PlayerMoveInRoomReq* PlayerMoveInRoomReq::New() const {
  return new PlayerMoveInRoomReq;
}

void PlayerMoveInRoomReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    posi_x_ = 0;
    posi_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PlayerMoveInRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 posi_x = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posi_x_)));
          set_has_posi_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_posi_y;
        break;
      }

      // required int32 posi_y = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_posi_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posi_y_)));
          set_has_posi_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PlayerMoveInRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 posi_x = 1;
  if (has_posi_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->posi_x(), output);
  }

  // required int32 posi_y = 2;
  if (has_posi_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->posi_y(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PlayerMoveInRoomReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 posi_x = 1;
  if (has_posi_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->posi_x(), target);
  }

  // required int32 posi_y = 2;
  if (has_posi_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->posi_y(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PlayerMoveInRoomReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 posi_x = 1;
    if (has_posi_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posi_x());
    }

    // required int32 posi_y = 2;
    if (has_posi_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posi_y());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerMoveInRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PlayerMoveInRoomReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PlayerMoveInRoomReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PlayerMoveInRoomReq::MergeFrom(const PlayerMoveInRoomReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_posi_x()) {
      set_posi_x(from.posi_x());
    }
    if (from.has_posi_y()) {
      set_posi_y(from.posi_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PlayerMoveInRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerMoveInRoomReq::CopyFrom(const PlayerMoveInRoomReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerMoveInRoomReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PlayerMoveInRoomReq::Swap(PlayerMoveInRoomReq* other) {
  if (other != this) {
    std::swap(posi_x_, other->posi_x_);
    std::swap(posi_y_, other->posi_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PlayerMoveInRoomReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerMoveInRoomReq_descriptor_;
  metadata.reflection = PlayerMoveInRoomReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
