// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CmdEquip.proto

#ifndef PROTOBUF_CmdEquip_2eproto__INCLUDED
#define PROTOBUF_CmdEquip_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Equip.pb.h"
#include "Item.pb.h"
#include "UserSync.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CmdEquip_2eproto();
void protobuf_AssignDesc_CmdEquip_2eproto();
void protobuf_ShutdownFile_CmdEquip_2eproto();

class EquipLevelUpReq;
class EquipLevelUpResp;
class EquipEnchaseReq;
class EquipEnchaseResp;
class ShipEquipReq;
class ShipEquipResp;
class StrengthEquipReq;
class StrengthEquipResp;
class ResolveEquipReq;
class ResolveEquipResp;
class CreateEquipReq;
class CreateEquipResp;
class ResolveBlueprintReq;
class ResolveBlueprintResp;
class GemEquipReq;
class GemEquipResp;
class MixGemReq;
class MixGemResp;

// ===================================================================

class EquipLevelUpReq : public ::google::protobuf::Message {
 public:
  EquipLevelUpReq();
  virtual ~EquipLevelUpReq();

  EquipLevelUpReq(const EquipLevelUpReq& from);

  inline EquipLevelUpReq& operator=(const EquipLevelUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipLevelUpReq& default_instance();

  void Swap(EquipLevelUpReq* other);

  // implements Message ----------------------------------------------

  EquipLevelUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipLevelUpReq& from);
  void MergeFrom(const EquipLevelUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 add_value = 2;
  inline bool has_add_value() const;
  inline void clear_add_value();
  static const int kAddValueFieldNumber = 2;
  inline ::google::protobuf::int32 add_value() const;
  inline void set_add_value(::google::protobuf::int32 value);

  // optional int32 add_new_player = 3;
  inline bool has_add_new_player() const;
  inline void clear_add_new_player();
  static const int kAddNewPlayerFieldNumber = 3;
  inline ::google::protobuf::int32 add_new_player() const;
  inline void set_add_new_player(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EquipLevelUpReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_add_value();
  inline void clear_has_add_value();
  inline void set_has_add_new_player();
  inline void clear_has_add_new_player();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 add_value_;
  ::google::protobuf::int32 add_new_player_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CmdEquip_2eproto();
  friend void protobuf_AssignDesc_CmdEquip_2eproto();
  friend void protobuf_ShutdownFile_CmdEquip_2eproto();

  void InitAsDefaultInstance();
  static EquipLevelUpReq* default_instance_;
};
// -------------------------------------------------------------------

class EquipLevelUpResp : public ::google::protobuf::Message {
 public:
  EquipLevelUpResp();
  virtual ~EquipLevelUpResp();

  EquipLevelUpResp(const EquipLevelUpResp& from);

  inline EquipLevelUpResp& operator=(const EquipLevelUpResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipLevelUpResp& default_instance();

  void Swap(EquipLevelUpResp* other);

  // implements Message ----------------------------------------------

  EquipLevelUpResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipLevelUpResp& from);
  void MergeFrom(const EquipLevelUpResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .Equip equip = 2;
  inline bool has_equip() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 2;
  inline const ::Equip& equip() const;
  inline ::Equip* mutable_equip();
  inline ::Equip* release_equip();
  inline void set_allocated_equip(::Equip* equip);

  // optional int32 add_new_player = 3;
  inline bool has_add_new_player() const;
  inline void clear_add_new_player();
  static const int kAddNewPlayerFieldNumber = 3;
  inline ::google::protobuf::int32 add_new_player() const;
  inline void set_add_new_player(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EquipLevelUpResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_equip();
  inline void clear_has_equip();
  inline void set_has_add_new_player();
  inline void clear_has_add_new_player();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Equip* equip_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 add_new_player_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CmdEquip_2eproto();
  friend void protobuf_AssignDesc_CmdEquip_2eproto();
  friend void protobuf_ShutdownFile_CmdEquip_2eproto();

  void InitAsDefaultInstance();
  static EquipLevelUpResp* default_instance_;
};
// -------------------------------------------------------------------

class EquipEnchaseReq : public ::google::protobuf::Message {
 public:
  EquipEnchaseReq();
  virtual ~EquipEnchaseReq();

  EquipEnchaseReq(const EquipEnchaseReq& from);

  inline EquipEnchaseReq& operator=(const EquipEnchaseReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipEnchaseReq& default_instance();

  void Swap(EquipEnchaseReq* other);

  // implements Message ----------------------------------------------

  EquipEnchaseReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipEnchaseReq& from);
  void MergeFrom(const EquipEnchaseReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EquipEnchaseReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CmdEquip_2eproto();
  friend void protobuf_AssignDesc_CmdEquip_2eproto();
  friend void protobuf_ShutdownFile_CmdEquip_2eproto();

  void InitAsDefaultInstance();
  static EquipEnchaseReq* default_instance_;
};
// -------------------------------------------------------------------

class EquipEnchaseResp : public ::google::protobuf::Message {
 public:
  EquipEnchaseResp();
  virtual ~EquipEnchaseResp();

  EquipEnchaseResp(const EquipEnchaseResp& from);

  inline EquipEnchaseResp& operator=(const EquipEnchaseResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipEnchaseResp& default_instance();

  void Swap(EquipEnchaseResp* other);

  // implements Message ----------------------------------------------

  EquipEnchaseResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipEnchaseResp& from);
  void MergeFrom(const EquipEnchaseResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EquipEnchaseResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CmdEquip_2eproto();
  friend void protobuf_AssignDesc_CmdEquip_2eproto();
  friend void protobuf_ShutdownFile_CmdEquip_2eproto();

  void InitAsDefaultInstance();
  static EquipEnchaseResp* default_instance_;
};
// -------------------------------------------------------------------

class ShipEquipReq : public ::google::protobuf::Message {
 public:
  ShipEquipReq();
  virtual ~ShipEquipReq();

  ShipEquipReq(const ShipEquipReq& from);

  inline ShipEquipReq& operator=(const ShipEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShipEquipReq& default_instance();

  void Swap(ShipEquipReq* other);

  // implements Message ----------------------------------------------

  ShipEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShipEquipReq& from);
  void MergeFrom(const ShipEquipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ship_guid = 1;
  inline bool has_ship_guid() const;
  inline void clear_ship_guid();
  static const int kShipGuidFieldNumber = 1;
  inline ::google::protobuf::int32 ship_guid() const;
  inline void set_ship_guid(::google::protobuf::int32 value);

  // repeated int32 equip_index_list = 2;
  inline int equip_index_list_size() const;
  inline void clear_equip_index_list();
  static const int kEquipIndexListFieldNumber = 2;
  inline ::google::protobuf::int32 equip_index_list(int index) const;
  inline void set_equip_index_list(int index, ::google::protobuf::int32 value);
  inline void add_equip_index_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      equip_index_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_equip_index_list();

  // repeated int32 equip_guid_list = 3;
  inline int equip_guid_list_size() const;
  inline void clear_equip_guid_list();
  static const int kEquipGuidListFieldNumber = 3;
  inline ::google::protobuf::int32 equip_guid_list(int index) const;
  inline void set_equip_guid_list(int index, ::google::protobuf::int32 value);
  inline void add_equip_guid_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      equip_guid_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_equip_guid_list();

  // @@protoc_insertion_point(class_scope:ShipEquipReq)
 private:
  inline void set_has_ship_guid();
  inline void clear_has_ship_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > equip_index_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > equip_guid_list_;
  ::google::protobuf::int32 ship_guid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CmdEquip_2eproto();
  friend void protobuf_AssignDesc_CmdEquip_2eproto();
  friend void protobuf_ShutdownFile_CmdEquip_2eproto();

  void InitAsDefaultInstance();
  static ShipEquipReq* default_instance_;
};
// -------------------------------------------------------------------

class ShipEquipResp : public ::google::protobuf::Message {
 public:
  ShipEquipResp();
  virtual ~ShipEquipResp();

  ShipEquipResp(const ShipEquipResp& from);

  inline ShipEquipResp& operator=(const ShipEquipResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShipEquipResp& default_instance();

  void Swap(ShipEquipResp* other);

  // implements Message ----------------------------------------------

  ShipEquipResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShipEquipResp& from);
  void MergeFrom(const ShipEquipResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .UserSync user_sync = 2;
  inline bool has_user_sync() const;
  inline void clear_user_sync();
  static const int kUserSyncFieldNumber = 2;
  inline const ::UserSync& user_sync() const;
  inline ::UserSync* mutable_user_sync();
  inline ::UserSync* release_user_sync();
  inline void set_allocated_user_sync(::UserSync* user_sync);

  // required int32 ship_guid = 3;
  inline bool has_ship_guid() const;
  inline void clear_ship_guid();
  static const int kShipGuidFieldNumber = 3;
  inline ::google::protobuf::int32 ship_guid() const;
  inline void set_ship_guid(::google::protobuf::int32 value);

  // repeated int32 equip_index_list = 4;
  inline int equip_index_list_size() const;
  inline void clear_equip_index_list();
  static const int kEquipIndexListFieldNumber = 4;
  inline ::google::protobuf::int32 equip_index_list(int index) const;
  inline void set_equip_index_list(int index, ::google::protobuf::int32 value);
  inline void add_equip_index_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      equip_index_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_equip_index_list();

  // repeated int32 equip_guid_list = 5;
  inline int equip_guid_list_size() const;
  inline void clear_equip_guid_list();
  static const int kEquipGuidListFieldNumber = 5;
  inline ::google::protobuf::int32 equip_guid_list(int index) const;
  inline void set_equip_guid_list(int index, ::google::protobuf::int32 value);
  inline void add_equip_guid_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      equip_guid_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_equip_guid_list();

  // @@protoc_insertion_point(class_scope:ShipEquipResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_sync();
  inline void clear_has_user_sync();
  inline void set_has_ship_guid();
  inline void clear_has_ship_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::UserSync* user_sync_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 ship_guid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > equip_index_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > equip_guid_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_CmdEquip_2eproto();
  friend void protobuf_AssignDesc_CmdEquip_2eproto();
  friend void protobuf_ShutdownFile_CmdEquip_2eproto();

  void InitAsDefaultInstance();
  static ShipEquipResp* default_instance_;
};
// -------------------------------------------------------------------

class StrengthEquipReq : public ::google::protobuf::Message {
 public:
  StrengthEquipReq();
  virtual ~StrengthEquipReq();

  StrengthEquipReq(const StrengthEquipReq& from);

  inline StrengthEquipReq& operator=(const StrengthEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StrengthEquipReq& default_instance();

  void Swap(StrengthEquipReq* other);

  // implements Message ----------------------------------------------

  StrengthEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StrengthEquipReq& from);
  void MergeFrom(const StrengthEquipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 equip_guid = 1;
  inline bool has_equip_guid() const;
  inline void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 1;
  inline ::google::protobuf::int32 equip_guid() const;
  inline void set_equip_guid(::google::protobuf::int32 value);

  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:StrengthEquipReq)
 private:
  inline void set_has_equip_guid();
  inline void clear_has_equip_guid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 equip_guid_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CmdEquip_2eproto();
  friend void protobuf_AssignDesc_CmdEquip_2eproto();
  friend void protobuf_ShutdownFile_CmdEquip_2eproto();

  void InitAsDefaultInstance();
  static StrengthEquipReq* default_instance_;
};
// -------------------------------------------------------------------

class StrengthEquipResp : public ::google::protobuf::Message {
 public:
  StrengthEquipResp();
  virtual ~StrengthEquipResp();

  StrengthEquipResp(const StrengthEquipResp& from);

  inline StrengthEquipResp& operator=(const StrengthEquipResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StrengthEquipResp& default_instance();

  void Swap(StrengthEquipResp* other);

  // implements Message ----------------------------------------------

  StrengthEquipResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StrengthEquipResp& from);
  void MergeFrom(const StrengthEquipResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .UserSync user_sync = 2;
  inline bool has_user_sync() const;
  inline void clear_user_sync();
  static const int kUserSyncFieldNumber = 2;
  inline const ::UserSync& user_sync() const;
  inline ::UserSync* mutable_user_sync();
  inline ::UserSync* release_user_sync();
  inline void set_allocated_user_sync(::UserSync* user_sync);

  // optional int32 equip_guid = 3;
  inline bool has_equip_guid() const;
  inline void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 3;
  inline ::google::protobuf::int32 equip_guid() const;
  inline void set_equip_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:StrengthEquipResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_sync();
  inline void clear_has_user_sync();
  inline void set_has_equip_guid();
  inline void clear_has_equip_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::UserSync* user_sync_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 equip_guid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CmdEquip_2eproto();
  friend void protobuf_AssignDesc_CmdEquip_2eproto();
  friend void protobuf_ShutdownFile_CmdEquip_2eproto();

  void InitAsDefaultInstance();
  static StrengthEquipResp* default_instance_;
};
// -------------------------------------------------------------------

class ResolveEquipReq : public ::google::protobuf::Message {
 public:
  ResolveEquipReq();
  virtual ~ResolveEquipReq();

  ResolveEquipReq(const ResolveEquipReq& from);

  inline ResolveEquipReq& operator=(const ResolveEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResolveEquipReq& default_instance();

  void Swap(ResolveEquipReq* other);

  // implements Message ----------------------------------------------

  ResolveEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResolveEquipReq& from);
  void MergeFrom(const ResolveEquipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 equip_guid_list = 1;
  inline int equip_guid_list_size() const;
  inline void clear_equip_guid_list();
  static const int kEquipGuidListFieldNumber = 1;
  inline ::google::protobuf::int32 equip_guid_list(int index) const;
  inline void set_equip_guid_list(int index, ::google::protobuf::int32 value);
  inline void add_equip_guid_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      equip_guid_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_equip_guid_list();

  // @@protoc_insertion_point(class_scope:ResolveEquipReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > equip_guid_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CmdEquip_2eproto();
  friend void protobuf_AssignDesc_CmdEquip_2eproto();
  friend void protobuf_ShutdownFile_CmdEquip_2eproto();

  void InitAsDefaultInstance();
  static ResolveEquipReq* default_instance_;
};
// -------------------------------------------------------------------

class ResolveEquipResp : public ::google::protobuf::Message {
 public:
  ResolveEquipResp();
  virtual ~ResolveEquipResp();

  ResolveEquipResp(const ResolveEquipResp& from);

  inline ResolveEquipResp& operator=(const ResolveEquipResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResolveEquipResp& default_instance();

  void Swap(ResolveEquipResp* other);

  // implements Message ----------------------------------------------

  ResolveEquipResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResolveEquipResp& from);
  void MergeFrom(const ResolveEquipResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .UserSync user_sync = 2;
  inline bool has_user_sync() const;
  inline void clear_user_sync();
  static const int kUserSyncFieldNumber = 2;
  inline const ::UserSync& user_sync() const;
  inline ::UserSync* mutable_user_sync();
  inline ::UserSync* release_user_sync();
  inline void set_allocated_user_sync(::UserSync* user_sync);

  // repeated .Item get_item_list = 3;
  inline int get_item_list_size() const;
  inline void clear_get_item_list();
  static const int kGetItemListFieldNumber = 3;
  inline const ::Item& get_item_list(int index) const;
  inline ::Item* mutable_get_item_list(int index);
  inline ::Item* add_get_item_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Item >&
      get_item_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Item >*
      mutable_get_item_list();

  // @@protoc_insertion_point(class_scope:ResolveEquipResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_sync();
  inline void clear_has_user_sync();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::UserSync* user_sync_;
  ::google::protobuf::RepeatedPtrField< ::Item > get_item_list_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CmdEquip_2eproto();
  friend void protobuf_AssignDesc_CmdEquip_2eproto();
  friend void protobuf_ShutdownFile_CmdEquip_2eproto();

  void InitAsDefaultInstance();
  static ResolveEquipResp* default_instance_;
};
// -------------------------------------------------------------------

class CreateEquipReq : public ::google::protobuf::Message {
 public:
  CreateEquipReq();
  virtual ~CreateEquipReq();

  CreateEquipReq(const CreateEquipReq& from);

  inline CreateEquipReq& operator=(const CreateEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateEquipReq& default_instance();

  void Swap(CreateEquipReq* other);

  // implements Message ----------------------------------------------

  CreateEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateEquipReq& from);
  void MergeFrom(const CreateEquipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 equip_id = 2;
  inline bool has_equip_id() const;
  inline void clear_equip_id();
  static const int kEquipIdFieldNumber = 2;
  inline ::google::protobuf::int32 equip_id() const;
  inline void set_equip_id(::google::protobuf::int32 value);

  // optional int32 forge_guid = 3;
  inline bool has_forge_guid() const;
  inline void clear_forge_guid();
  static const int kForgeGuidFieldNumber = 3;
  inline ::google::protobuf::int32 forge_guid() const;
  inline void set_forge_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CreateEquipReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_equip_id();
  inline void clear_has_equip_id();
  inline void set_has_forge_guid();
  inline void clear_has_forge_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 equip_id_;
  ::google::protobuf::int32 forge_guid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CmdEquip_2eproto();
  friend void protobuf_AssignDesc_CmdEquip_2eproto();
  friend void protobuf_ShutdownFile_CmdEquip_2eproto();

  void InitAsDefaultInstance();
  static CreateEquipReq* default_instance_;
};
// -------------------------------------------------------------------

class CreateEquipResp : public ::google::protobuf::Message {
 public:
  CreateEquipResp();
  virtual ~CreateEquipResp();

  CreateEquipResp(const CreateEquipResp& from);

  inline CreateEquipResp& operator=(const CreateEquipResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateEquipResp& default_instance();

  void Swap(CreateEquipResp* other);

  // implements Message ----------------------------------------------

  CreateEquipResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateEquipResp& from);
  void MergeFrom(const CreateEquipResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .UserSync user_sync = 2;
  inline bool has_user_sync() const;
  inline void clear_user_sync();
  static const int kUserSyncFieldNumber = 2;
  inline const ::UserSync& user_sync() const;
  inline ::UserSync* mutable_user_sync();
  inline ::UserSync* release_user_sync();
  inline void set_allocated_user_sync(::UserSync* user_sync);

  // optional int32 get_equip_guid = 3;
  inline bool has_get_equip_guid() const;
  inline void clear_get_equip_guid();
  static const int kGetEquipGuidFieldNumber = 3;
  inline ::google::protobuf::int32 get_equip_guid() const;
  inline void set_get_equip_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CreateEquipResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_sync();
  inline void clear_has_user_sync();
  inline void set_has_get_equip_guid();
  inline void clear_has_get_equip_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::UserSync* user_sync_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 get_equip_guid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CmdEquip_2eproto();
  friend void protobuf_AssignDesc_CmdEquip_2eproto();
  friend void protobuf_ShutdownFile_CmdEquip_2eproto();

  void InitAsDefaultInstance();
  static CreateEquipResp* default_instance_;
};
// -------------------------------------------------------------------

class ResolveBlueprintReq : public ::google::protobuf::Message {
 public:
  ResolveBlueprintReq();
  virtual ~ResolveBlueprintReq();

  ResolveBlueprintReq(const ResolveBlueprintReq& from);

  inline ResolveBlueprintReq& operator=(const ResolveBlueprintReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResolveBlueprintReq& default_instance();

  void Swap(ResolveBlueprintReq* other);

  // implements Message ----------------------------------------------

  ResolveBlueprintReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResolveBlueprintReq& from);
  void MergeFrom(const ResolveBlueprintReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pair item_list = 1;
  inline int item_list_size() const;
  inline void clear_item_list();
  static const int kItemListFieldNumber = 1;
  inline const ::Pair& item_list(int index) const;
  inline ::Pair* mutable_item_list(int index);
  inline ::Pair* add_item_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Pair >&
      item_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pair >*
      mutable_item_list();

  // @@protoc_insertion_point(class_scope:ResolveBlueprintReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Pair > item_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CmdEquip_2eproto();
  friend void protobuf_AssignDesc_CmdEquip_2eproto();
  friend void protobuf_ShutdownFile_CmdEquip_2eproto();

  void InitAsDefaultInstance();
  static ResolveBlueprintReq* default_instance_;
};
// -------------------------------------------------------------------

class ResolveBlueprintResp : public ::google::protobuf::Message {
 public:
  ResolveBlueprintResp();
  virtual ~ResolveBlueprintResp();

  ResolveBlueprintResp(const ResolveBlueprintResp& from);

  inline ResolveBlueprintResp& operator=(const ResolveBlueprintResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResolveBlueprintResp& default_instance();

  void Swap(ResolveBlueprintResp* other);

  // implements Message ----------------------------------------------

  ResolveBlueprintResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResolveBlueprintResp& from);
  void MergeFrom(const ResolveBlueprintResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .UserSync user_sync = 2;
  inline bool has_user_sync() const;
  inline void clear_user_sync();
  static const int kUserSyncFieldNumber = 2;
  inline const ::UserSync& user_sync() const;
  inline ::UserSync* mutable_user_sync();
  inline ::UserSync* release_user_sync();
  inline void set_allocated_user_sync(::UserSync* user_sync);

  // repeated .Pair get_item_list = 3;
  inline int get_item_list_size() const;
  inline void clear_get_item_list();
  static const int kGetItemListFieldNumber = 3;
  inline const ::Pair& get_item_list(int index) const;
  inline ::Pair* mutable_get_item_list(int index);
  inline ::Pair* add_get_item_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Pair >&
      get_item_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pair >*
      mutable_get_item_list();

  // @@protoc_insertion_point(class_scope:ResolveBlueprintResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_sync();
  inline void clear_has_user_sync();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::UserSync* user_sync_;
  ::google::protobuf::RepeatedPtrField< ::Pair > get_item_list_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CmdEquip_2eproto();
  friend void protobuf_AssignDesc_CmdEquip_2eproto();
  friend void protobuf_ShutdownFile_CmdEquip_2eproto();

  void InitAsDefaultInstance();
  static ResolveBlueprintResp* default_instance_;
};
// -------------------------------------------------------------------

class GemEquipReq : public ::google::protobuf::Message {
 public:
  GemEquipReq();
  virtual ~GemEquipReq();

  GemEquipReq(const GemEquipReq& from);

  inline GemEquipReq& operator=(const GemEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GemEquipReq& default_instance();

  void Swap(GemEquipReq* other);

  // implements Message ----------------------------------------------

  GemEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GemEquipReq& from);
  void MergeFrom(const GemEquipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 ship_guid = 2;
  inline bool has_ship_guid() const;
  inline void clear_ship_guid();
  static const int kShipGuidFieldNumber = 2;
  inline ::google::protobuf::int32 ship_guid() const;
  inline void set_ship_guid(::google::protobuf::int32 value);

  // required int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int32 gem_id = 4;
  inline bool has_gem_id() const;
  inline void clear_gem_id();
  static const int kGemIdFieldNumber = 4;
  inline ::google::protobuf::int32 gem_id() const;
  inline void set_gem_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GemEquipReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_ship_guid();
  inline void clear_has_ship_guid();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_gem_id();
  inline void clear_has_gem_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 ship_guid_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 gem_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CmdEquip_2eproto();
  friend void protobuf_AssignDesc_CmdEquip_2eproto();
  friend void protobuf_ShutdownFile_CmdEquip_2eproto();

  void InitAsDefaultInstance();
  static GemEquipReq* default_instance_;
};
// -------------------------------------------------------------------

class GemEquipResp : public ::google::protobuf::Message {
 public:
  GemEquipResp();
  virtual ~GemEquipResp();

  GemEquipResp(const GemEquipResp& from);

  inline GemEquipResp& operator=(const GemEquipResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GemEquipResp& default_instance();

  void Swap(GemEquipResp* other);

  // implements Message ----------------------------------------------

  GemEquipResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GemEquipResp& from);
  void MergeFrom(const GemEquipResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .UserSync user_sync = 2;
  inline bool has_user_sync() const;
  inline void clear_user_sync();
  static const int kUserSyncFieldNumber = 2;
  inline const ::UserSync& user_sync() const;
  inline ::UserSync* mutable_user_sync();
  inline ::UserSync* release_user_sync();
  inline void set_allocated_user_sync(::UserSync* user_sync);

  // @@protoc_insertion_point(class_scope:GemEquipResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_sync();
  inline void clear_has_user_sync();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::UserSync* user_sync_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CmdEquip_2eproto();
  friend void protobuf_AssignDesc_CmdEquip_2eproto();
  friend void protobuf_ShutdownFile_CmdEquip_2eproto();

  void InitAsDefaultInstance();
  static GemEquipResp* default_instance_;
};
// -------------------------------------------------------------------

class MixGemReq : public ::google::protobuf::Message {
 public:
  MixGemReq();
  virtual ~MixGemReq();

  MixGemReq(const MixGemReq& from);

  inline MixGemReq& operator=(const MixGemReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MixGemReq& default_instance();

  void Swap(MixGemReq* other);

  // implements Message ----------------------------------------------

  MixGemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MixGemReq& from);
  void MergeFrom(const MixGemReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Gem gem_list = 1;
  inline int gem_list_size() const;
  inline void clear_gem_list();
  static const int kGemListFieldNumber = 1;
  inline const ::Gem& gem_list(int index) const;
  inline ::Gem* mutable_gem_list(int index);
  inline ::Gem* add_gem_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Gem >&
      gem_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Gem >*
      mutable_gem_list();

  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MixGemReq)
 private:
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Gem > gem_list_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CmdEquip_2eproto();
  friend void protobuf_AssignDesc_CmdEquip_2eproto();
  friend void protobuf_ShutdownFile_CmdEquip_2eproto();

  void InitAsDefaultInstance();
  static MixGemReq* default_instance_;
};
// -------------------------------------------------------------------

class MixGemResp : public ::google::protobuf::Message {
 public:
  MixGemResp();
  virtual ~MixGemResp();

  MixGemResp(const MixGemResp& from);

  inline MixGemResp& operator=(const MixGemResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MixGemResp& default_instance();

  void Swap(MixGemResp* other);

  // implements Message ----------------------------------------------

  MixGemResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MixGemResp& from);
  void MergeFrom(const MixGemResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .UserSync user_sync = 2;
  inline bool has_user_sync() const;
  inline void clear_user_sync();
  static const int kUserSyncFieldNumber = 2;
  inline const ::UserSync& user_sync() const;
  inline ::UserSync* mutable_user_sync();
  inline ::UserSync* release_user_sync();
  inline void set_allocated_user_sync(::UserSync* user_sync);

  // optional bool mix_result = 3;
  inline bool has_mix_result() const;
  inline void clear_mix_result();
  static const int kMixResultFieldNumber = 3;
  inline bool mix_result() const;
  inline void set_mix_result(bool value);

  // repeated .Gem remain_list = 4;
  inline int remain_list_size() const;
  inline void clear_remain_list();
  static const int kRemainListFieldNumber = 4;
  inline const ::Gem& remain_list(int index) const;
  inline ::Gem* mutable_remain_list(int index);
  inline ::Gem* add_remain_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Gem >&
      remain_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Gem >*
      mutable_remain_list();

  // @@protoc_insertion_point(class_scope:MixGemResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_sync();
  inline void clear_has_user_sync();
  inline void set_has_mix_result();
  inline void clear_has_mix_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::UserSync* user_sync_;
  ::google::protobuf::int32 result_;
  bool mix_result_;
  ::google::protobuf::RepeatedPtrField< ::Gem > remain_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CmdEquip_2eproto();
  friend void protobuf_AssignDesc_CmdEquip_2eproto();
  friend void protobuf_ShutdownFile_CmdEquip_2eproto();

  void InitAsDefaultInstance();
  static MixGemResp* default_instance_;
};
// ===================================================================


// ===================================================================

// EquipLevelUpReq

// required int32 id = 1;
inline bool EquipLevelUpReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipLevelUpReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipLevelUpReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipLevelUpReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 EquipLevelUpReq::id() const {
  return id_;
}
inline void EquipLevelUpReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 add_value = 2;
inline bool EquipLevelUpReq::has_add_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipLevelUpReq::set_has_add_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipLevelUpReq::clear_has_add_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipLevelUpReq::clear_add_value() {
  add_value_ = 0;
  clear_has_add_value();
}
inline ::google::protobuf::int32 EquipLevelUpReq::add_value() const {
  return add_value_;
}
inline void EquipLevelUpReq::set_add_value(::google::protobuf::int32 value) {
  set_has_add_value();
  add_value_ = value;
}

// optional int32 add_new_player = 3;
inline bool EquipLevelUpReq::has_add_new_player() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipLevelUpReq::set_has_add_new_player() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipLevelUpReq::clear_has_add_new_player() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipLevelUpReq::clear_add_new_player() {
  add_new_player_ = 0;
  clear_has_add_new_player();
}
inline ::google::protobuf::int32 EquipLevelUpReq::add_new_player() const {
  return add_new_player_;
}
inline void EquipLevelUpReq::set_add_new_player(::google::protobuf::int32 value) {
  set_has_add_new_player();
  add_new_player_ = value;
}

// -------------------------------------------------------------------

// EquipLevelUpResp

// required int32 result = 1;
inline bool EquipLevelUpResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipLevelUpResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipLevelUpResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipLevelUpResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 EquipLevelUpResp::result() const {
  return result_;
}
inline void EquipLevelUpResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .Equip equip = 2;
inline bool EquipLevelUpResp::has_equip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipLevelUpResp::set_has_equip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipLevelUpResp::clear_has_equip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipLevelUpResp::clear_equip() {
  if (equip_ != NULL) equip_->::Equip::Clear();
  clear_has_equip();
}
inline const ::Equip& EquipLevelUpResp::equip() const {
  return equip_ != NULL ? *equip_ : *default_instance_->equip_;
}
inline ::Equip* EquipLevelUpResp::mutable_equip() {
  set_has_equip();
  if (equip_ == NULL) equip_ = new ::Equip;
  return equip_;
}
inline ::Equip* EquipLevelUpResp::release_equip() {
  clear_has_equip();
  ::Equip* temp = equip_;
  equip_ = NULL;
  return temp;
}
inline void EquipLevelUpResp::set_allocated_equip(::Equip* equip) {
  delete equip_;
  equip_ = equip;
  if (equip) {
    set_has_equip();
  } else {
    clear_has_equip();
  }
}

// optional int32 add_new_player = 3;
inline bool EquipLevelUpResp::has_add_new_player() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipLevelUpResp::set_has_add_new_player() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipLevelUpResp::clear_has_add_new_player() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipLevelUpResp::clear_add_new_player() {
  add_new_player_ = 0;
  clear_has_add_new_player();
}
inline ::google::protobuf::int32 EquipLevelUpResp::add_new_player() const {
  return add_new_player_;
}
inline void EquipLevelUpResp::set_add_new_player(::google::protobuf::int32 value) {
  set_has_add_new_player();
  add_new_player_ = value;
}

// -------------------------------------------------------------------

// EquipEnchaseReq

// required int32 id = 1;
inline bool EquipEnchaseReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipEnchaseReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipEnchaseReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipEnchaseReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 EquipEnchaseReq::id() const {
  return id_;
}
inline void EquipEnchaseReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// EquipEnchaseResp

// required int32 result = 1;
inline bool EquipEnchaseResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipEnchaseResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipEnchaseResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipEnchaseResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 EquipEnchaseResp::result() const {
  return result_;
}
inline void EquipEnchaseResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ShipEquipReq

// required int32 ship_guid = 1;
inline bool ShipEquipReq::has_ship_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShipEquipReq::set_has_ship_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShipEquipReq::clear_has_ship_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShipEquipReq::clear_ship_guid() {
  ship_guid_ = 0;
  clear_has_ship_guid();
}
inline ::google::protobuf::int32 ShipEquipReq::ship_guid() const {
  return ship_guid_;
}
inline void ShipEquipReq::set_ship_guid(::google::protobuf::int32 value) {
  set_has_ship_guid();
  ship_guid_ = value;
}

// repeated int32 equip_index_list = 2;
inline int ShipEquipReq::equip_index_list_size() const {
  return equip_index_list_.size();
}
inline void ShipEquipReq::clear_equip_index_list() {
  equip_index_list_.Clear();
}
inline ::google::protobuf::int32 ShipEquipReq::equip_index_list(int index) const {
  return equip_index_list_.Get(index);
}
inline void ShipEquipReq::set_equip_index_list(int index, ::google::protobuf::int32 value) {
  equip_index_list_.Set(index, value);
}
inline void ShipEquipReq::add_equip_index_list(::google::protobuf::int32 value) {
  equip_index_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ShipEquipReq::equip_index_list() const {
  return equip_index_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ShipEquipReq::mutable_equip_index_list() {
  return &equip_index_list_;
}

// repeated int32 equip_guid_list = 3;
inline int ShipEquipReq::equip_guid_list_size() const {
  return equip_guid_list_.size();
}
inline void ShipEquipReq::clear_equip_guid_list() {
  equip_guid_list_.Clear();
}
inline ::google::protobuf::int32 ShipEquipReq::equip_guid_list(int index) const {
  return equip_guid_list_.Get(index);
}
inline void ShipEquipReq::set_equip_guid_list(int index, ::google::protobuf::int32 value) {
  equip_guid_list_.Set(index, value);
}
inline void ShipEquipReq::add_equip_guid_list(::google::protobuf::int32 value) {
  equip_guid_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ShipEquipReq::equip_guid_list() const {
  return equip_guid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ShipEquipReq::mutable_equip_guid_list() {
  return &equip_guid_list_;
}

// -------------------------------------------------------------------

// ShipEquipResp

// required int32 result = 1;
inline bool ShipEquipResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShipEquipResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShipEquipResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShipEquipResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ShipEquipResp::result() const {
  return result_;
}
inline void ShipEquipResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .UserSync user_sync = 2;
inline bool ShipEquipResp::has_user_sync() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShipEquipResp::set_has_user_sync() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShipEquipResp::clear_has_user_sync() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShipEquipResp::clear_user_sync() {
  if (user_sync_ != NULL) user_sync_->::UserSync::Clear();
  clear_has_user_sync();
}
inline const ::UserSync& ShipEquipResp::user_sync() const {
  return user_sync_ != NULL ? *user_sync_ : *default_instance_->user_sync_;
}
inline ::UserSync* ShipEquipResp::mutable_user_sync() {
  set_has_user_sync();
  if (user_sync_ == NULL) user_sync_ = new ::UserSync;
  return user_sync_;
}
inline ::UserSync* ShipEquipResp::release_user_sync() {
  clear_has_user_sync();
  ::UserSync* temp = user_sync_;
  user_sync_ = NULL;
  return temp;
}
inline void ShipEquipResp::set_allocated_user_sync(::UserSync* user_sync) {
  delete user_sync_;
  user_sync_ = user_sync;
  if (user_sync) {
    set_has_user_sync();
  } else {
    clear_has_user_sync();
  }
}

// required int32 ship_guid = 3;
inline bool ShipEquipResp::has_ship_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShipEquipResp::set_has_ship_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShipEquipResp::clear_has_ship_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShipEquipResp::clear_ship_guid() {
  ship_guid_ = 0;
  clear_has_ship_guid();
}
inline ::google::protobuf::int32 ShipEquipResp::ship_guid() const {
  return ship_guid_;
}
inline void ShipEquipResp::set_ship_guid(::google::protobuf::int32 value) {
  set_has_ship_guid();
  ship_guid_ = value;
}

// repeated int32 equip_index_list = 4;
inline int ShipEquipResp::equip_index_list_size() const {
  return equip_index_list_.size();
}
inline void ShipEquipResp::clear_equip_index_list() {
  equip_index_list_.Clear();
}
inline ::google::protobuf::int32 ShipEquipResp::equip_index_list(int index) const {
  return equip_index_list_.Get(index);
}
inline void ShipEquipResp::set_equip_index_list(int index, ::google::protobuf::int32 value) {
  equip_index_list_.Set(index, value);
}
inline void ShipEquipResp::add_equip_index_list(::google::protobuf::int32 value) {
  equip_index_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ShipEquipResp::equip_index_list() const {
  return equip_index_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ShipEquipResp::mutable_equip_index_list() {
  return &equip_index_list_;
}

// repeated int32 equip_guid_list = 5;
inline int ShipEquipResp::equip_guid_list_size() const {
  return equip_guid_list_.size();
}
inline void ShipEquipResp::clear_equip_guid_list() {
  equip_guid_list_.Clear();
}
inline ::google::protobuf::int32 ShipEquipResp::equip_guid_list(int index) const {
  return equip_guid_list_.Get(index);
}
inline void ShipEquipResp::set_equip_guid_list(int index, ::google::protobuf::int32 value) {
  equip_guid_list_.Set(index, value);
}
inline void ShipEquipResp::add_equip_guid_list(::google::protobuf::int32 value) {
  equip_guid_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ShipEquipResp::equip_guid_list() const {
  return equip_guid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ShipEquipResp::mutable_equip_guid_list() {
  return &equip_guid_list_;
}

// -------------------------------------------------------------------

// StrengthEquipReq

// required int32 equip_guid = 1;
inline bool StrengthEquipReq::has_equip_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StrengthEquipReq::set_has_equip_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StrengthEquipReq::clear_has_equip_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StrengthEquipReq::clear_equip_guid() {
  equip_guid_ = 0;
  clear_has_equip_guid();
}
inline ::google::protobuf::int32 StrengthEquipReq::equip_guid() const {
  return equip_guid_;
}
inline void StrengthEquipReq::set_equip_guid(::google::protobuf::int32 value) {
  set_has_equip_guid();
  equip_guid_ = value;
}

// optional int32 count = 2;
inline bool StrengthEquipReq::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StrengthEquipReq::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StrengthEquipReq::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StrengthEquipReq::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 StrengthEquipReq::count() const {
  return count_;
}
inline void StrengthEquipReq::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// StrengthEquipResp

// required int32 result = 1;
inline bool StrengthEquipResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StrengthEquipResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StrengthEquipResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StrengthEquipResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 StrengthEquipResp::result() const {
  return result_;
}
inline void StrengthEquipResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .UserSync user_sync = 2;
inline bool StrengthEquipResp::has_user_sync() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StrengthEquipResp::set_has_user_sync() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StrengthEquipResp::clear_has_user_sync() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StrengthEquipResp::clear_user_sync() {
  if (user_sync_ != NULL) user_sync_->::UserSync::Clear();
  clear_has_user_sync();
}
inline const ::UserSync& StrengthEquipResp::user_sync() const {
  return user_sync_ != NULL ? *user_sync_ : *default_instance_->user_sync_;
}
inline ::UserSync* StrengthEquipResp::mutable_user_sync() {
  set_has_user_sync();
  if (user_sync_ == NULL) user_sync_ = new ::UserSync;
  return user_sync_;
}
inline ::UserSync* StrengthEquipResp::release_user_sync() {
  clear_has_user_sync();
  ::UserSync* temp = user_sync_;
  user_sync_ = NULL;
  return temp;
}
inline void StrengthEquipResp::set_allocated_user_sync(::UserSync* user_sync) {
  delete user_sync_;
  user_sync_ = user_sync;
  if (user_sync) {
    set_has_user_sync();
  } else {
    clear_has_user_sync();
  }
}

// optional int32 equip_guid = 3;
inline bool StrengthEquipResp::has_equip_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StrengthEquipResp::set_has_equip_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StrengthEquipResp::clear_has_equip_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StrengthEquipResp::clear_equip_guid() {
  equip_guid_ = 0;
  clear_has_equip_guid();
}
inline ::google::protobuf::int32 StrengthEquipResp::equip_guid() const {
  return equip_guid_;
}
inline void StrengthEquipResp::set_equip_guid(::google::protobuf::int32 value) {
  set_has_equip_guid();
  equip_guid_ = value;
}

// -------------------------------------------------------------------

// ResolveEquipReq

// repeated int32 equip_guid_list = 1;
inline int ResolveEquipReq::equip_guid_list_size() const {
  return equip_guid_list_.size();
}
inline void ResolveEquipReq::clear_equip_guid_list() {
  equip_guid_list_.Clear();
}
inline ::google::protobuf::int32 ResolveEquipReq::equip_guid_list(int index) const {
  return equip_guid_list_.Get(index);
}
inline void ResolveEquipReq::set_equip_guid_list(int index, ::google::protobuf::int32 value) {
  equip_guid_list_.Set(index, value);
}
inline void ResolveEquipReq::add_equip_guid_list(::google::protobuf::int32 value) {
  equip_guid_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ResolveEquipReq::equip_guid_list() const {
  return equip_guid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ResolveEquipReq::mutable_equip_guid_list() {
  return &equip_guid_list_;
}

// -------------------------------------------------------------------

// ResolveEquipResp

// required int32 result = 1;
inline bool ResolveEquipResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResolveEquipResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResolveEquipResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResolveEquipResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ResolveEquipResp::result() const {
  return result_;
}
inline void ResolveEquipResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .UserSync user_sync = 2;
inline bool ResolveEquipResp::has_user_sync() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResolveEquipResp::set_has_user_sync() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResolveEquipResp::clear_has_user_sync() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResolveEquipResp::clear_user_sync() {
  if (user_sync_ != NULL) user_sync_->::UserSync::Clear();
  clear_has_user_sync();
}
inline const ::UserSync& ResolveEquipResp::user_sync() const {
  return user_sync_ != NULL ? *user_sync_ : *default_instance_->user_sync_;
}
inline ::UserSync* ResolveEquipResp::mutable_user_sync() {
  set_has_user_sync();
  if (user_sync_ == NULL) user_sync_ = new ::UserSync;
  return user_sync_;
}
inline ::UserSync* ResolveEquipResp::release_user_sync() {
  clear_has_user_sync();
  ::UserSync* temp = user_sync_;
  user_sync_ = NULL;
  return temp;
}
inline void ResolveEquipResp::set_allocated_user_sync(::UserSync* user_sync) {
  delete user_sync_;
  user_sync_ = user_sync;
  if (user_sync) {
    set_has_user_sync();
  } else {
    clear_has_user_sync();
  }
}

// repeated .Item get_item_list = 3;
inline int ResolveEquipResp::get_item_list_size() const {
  return get_item_list_.size();
}
inline void ResolveEquipResp::clear_get_item_list() {
  get_item_list_.Clear();
}
inline const ::Item& ResolveEquipResp::get_item_list(int index) const {
  return get_item_list_.Get(index);
}
inline ::Item* ResolveEquipResp::mutable_get_item_list(int index) {
  return get_item_list_.Mutable(index);
}
inline ::Item* ResolveEquipResp::add_get_item_list() {
  return get_item_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Item >&
ResolveEquipResp::get_item_list() const {
  return get_item_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Item >*
ResolveEquipResp::mutable_get_item_list() {
  return &get_item_list_;
}

// -------------------------------------------------------------------

// CreateEquipReq

// required int32 type = 1;
inline bool CreateEquipReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateEquipReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateEquipReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateEquipReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CreateEquipReq::type() const {
  return type_;
}
inline void CreateEquipReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 equip_id = 2;
inline bool CreateEquipReq::has_equip_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateEquipReq::set_has_equip_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateEquipReq::clear_has_equip_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateEquipReq::clear_equip_id() {
  equip_id_ = 0;
  clear_has_equip_id();
}
inline ::google::protobuf::int32 CreateEquipReq::equip_id() const {
  return equip_id_;
}
inline void CreateEquipReq::set_equip_id(::google::protobuf::int32 value) {
  set_has_equip_id();
  equip_id_ = value;
}

// optional int32 forge_guid = 3;
inline bool CreateEquipReq::has_forge_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateEquipReq::set_has_forge_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateEquipReq::clear_has_forge_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateEquipReq::clear_forge_guid() {
  forge_guid_ = 0;
  clear_has_forge_guid();
}
inline ::google::protobuf::int32 CreateEquipReq::forge_guid() const {
  return forge_guid_;
}
inline void CreateEquipReq::set_forge_guid(::google::protobuf::int32 value) {
  set_has_forge_guid();
  forge_guid_ = value;
}

// -------------------------------------------------------------------

// CreateEquipResp

// required int32 result = 1;
inline bool CreateEquipResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateEquipResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateEquipResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateEquipResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CreateEquipResp::result() const {
  return result_;
}
inline void CreateEquipResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .UserSync user_sync = 2;
inline bool CreateEquipResp::has_user_sync() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateEquipResp::set_has_user_sync() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateEquipResp::clear_has_user_sync() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateEquipResp::clear_user_sync() {
  if (user_sync_ != NULL) user_sync_->::UserSync::Clear();
  clear_has_user_sync();
}
inline const ::UserSync& CreateEquipResp::user_sync() const {
  return user_sync_ != NULL ? *user_sync_ : *default_instance_->user_sync_;
}
inline ::UserSync* CreateEquipResp::mutable_user_sync() {
  set_has_user_sync();
  if (user_sync_ == NULL) user_sync_ = new ::UserSync;
  return user_sync_;
}
inline ::UserSync* CreateEquipResp::release_user_sync() {
  clear_has_user_sync();
  ::UserSync* temp = user_sync_;
  user_sync_ = NULL;
  return temp;
}
inline void CreateEquipResp::set_allocated_user_sync(::UserSync* user_sync) {
  delete user_sync_;
  user_sync_ = user_sync;
  if (user_sync) {
    set_has_user_sync();
  } else {
    clear_has_user_sync();
  }
}

// optional int32 get_equip_guid = 3;
inline bool CreateEquipResp::has_get_equip_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateEquipResp::set_has_get_equip_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateEquipResp::clear_has_get_equip_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateEquipResp::clear_get_equip_guid() {
  get_equip_guid_ = 0;
  clear_has_get_equip_guid();
}
inline ::google::protobuf::int32 CreateEquipResp::get_equip_guid() const {
  return get_equip_guid_;
}
inline void CreateEquipResp::set_get_equip_guid(::google::protobuf::int32 value) {
  set_has_get_equip_guid();
  get_equip_guid_ = value;
}

// -------------------------------------------------------------------

// ResolveBlueprintReq

// repeated .Pair item_list = 1;
inline int ResolveBlueprintReq::item_list_size() const {
  return item_list_.size();
}
inline void ResolveBlueprintReq::clear_item_list() {
  item_list_.Clear();
}
inline const ::Pair& ResolveBlueprintReq::item_list(int index) const {
  return item_list_.Get(index);
}
inline ::Pair* ResolveBlueprintReq::mutable_item_list(int index) {
  return item_list_.Mutable(index);
}
inline ::Pair* ResolveBlueprintReq::add_item_list() {
  return item_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pair >&
ResolveBlueprintReq::item_list() const {
  return item_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pair >*
ResolveBlueprintReq::mutable_item_list() {
  return &item_list_;
}

// -------------------------------------------------------------------

// ResolveBlueprintResp

// required int32 result = 1;
inline bool ResolveBlueprintResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResolveBlueprintResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResolveBlueprintResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResolveBlueprintResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ResolveBlueprintResp::result() const {
  return result_;
}
inline void ResolveBlueprintResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .UserSync user_sync = 2;
inline bool ResolveBlueprintResp::has_user_sync() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResolveBlueprintResp::set_has_user_sync() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResolveBlueprintResp::clear_has_user_sync() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResolveBlueprintResp::clear_user_sync() {
  if (user_sync_ != NULL) user_sync_->::UserSync::Clear();
  clear_has_user_sync();
}
inline const ::UserSync& ResolveBlueprintResp::user_sync() const {
  return user_sync_ != NULL ? *user_sync_ : *default_instance_->user_sync_;
}
inline ::UserSync* ResolveBlueprintResp::mutable_user_sync() {
  set_has_user_sync();
  if (user_sync_ == NULL) user_sync_ = new ::UserSync;
  return user_sync_;
}
inline ::UserSync* ResolveBlueprintResp::release_user_sync() {
  clear_has_user_sync();
  ::UserSync* temp = user_sync_;
  user_sync_ = NULL;
  return temp;
}
inline void ResolveBlueprintResp::set_allocated_user_sync(::UserSync* user_sync) {
  delete user_sync_;
  user_sync_ = user_sync;
  if (user_sync) {
    set_has_user_sync();
  } else {
    clear_has_user_sync();
  }
}

// repeated .Pair get_item_list = 3;
inline int ResolveBlueprintResp::get_item_list_size() const {
  return get_item_list_.size();
}
inline void ResolveBlueprintResp::clear_get_item_list() {
  get_item_list_.Clear();
}
inline const ::Pair& ResolveBlueprintResp::get_item_list(int index) const {
  return get_item_list_.Get(index);
}
inline ::Pair* ResolveBlueprintResp::mutable_get_item_list(int index) {
  return get_item_list_.Mutable(index);
}
inline ::Pair* ResolveBlueprintResp::add_get_item_list() {
  return get_item_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pair >&
ResolveBlueprintResp::get_item_list() const {
  return get_item_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pair >*
ResolveBlueprintResp::mutable_get_item_list() {
  return &get_item_list_;
}

// -------------------------------------------------------------------

// GemEquipReq

// required int32 type = 1;
inline bool GemEquipReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GemEquipReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GemEquipReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GemEquipReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GemEquipReq::type() const {
  return type_;
}
inline void GemEquipReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 ship_guid = 2;
inline bool GemEquipReq::has_ship_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GemEquipReq::set_has_ship_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GemEquipReq::clear_has_ship_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GemEquipReq::clear_ship_guid() {
  ship_guid_ = 0;
  clear_has_ship_guid();
}
inline ::google::protobuf::int32 GemEquipReq::ship_guid() const {
  return ship_guid_;
}
inline void GemEquipReq::set_ship_guid(::google::protobuf::int32 value) {
  set_has_ship_guid();
  ship_guid_ = value;
}

// required int32 index = 3;
inline bool GemEquipReq::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GemEquipReq::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GemEquipReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GemEquipReq::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 GemEquipReq::index() const {
  return index_;
}
inline void GemEquipReq::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// required int32 gem_id = 4;
inline bool GemEquipReq::has_gem_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GemEquipReq::set_has_gem_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GemEquipReq::clear_has_gem_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GemEquipReq::clear_gem_id() {
  gem_id_ = 0;
  clear_has_gem_id();
}
inline ::google::protobuf::int32 GemEquipReq::gem_id() const {
  return gem_id_;
}
inline void GemEquipReq::set_gem_id(::google::protobuf::int32 value) {
  set_has_gem_id();
  gem_id_ = value;
}

// -------------------------------------------------------------------

// GemEquipResp

// required int32 result = 1;
inline bool GemEquipResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GemEquipResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GemEquipResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GemEquipResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GemEquipResp::result() const {
  return result_;
}
inline void GemEquipResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .UserSync user_sync = 2;
inline bool GemEquipResp::has_user_sync() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GemEquipResp::set_has_user_sync() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GemEquipResp::clear_has_user_sync() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GemEquipResp::clear_user_sync() {
  if (user_sync_ != NULL) user_sync_->::UserSync::Clear();
  clear_has_user_sync();
}
inline const ::UserSync& GemEquipResp::user_sync() const {
  return user_sync_ != NULL ? *user_sync_ : *default_instance_->user_sync_;
}
inline ::UserSync* GemEquipResp::mutable_user_sync() {
  set_has_user_sync();
  if (user_sync_ == NULL) user_sync_ = new ::UserSync;
  return user_sync_;
}
inline ::UserSync* GemEquipResp::release_user_sync() {
  clear_has_user_sync();
  ::UserSync* temp = user_sync_;
  user_sync_ = NULL;
  return temp;
}
inline void GemEquipResp::set_allocated_user_sync(::UserSync* user_sync) {
  delete user_sync_;
  user_sync_ = user_sync;
  if (user_sync) {
    set_has_user_sync();
  } else {
    clear_has_user_sync();
  }
}

// -------------------------------------------------------------------

// MixGemReq

// repeated .Gem gem_list = 1;
inline int MixGemReq::gem_list_size() const {
  return gem_list_.size();
}
inline void MixGemReq::clear_gem_list() {
  gem_list_.Clear();
}
inline const ::Gem& MixGemReq::gem_list(int index) const {
  return gem_list_.Get(index);
}
inline ::Gem* MixGemReq::mutable_gem_list(int index) {
  return gem_list_.Mutable(index);
}
inline ::Gem* MixGemReq::add_gem_list() {
  return gem_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Gem >&
MixGemReq::gem_list() const {
  return gem_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Gem >*
MixGemReq::mutable_gem_list() {
  return &gem_list_;
}

// optional int32 count = 2;
inline bool MixGemReq::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MixGemReq::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MixGemReq::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MixGemReq::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 MixGemReq::count() const {
  return count_;
}
inline void MixGemReq::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// MixGemResp

// required int32 result = 1;
inline bool MixGemResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MixGemResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MixGemResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MixGemResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MixGemResp::result() const {
  return result_;
}
inline void MixGemResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .UserSync user_sync = 2;
inline bool MixGemResp::has_user_sync() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MixGemResp::set_has_user_sync() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MixGemResp::clear_has_user_sync() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MixGemResp::clear_user_sync() {
  if (user_sync_ != NULL) user_sync_->::UserSync::Clear();
  clear_has_user_sync();
}
inline const ::UserSync& MixGemResp::user_sync() const {
  return user_sync_ != NULL ? *user_sync_ : *default_instance_->user_sync_;
}
inline ::UserSync* MixGemResp::mutable_user_sync() {
  set_has_user_sync();
  if (user_sync_ == NULL) user_sync_ = new ::UserSync;
  return user_sync_;
}
inline ::UserSync* MixGemResp::release_user_sync() {
  clear_has_user_sync();
  ::UserSync* temp = user_sync_;
  user_sync_ = NULL;
  return temp;
}
inline void MixGemResp::set_allocated_user_sync(::UserSync* user_sync) {
  delete user_sync_;
  user_sync_ = user_sync;
  if (user_sync) {
    set_has_user_sync();
  } else {
    clear_has_user_sync();
  }
}

// optional bool mix_result = 3;
inline bool MixGemResp::has_mix_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MixGemResp::set_has_mix_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MixGemResp::clear_has_mix_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MixGemResp::clear_mix_result() {
  mix_result_ = false;
  clear_has_mix_result();
}
inline bool MixGemResp::mix_result() const {
  return mix_result_;
}
inline void MixGemResp::set_mix_result(bool value) {
  set_has_mix_result();
  mix_result_ = value;
}

// repeated .Gem remain_list = 4;
inline int MixGemResp::remain_list_size() const {
  return remain_list_.size();
}
inline void MixGemResp::clear_remain_list() {
  remain_list_.Clear();
}
inline const ::Gem& MixGemResp::remain_list(int index) const {
  return remain_list_.Get(index);
}
inline ::Gem* MixGemResp::mutable_remain_list(int index) {
  return remain_list_.Mutable(index);
}
inline ::Gem* MixGemResp::add_remain_list() {
  return remain_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Gem >&
MixGemResp::remain_list() const {
  return remain_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Gem >*
MixGemResp::mutable_remain_list() {
  return &remain_list_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CmdEquip_2eproto__INCLUDED
