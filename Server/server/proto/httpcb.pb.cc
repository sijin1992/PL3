// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: httpcb.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "httpcb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* HttpAddMondyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HttpAddMondyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* HttpAddMondyResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HttpAddMondyResp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_httpcb_2eproto() {
  protobuf_AddDesc_httpcb_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "httpcb.proto");
  GOOGLE_CHECK(file != NULL);
  HttpAddMondyReq_descriptor_ = file->message_type(0);
  static const int HttpAddMondyReq_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpAddMondyReq, fd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpAddMondyReq, session_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpAddMondyReq, orderno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpAddMondyReq, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpAddMondyReq, sid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpAddMondyReq, extinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpAddMondyReq, selfdef_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpAddMondyReq, gamemoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpAddMondyReq, basemoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpAddMondyReq, monthcard_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpAddMondyReq, fake_),
  };
  HttpAddMondyReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HttpAddMondyReq_descriptor_,
      HttpAddMondyReq::default_instance_,
      HttpAddMondyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpAddMondyReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpAddMondyReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HttpAddMondyReq));
  HttpAddMondyResp_descriptor_ = file->message_type(1);
  static const int HttpAddMondyResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpAddMondyResp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpAddMondyResp, req_),
  };
  HttpAddMondyResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HttpAddMondyResp_descriptor_,
      HttpAddMondyResp::default_instance_,
      HttpAddMondyResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpAddMondyResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpAddMondyResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HttpAddMondyResp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_httpcb_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HttpAddMondyReq_descriptor_, &HttpAddMondyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HttpAddMondyResp_descriptor_, &HttpAddMondyResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_httpcb_2eproto() {
  delete HttpAddMondyReq::default_instance_;
  delete HttpAddMondyReq_reflection_;
  delete HttpAddMondyResp::default_instance_;
  delete HttpAddMondyResp_reflection_;
}

void protobuf_AddDesc_httpcb_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014httpcb.proto\"\304\001\n\017HttpAddMondyReq\022\n\n\002fd"
    "\030\001 \002(\005\022\017\n\007session\030\002 \002(\003\022\017\n\007orderno\030\003 \002(\t"
    "\022\r\n\005money\030\004 \002(\005\022\013\n\003sid\030\005 \001(\t\022\017\n\007extinfo\030"
    "\006 \001(\t\022\017\n\007selfdef\030\007 \001(\005\022\021\n\tgamemoney\030\010 \001("
    "\005\022\021\n\tbasemoney\030\t \001(\005\022\021\n\tmonthcard\030\n \001(\005\022"
    "\014\n\004fake\030\013 \001(\005\"A\n\020HttpAddMondyResp\022\016\n\006res"
    "ult\030\001 \002(\005\022\035\n\003req\030\002 \002(\0132\020.HttpAddMondyReq", 280);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "httpcb.proto", &protobuf_RegisterTypes);
  HttpAddMondyReq::default_instance_ = new HttpAddMondyReq();
  HttpAddMondyResp::default_instance_ = new HttpAddMondyResp();
  HttpAddMondyReq::default_instance_->InitAsDefaultInstance();
  HttpAddMondyResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_httpcb_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_httpcb_2eproto {
  StaticDescriptorInitializer_httpcb_2eproto() {
    protobuf_AddDesc_httpcb_2eproto();
  }
} static_descriptor_initializer_httpcb_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int HttpAddMondyReq::kFdFieldNumber;
const int HttpAddMondyReq::kSessionFieldNumber;
const int HttpAddMondyReq::kOrdernoFieldNumber;
const int HttpAddMondyReq::kMoneyFieldNumber;
const int HttpAddMondyReq::kSidFieldNumber;
const int HttpAddMondyReq::kExtinfoFieldNumber;
const int HttpAddMondyReq::kSelfdefFieldNumber;
const int HttpAddMondyReq::kGamemoneyFieldNumber;
const int HttpAddMondyReq::kBasemoneyFieldNumber;
const int HttpAddMondyReq::kMonthcardFieldNumber;
const int HttpAddMondyReq::kFakeFieldNumber;
#endif  // !_MSC_VER

HttpAddMondyReq::HttpAddMondyReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HttpAddMondyReq::InitAsDefaultInstance() {
}

HttpAddMondyReq::HttpAddMondyReq(const HttpAddMondyReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HttpAddMondyReq::SharedCtor() {
  _cached_size_ = 0;
  fd_ = 0;
  session_ = GOOGLE_LONGLONG(0);
  orderno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  money_ = 0;
  sid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  extinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  selfdef_ = 0;
  gamemoney_ = 0;
  basemoney_ = 0;
  monthcard_ = 0;
  fake_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HttpAddMondyReq::~HttpAddMondyReq() {
  SharedDtor();
}

void HttpAddMondyReq::SharedDtor() {
  if (orderno_ != &::google::protobuf::internal::kEmptyString) {
    delete orderno_;
  }
  if (sid_ != &::google::protobuf::internal::kEmptyString) {
    delete sid_;
  }
  if (extinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete extinfo_;
  }
  if (this != default_instance_) {
  }
}

void HttpAddMondyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HttpAddMondyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HttpAddMondyReq_descriptor_;
}

const HttpAddMondyReq& HttpAddMondyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_httpcb_2eproto();
  return *default_instance_;
}

HttpAddMondyReq* HttpAddMondyReq::default_instance_ = NULL;

HttpAddMondyReq* HttpAddMondyReq::New() const {
  return new HttpAddMondyReq;
}

void HttpAddMondyReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fd_ = 0;
    session_ = GOOGLE_LONGLONG(0);
    if (has_orderno()) {
      if (orderno_ != &::google::protobuf::internal::kEmptyString) {
        orderno_->clear();
      }
    }
    money_ = 0;
    if (has_sid()) {
      if (sid_ != &::google::protobuf::internal::kEmptyString) {
        sid_->clear();
      }
    }
    if (has_extinfo()) {
      if (extinfo_ != &::google::protobuf::internal::kEmptyString) {
        extinfo_->clear();
      }
    }
    selfdef_ = 0;
    gamemoney_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    basemoney_ = 0;
    monthcard_ = 0;
    fake_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HttpAddMondyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 fd = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fd_)));
          set_has_fd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_session;
        break;
      }

      // required int64 session = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_session:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &session_)));
          set_has_session();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_orderno;
        break;
      }

      // required string orderno = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_orderno:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orderno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->orderno().data(), this->orderno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_money;
        break;
      }

      // required int32 money = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_sid;
        break;
      }

      // optional string sid = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sid().data(), this->sid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_extinfo;
        break;
      }

      // optional string extinfo = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_extinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->extinfo().data(), this->extinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_selfdef;
        break;
      }

      // optional int32 selfdef = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_selfdef:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &selfdef_)));
          set_has_selfdef();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_gamemoney;
        break;
      }

      // optional int32 gamemoney = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gamemoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gamemoney_)));
          set_has_gamemoney();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_basemoney;
        break;
      }

      // optional int32 basemoney = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_basemoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &basemoney_)));
          set_has_basemoney();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_monthcard;
        break;
      }

      // optional int32 monthcard = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_monthcard:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &monthcard_)));
          set_has_monthcard();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_fake;
        break;
      }

      // optional int32 fake = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fake:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fake_)));
          set_has_fake();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HttpAddMondyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 fd = 1;
  if (has_fd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fd(), output);
  }

  // required int64 session = 2;
  if (has_session()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->session(), output);
  }

  // required string orderno = 3;
  if (has_orderno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->orderno().data(), this->orderno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->orderno(), output);
  }

  // required int32 money = 4;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->money(), output);
  }

  // optional string sid = 5;
  if (has_sid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sid().data(), this->sid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->sid(), output);
  }

  // optional string extinfo = 6;
  if (has_extinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->extinfo().data(), this->extinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->extinfo(), output);
  }

  // optional int32 selfdef = 7;
  if (has_selfdef()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->selfdef(), output);
  }

  // optional int32 gamemoney = 8;
  if (has_gamemoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->gamemoney(), output);
  }

  // optional int32 basemoney = 9;
  if (has_basemoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->basemoney(), output);
  }

  // optional int32 monthcard = 10;
  if (has_monthcard()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->monthcard(), output);
  }

  // optional int32 fake = 11;
  if (has_fake()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->fake(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HttpAddMondyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 fd = 1;
  if (has_fd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fd(), target);
  }

  // required int64 session = 2;
  if (has_session()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->session(), target);
  }

  // required string orderno = 3;
  if (has_orderno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->orderno().data(), this->orderno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->orderno(), target);
  }

  // required int32 money = 4;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->money(), target);
  }

  // optional string sid = 5;
  if (has_sid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sid().data(), this->sid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sid(), target);
  }

  // optional string extinfo = 6;
  if (has_extinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->extinfo().data(), this->extinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->extinfo(), target);
  }

  // optional int32 selfdef = 7;
  if (has_selfdef()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->selfdef(), target);
  }

  // optional int32 gamemoney = 8;
  if (has_gamemoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->gamemoney(), target);
  }

  // optional int32 basemoney = 9;
  if (has_basemoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->basemoney(), target);
  }

  // optional int32 monthcard = 10;
  if (has_monthcard()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->monthcard(), target);
  }

  // optional int32 fake = 11;
  if (has_fake()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->fake(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HttpAddMondyReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 fd = 1;
    if (has_fd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fd());
    }

    // required int64 session = 2;
    if (has_session()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->session());
    }

    // required string orderno = 3;
    if (has_orderno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orderno());
    }

    // required int32 money = 4;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

    // optional string sid = 5;
    if (has_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sid());
    }

    // optional string extinfo = 6;
    if (has_extinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extinfo());
    }

    // optional int32 selfdef = 7;
    if (has_selfdef()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->selfdef());
    }

    // optional int32 gamemoney = 8;
    if (has_gamemoney()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gamemoney());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 basemoney = 9;
    if (has_basemoney()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->basemoney());
    }

    // optional int32 monthcard = 10;
    if (has_monthcard()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->monthcard());
    }

    // optional int32 fake = 11;
    if (has_fake()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fake());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HttpAddMondyReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HttpAddMondyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HttpAddMondyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HttpAddMondyReq::MergeFrom(const HttpAddMondyReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fd()) {
      set_fd(from.fd());
    }
    if (from.has_session()) {
      set_session(from.session());
    }
    if (from.has_orderno()) {
      set_orderno(from.orderno());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_sid()) {
      set_sid(from.sid());
    }
    if (from.has_extinfo()) {
      set_extinfo(from.extinfo());
    }
    if (from.has_selfdef()) {
      set_selfdef(from.selfdef());
    }
    if (from.has_gamemoney()) {
      set_gamemoney(from.gamemoney());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_basemoney()) {
      set_basemoney(from.basemoney());
    }
    if (from.has_monthcard()) {
      set_monthcard(from.monthcard());
    }
    if (from.has_fake()) {
      set_fake(from.fake());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HttpAddMondyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpAddMondyReq::CopyFrom(const HttpAddMondyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpAddMondyReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void HttpAddMondyReq::Swap(HttpAddMondyReq* other) {
  if (other != this) {
    std::swap(fd_, other->fd_);
    std::swap(session_, other->session_);
    std::swap(orderno_, other->orderno_);
    std::swap(money_, other->money_);
    std::swap(sid_, other->sid_);
    std::swap(extinfo_, other->extinfo_);
    std::swap(selfdef_, other->selfdef_);
    std::swap(gamemoney_, other->gamemoney_);
    std::swap(basemoney_, other->basemoney_);
    std::swap(monthcard_, other->monthcard_);
    std::swap(fake_, other->fake_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HttpAddMondyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HttpAddMondyReq_descriptor_;
  metadata.reflection = HttpAddMondyReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HttpAddMondyResp::kResultFieldNumber;
const int HttpAddMondyResp::kReqFieldNumber;
#endif  // !_MSC_VER

HttpAddMondyResp::HttpAddMondyResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HttpAddMondyResp::InitAsDefaultInstance() {
  req_ = const_cast< ::HttpAddMondyReq*>(&::HttpAddMondyReq::default_instance());
}

HttpAddMondyResp::HttpAddMondyResp(const HttpAddMondyResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HttpAddMondyResp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  req_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HttpAddMondyResp::~HttpAddMondyResp() {
  SharedDtor();
}

void HttpAddMondyResp::SharedDtor() {
  if (this != default_instance_) {
    delete req_;
  }
}

void HttpAddMondyResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HttpAddMondyResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HttpAddMondyResp_descriptor_;
}

const HttpAddMondyResp& HttpAddMondyResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_httpcb_2eproto();
  return *default_instance_;
}

HttpAddMondyResp* HttpAddMondyResp::default_instance_ = NULL;

HttpAddMondyResp* HttpAddMondyResp::New() const {
  return new HttpAddMondyResp;
}

void HttpAddMondyResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    if (has_req()) {
      if (req_ != NULL) req_->::HttpAddMondyReq::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HttpAddMondyResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_req;
        break;
      }

      // required .HttpAddMondyReq req = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HttpAddMondyResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // required .HttpAddMondyReq req = 2;
  if (has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->req(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HttpAddMondyResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // required .HttpAddMondyReq req = 2;
  if (has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->req(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HttpAddMondyResp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // required .HttpAddMondyReq req = 2;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->req());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HttpAddMondyResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HttpAddMondyResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HttpAddMondyResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HttpAddMondyResp::MergeFrom(const HttpAddMondyResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_req()) {
      mutable_req()->::HttpAddMondyReq::MergeFrom(from.req());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HttpAddMondyResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpAddMondyResp::CopyFrom(const HttpAddMondyResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpAddMondyResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_req()) {
    if (!this->req().IsInitialized()) return false;
  }
  return true;
}

void HttpAddMondyResp::Swap(HttpAddMondyResp* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(req_, other->req_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HttpAddMondyResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HttpAddMondyResp_descriptor_;
  metadata.reflection = HttpAddMondyResp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
