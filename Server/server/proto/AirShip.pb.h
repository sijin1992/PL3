// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AirShip.proto

#ifndef PROTOBUF_AirShip_2eproto__INCLUDED
#define PROTOBUF_AirShip_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_AirShip_2eproto();
void protobuf_AssignDesc_AirShip_2eproto();
void protobuf_ShutdownFile_AirShip_2eproto();

class AirShip;
class ShipList;

// ===================================================================

class AirShip : public ::google::protobuf::Message {
 public:
  AirShip();
  virtual ~AirShip();

  AirShip(const AirShip& from);

  inline AirShip& operator=(const AirShip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AirShip& default_instance();

  void Swap(AirShip* other);

  // implements Message ----------------------------------------------

  AirShip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AirShip& from);
  void MergeFrom(const AirShip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::int32 guid() const;
  inline void set_guid(::google::protobuf::int32 value);

  // required int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 kind = 5;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 5;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // required int32 quality = 6;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 6;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // required int32 star = 7;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 7;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // required int32 level = 8;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 8;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 skill = 9;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 9;
  inline ::google::protobuf::int32 skill() const;
  inline void set_skill(::google::protobuf::int32 value);

  // repeated int32 weapon_list = 10;
  inline int weapon_list_size() const;
  inline void clear_weapon_list();
  static const int kWeaponListFieldNumber = 10;
  inline ::google::protobuf::int32 weapon_list(int index) const;
  inline void set_weapon_list(int index, ::google::protobuf::int32 value);
  inline void add_weapon_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      weapon_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_weapon_list();

  // repeated int32 attr = 11;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 11;
  inline ::google::protobuf::int32 attr(int index) const;
  inline void set_attr(int index, ::google::protobuf::int32 value);
  inline void add_attr(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      attr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_attr();

  // required int32 load = 12;
  inline bool has_load() const;
  inline void clear_load();
  static const int kLoadFieldNumber = 12;
  inline ::google::protobuf::int32 load() const;
  inline void set_load(::google::protobuf::int32 value);

  // required int32 durable = 13;
  inline bool has_durable() const;
  inline void clear_durable();
  static const int kDurableFieldNumber = 13;
  inline ::google::protobuf::int32 durable() const;
  inline void set_durable(::google::protobuf::int32 value);

  // optional int32 position = 14;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 14;
  inline ::google::protobuf::int32 position() const;
  inline void set_position(::google::protobuf::int32 value);

  // repeated int32 equip_list = 15;
  inline int equip_list_size() const;
  inline void clear_equip_list();
  static const int kEquipListFieldNumber = 15;
  inline ::google::protobuf::int32 equip_list(int index) const;
  inline void set_equip_list(int index, ::google::protobuf::int32 value);
  inline void add_equip_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      equip_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_equip_list();

  // optional int32 exp = 16;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 16;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // repeated int32 body_position = 17;
  inline int body_position_size() const;
  inline void clear_body_position();
  static const int kBodyPositionFieldNumber = 17;
  inline ::google::protobuf::int32 body_position(int index) const;
  inline void set_body_position(int index, ::google::protobuf::int32 value);
  inline void add_body_position(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      body_position() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_body_position();

  // optional int32 ship_break = 18;
  inline bool has_ship_break() const;
  inline void clear_ship_break();
  static const int kShipBreakFieldNumber = 18;
  inline ::google::protobuf::int32 ship_break() const;
  inline void set_ship_break(::google::protobuf::int32 value);

  // optional int64 start_fix_time = 19;
  inline bool has_start_fix_time() const;
  inline void clear_start_fix_time();
  static const int kStartFixTimeFieldNumber = 19;
  inline ::google::protobuf::int64 start_fix_time() const;
  inline void set_start_fix_time(::google::protobuf::int64 value);

  // repeated int32 gem_list = 20;
  inline int gem_list_size() const;
  inline void clear_gem_list();
  static const int kGemListFieldNumber = 20;
  inline ::google::protobuf::int32 gem_list(int index) const;
  inline void set_gem_list(int index, ::google::protobuf::int32 value);
  inline void add_gem_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gem_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gem_list();

  // optional int32 energy_exp = 21;
  inline bool has_energy_exp() const;
  inline void clear_energy_exp();
  static const int kEnergyExpFieldNumber = 21;
  inline ::google::protobuf::int32 energy_exp() const;
  inline void set_energy_exp(::google::protobuf::int32 value);

  // optional int32 energy_level = 22;
  inline bool has_energy_level() const;
  inline void clear_energy_level();
  static const int kEnergyLevelFieldNumber = 22;
  inline ::google::protobuf::int32 energy_level() const;
  inline void set_energy_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AirShip)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_load();
  inline void clear_has_load();
  inline void set_has_durable();
  inline void clear_has_durable();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_ship_break();
  inline void clear_has_ship_break();
  inline void set_has_start_fix_time();
  inline void clear_has_start_fix_time();
  inline void set_has_energy_exp();
  inline void clear_has_energy_exp();
  inline void set_has_energy_level();
  inline void clear_has_energy_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 kind_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > weapon_list_;
  ::google::protobuf::int32 skill_;
  ::google::protobuf::int32 load_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > attr_;
  ::google::protobuf::int32 durable_;
  ::google::protobuf::int32 position_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > equip_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > body_position_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 ship_break_;
  ::google::protobuf::int64 start_fix_time_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gem_list_;
  ::google::protobuf::int32 energy_exp_;
  ::google::protobuf::int32 energy_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(22 + 31) / 32];

  friend void  protobuf_AddDesc_AirShip_2eproto();
  friend void protobuf_AssignDesc_AirShip_2eproto();
  friend void protobuf_ShutdownFile_AirShip_2eproto();

  void InitAsDefaultInstance();
  static AirShip* default_instance_;
};
// -------------------------------------------------------------------

class ShipList : public ::google::protobuf::Message {
 public:
  ShipList();
  virtual ~ShipList();

  ShipList(const ShipList& from);

  inline ShipList& operator=(const ShipList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShipList& default_instance();

  void Swap(ShipList* other);

  // implements Message ----------------------------------------------

  ShipList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShipList& from);
  void MergeFrom(const ShipList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AirShip ship_list = 1;
  inline int ship_list_size() const;
  inline void clear_ship_list();
  static const int kShipListFieldNumber = 1;
  inline const ::AirShip& ship_list(int index) const;
  inline ::AirShip* mutable_ship_list(int index);
  inline ::AirShip* add_ship_list();
  inline const ::google::protobuf::RepeatedPtrField< ::AirShip >&
      ship_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::AirShip >*
      mutable_ship_list();

  // @@protoc_insertion_point(class_scope:ShipList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::AirShip > ship_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_AirShip_2eproto();
  friend void protobuf_AssignDesc_AirShip_2eproto();
  friend void protobuf_ShutdownFile_AirShip_2eproto();

  void InitAsDefaultInstance();
  static ShipList* default_instance_;
};
// ===================================================================


// ===================================================================

// AirShip

// required int32 guid = 1;
inline bool AirShip::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AirShip::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AirShip::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AirShip::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 AirShip::guid() const {
  return guid_;
}
inline void AirShip::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
}

// required int32 id = 2;
inline bool AirShip::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AirShip::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AirShip::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AirShip::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 AirShip::id() const {
  return id_;
}
inline void AirShip::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 status = 3;
inline bool AirShip::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AirShip::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AirShip::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AirShip::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 AirShip::status() const {
  return status_;
}
inline void AirShip::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// required int32 type = 4;
inline bool AirShip::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AirShip::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AirShip::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AirShip::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 AirShip::type() const {
  return type_;
}
inline void AirShip::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 kind = 5;
inline bool AirShip::has_kind() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AirShip::set_has_kind() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AirShip::clear_has_kind() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AirShip::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 AirShip::kind() const {
  return kind_;
}
inline void AirShip::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// required int32 quality = 6;
inline bool AirShip::has_quality() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AirShip::set_has_quality() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AirShip::clear_has_quality() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AirShip::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 AirShip::quality() const {
  return quality_;
}
inline void AirShip::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// required int32 star = 7;
inline bool AirShip::has_star() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AirShip::set_has_star() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AirShip::clear_has_star() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AirShip::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 AirShip::star() const {
  return star_;
}
inline void AirShip::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// required int32 level = 8;
inline bool AirShip::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AirShip::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AirShip::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AirShip::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 AirShip::level() const {
  return level_;
}
inline void AirShip::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int32 skill = 9;
inline bool AirShip::has_skill() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AirShip::set_has_skill() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AirShip::clear_has_skill() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AirShip::clear_skill() {
  skill_ = 0;
  clear_has_skill();
}
inline ::google::protobuf::int32 AirShip::skill() const {
  return skill_;
}
inline void AirShip::set_skill(::google::protobuf::int32 value) {
  set_has_skill();
  skill_ = value;
}

// repeated int32 weapon_list = 10;
inline int AirShip::weapon_list_size() const {
  return weapon_list_.size();
}
inline void AirShip::clear_weapon_list() {
  weapon_list_.Clear();
}
inline ::google::protobuf::int32 AirShip::weapon_list(int index) const {
  return weapon_list_.Get(index);
}
inline void AirShip::set_weapon_list(int index, ::google::protobuf::int32 value) {
  weapon_list_.Set(index, value);
}
inline void AirShip::add_weapon_list(::google::protobuf::int32 value) {
  weapon_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AirShip::weapon_list() const {
  return weapon_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AirShip::mutable_weapon_list() {
  return &weapon_list_;
}

// repeated int32 attr = 11;
inline int AirShip::attr_size() const {
  return attr_.size();
}
inline void AirShip::clear_attr() {
  attr_.Clear();
}
inline ::google::protobuf::int32 AirShip::attr(int index) const {
  return attr_.Get(index);
}
inline void AirShip::set_attr(int index, ::google::protobuf::int32 value) {
  attr_.Set(index, value);
}
inline void AirShip::add_attr(::google::protobuf::int32 value) {
  attr_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AirShip::attr() const {
  return attr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AirShip::mutable_attr() {
  return &attr_;
}

// required int32 load = 12;
inline bool AirShip::has_load() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AirShip::set_has_load() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AirShip::clear_has_load() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AirShip::clear_load() {
  load_ = 0;
  clear_has_load();
}
inline ::google::protobuf::int32 AirShip::load() const {
  return load_;
}
inline void AirShip::set_load(::google::protobuf::int32 value) {
  set_has_load();
  load_ = value;
}

// required int32 durable = 13;
inline bool AirShip::has_durable() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AirShip::set_has_durable() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AirShip::clear_has_durable() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AirShip::clear_durable() {
  durable_ = 0;
  clear_has_durable();
}
inline ::google::protobuf::int32 AirShip::durable() const {
  return durable_;
}
inline void AirShip::set_durable(::google::protobuf::int32 value) {
  set_has_durable();
  durable_ = value;
}

// optional int32 position = 14;
inline bool AirShip::has_position() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AirShip::set_has_position() {
  _has_bits_[0] |= 0x00002000u;
}
inline void AirShip::clear_has_position() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void AirShip::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 AirShip::position() const {
  return position_;
}
inline void AirShip::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
}

// repeated int32 equip_list = 15;
inline int AirShip::equip_list_size() const {
  return equip_list_.size();
}
inline void AirShip::clear_equip_list() {
  equip_list_.Clear();
}
inline ::google::protobuf::int32 AirShip::equip_list(int index) const {
  return equip_list_.Get(index);
}
inline void AirShip::set_equip_list(int index, ::google::protobuf::int32 value) {
  equip_list_.Set(index, value);
}
inline void AirShip::add_equip_list(::google::protobuf::int32 value) {
  equip_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AirShip::equip_list() const {
  return equip_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AirShip::mutable_equip_list() {
  return &equip_list_;
}

// optional int32 exp = 16;
inline bool AirShip::has_exp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void AirShip::set_has_exp() {
  _has_bits_[0] |= 0x00008000u;
}
inline void AirShip::clear_has_exp() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void AirShip::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 AirShip::exp() const {
  return exp_;
}
inline void AirShip::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// repeated int32 body_position = 17;
inline int AirShip::body_position_size() const {
  return body_position_.size();
}
inline void AirShip::clear_body_position() {
  body_position_.Clear();
}
inline ::google::protobuf::int32 AirShip::body_position(int index) const {
  return body_position_.Get(index);
}
inline void AirShip::set_body_position(int index, ::google::protobuf::int32 value) {
  body_position_.Set(index, value);
}
inline void AirShip::add_body_position(::google::protobuf::int32 value) {
  body_position_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AirShip::body_position() const {
  return body_position_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AirShip::mutable_body_position() {
  return &body_position_;
}

// optional int32 ship_break = 18;
inline bool AirShip::has_ship_break() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void AirShip::set_has_ship_break() {
  _has_bits_[0] |= 0x00020000u;
}
inline void AirShip::clear_has_ship_break() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void AirShip::clear_ship_break() {
  ship_break_ = 0;
  clear_has_ship_break();
}
inline ::google::protobuf::int32 AirShip::ship_break() const {
  return ship_break_;
}
inline void AirShip::set_ship_break(::google::protobuf::int32 value) {
  set_has_ship_break();
  ship_break_ = value;
}

// optional int64 start_fix_time = 19;
inline bool AirShip::has_start_fix_time() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void AirShip::set_has_start_fix_time() {
  _has_bits_[0] |= 0x00040000u;
}
inline void AirShip::clear_has_start_fix_time() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void AirShip::clear_start_fix_time() {
  start_fix_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_fix_time();
}
inline ::google::protobuf::int64 AirShip::start_fix_time() const {
  return start_fix_time_;
}
inline void AirShip::set_start_fix_time(::google::protobuf::int64 value) {
  set_has_start_fix_time();
  start_fix_time_ = value;
}

// repeated int32 gem_list = 20;
inline int AirShip::gem_list_size() const {
  return gem_list_.size();
}
inline void AirShip::clear_gem_list() {
  gem_list_.Clear();
}
inline ::google::protobuf::int32 AirShip::gem_list(int index) const {
  return gem_list_.Get(index);
}
inline void AirShip::set_gem_list(int index, ::google::protobuf::int32 value) {
  gem_list_.Set(index, value);
}
inline void AirShip::add_gem_list(::google::protobuf::int32 value) {
  gem_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AirShip::gem_list() const {
  return gem_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AirShip::mutable_gem_list() {
  return &gem_list_;
}

// optional int32 energy_exp = 21;
inline bool AirShip::has_energy_exp() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void AirShip::set_has_energy_exp() {
  _has_bits_[0] |= 0x00100000u;
}
inline void AirShip::clear_has_energy_exp() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void AirShip::clear_energy_exp() {
  energy_exp_ = 0;
  clear_has_energy_exp();
}
inline ::google::protobuf::int32 AirShip::energy_exp() const {
  return energy_exp_;
}
inline void AirShip::set_energy_exp(::google::protobuf::int32 value) {
  set_has_energy_exp();
  energy_exp_ = value;
}

// optional int32 energy_level = 22;
inline bool AirShip::has_energy_level() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void AirShip::set_has_energy_level() {
  _has_bits_[0] |= 0x00200000u;
}
inline void AirShip::clear_has_energy_level() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void AirShip::clear_energy_level() {
  energy_level_ = 0;
  clear_has_energy_level();
}
inline ::google::protobuf::int32 AirShip::energy_level() const {
  return energy_level_;
}
inline void AirShip::set_energy_level(::google::protobuf::int32 value) {
  set_has_energy_level();
  energy_level_ = value;
}

// -------------------------------------------------------------------

// ShipList

// repeated .AirShip ship_list = 1;
inline int ShipList::ship_list_size() const {
  return ship_list_.size();
}
inline void ShipList::clear_ship_list() {
  ship_list_.Clear();
}
inline const ::AirShip& ShipList::ship_list(int index) const {
  return ship_list_.Get(index);
}
inline ::AirShip* ShipList::mutable_ship_list(int index) {
  return ship_list_.Mutable(index);
}
inline ::AirShip* ShipList::add_ship_list() {
  return ship_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AirShip >&
ShipList::ship_list() const {
  return ship_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::AirShip >*
ShipList::mutable_ship_list() {
  return &ship_list_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AirShip_2eproto__INCLUDED
