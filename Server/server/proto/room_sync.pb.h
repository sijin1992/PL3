// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: room_sync.proto

#ifndef PROTOBUF_room_5fsync_2eproto__INCLUDED
#define PROTOBUF_room_5fsync_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_room_5fsync_2eproto();
void protobuf_AssignDesc_room_5fsync_2eproto();
void protobuf_ShutdownFile_room_5fsync_2eproto();

class JoinRoomReq;
class JoinRoomResp;
class PlayerInRoomInfo;
class RoomSyncResp;
class PlayerMoveInRoomReq;

// ===================================================================

class JoinRoomReq : public ::google::protobuf::Message {
 public:
  JoinRoomReq();
  virtual ~JoinRoomReq();

  JoinRoomReq(const JoinRoomReq& from);

  inline JoinRoomReq& operator=(const JoinRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinRoomReq& default_instance();

  void Swap(JoinRoomReq* other);

  // implements Message ----------------------------------------------

  JoinRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinRoomReq& from);
  void MergeFrom(const JoinRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 room_id = 2;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:JoinRoomReq)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_room_5fsync_2eproto();
  friend void protobuf_AssignDesc_room_5fsync_2eproto();
  friend void protobuf_ShutdownFile_room_5fsync_2eproto();

  void InitAsDefaultInstance();
  static JoinRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class JoinRoomResp : public ::google::protobuf::Message {
 public:
  JoinRoomResp();
  virtual ~JoinRoomResp();

  JoinRoomResp(const JoinRoomResp& from);

  inline JoinRoomResp& operator=(const JoinRoomResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinRoomResp& default_instance();

  void Swap(JoinRoomResp* other);

  // implements Message ----------------------------------------------

  JoinRoomResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinRoomResp& from);
  void MergeFrom(const JoinRoomResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 nothing = 1;
  inline bool has_nothing() const;
  inline void clear_nothing();
  static const int kNothingFieldNumber = 1;
  inline ::google::protobuf::int32 nothing() const;
  inline void set_nothing(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:JoinRoomResp)
 private:
  inline void set_has_nothing();
  inline void clear_has_nothing();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nothing_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_room_5fsync_2eproto();
  friend void protobuf_AssignDesc_room_5fsync_2eproto();
  friend void protobuf_ShutdownFile_room_5fsync_2eproto();

  void InitAsDefaultInstance();
  static JoinRoomResp* default_instance_;
};
// -------------------------------------------------------------------

class PlayerInRoomInfo : public ::google::protobuf::Message {
 public:
  PlayerInRoomInfo();
  virtual ~PlayerInRoomInfo();

  PlayerInRoomInfo(const PlayerInRoomInfo& from);

  inline PlayerInRoomInfo& operator=(const PlayerInRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerInRoomInfo& default_instance();

  void Swap(PlayerInRoomInfo* other);

  // implements Message ----------------------------------------------

  PlayerInRoomInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerInRoomInfo& from);
  void MergeFrom(const PlayerInRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 posi_x = 2;
  inline bool has_posi_x() const;
  inline void clear_posi_x();
  static const int kPosiXFieldNumber = 2;
  inline ::google::protobuf::int32 posi_x() const;
  inline void set_posi_x(::google::protobuf::int32 value);

  // required int32 posi_y = 3;
  inline bool has_posi_y() const;
  inline void clear_posi_y();
  static const int kPosiYFieldNumber = 3;
  inline ::google::protobuf::int32 posi_y() const;
  inline void set_posi_y(::google::protobuf::int32 value);

  // required int32 avatar = 4;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 4;
  inline ::google::protobuf::int32 avatar() const;
  inline void set_avatar(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerInRoomInfo)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_posi_x();
  inline void clear_has_posi_x();
  inline void set_has_posi_y();
  inline void clear_has_posi_y();
  inline void set_has_avatar();
  inline void clear_has_avatar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 posi_x_;
  ::google::protobuf::int32 posi_y_;
  ::google::protobuf::int32 avatar_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_room_5fsync_2eproto();
  friend void protobuf_AssignDesc_room_5fsync_2eproto();
  friend void protobuf_ShutdownFile_room_5fsync_2eproto();

  void InitAsDefaultInstance();
  static PlayerInRoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class RoomSyncResp : public ::google::protobuf::Message {
 public:
  RoomSyncResp();
  virtual ~RoomSyncResp();

  RoomSyncResp(const RoomSyncResp& from);

  inline RoomSyncResp& operator=(const RoomSyncResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomSyncResp& default_instance();

  void Swap(RoomSyncResp* other);

  // implements Message ----------------------------------------------

  RoomSyncResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomSyncResp& from);
  void MergeFrom(const RoomSyncResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // repeated .PlayerInRoomInfo player_list = 2;
  inline int player_list_size() const;
  inline void clear_player_list();
  static const int kPlayerListFieldNumber = 2;
  inline const ::PlayerInRoomInfo& player_list(int index) const;
  inline ::PlayerInRoomInfo* mutable_player_list(int index);
  inline ::PlayerInRoomInfo* add_player_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PlayerInRoomInfo >&
      player_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PlayerInRoomInfo >*
      mutable_player_list();

  // @@protoc_insertion_point(class_scope:RoomSyncResp)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PlayerInRoomInfo > player_list_;
  ::google::protobuf::int32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_room_5fsync_2eproto();
  friend void protobuf_AssignDesc_room_5fsync_2eproto();
  friend void protobuf_ShutdownFile_room_5fsync_2eproto();

  void InitAsDefaultInstance();
  static RoomSyncResp* default_instance_;
};
// -------------------------------------------------------------------

class PlayerMoveInRoomReq : public ::google::protobuf::Message {
 public:
  PlayerMoveInRoomReq();
  virtual ~PlayerMoveInRoomReq();

  PlayerMoveInRoomReq(const PlayerMoveInRoomReq& from);

  inline PlayerMoveInRoomReq& operator=(const PlayerMoveInRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerMoveInRoomReq& default_instance();

  void Swap(PlayerMoveInRoomReq* other);

  // implements Message ----------------------------------------------

  PlayerMoveInRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerMoveInRoomReq& from);
  void MergeFrom(const PlayerMoveInRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 posi_x = 1;
  inline bool has_posi_x() const;
  inline void clear_posi_x();
  static const int kPosiXFieldNumber = 1;
  inline ::google::protobuf::int32 posi_x() const;
  inline void set_posi_x(::google::protobuf::int32 value);

  // required int32 posi_y = 2;
  inline bool has_posi_y() const;
  inline void clear_posi_y();
  static const int kPosiYFieldNumber = 2;
  inline ::google::protobuf::int32 posi_y() const;
  inline void set_posi_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerMoveInRoomReq)
 private:
  inline void set_has_posi_x();
  inline void clear_has_posi_x();
  inline void set_has_posi_y();
  inline void clear_has_posi_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 posi_x_;
  ::google::protobuf::int32 posi_y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_room_5fsync_2eproto();
  friend void protobuf_AssignDesc_room_5fsync_2eproto();
  friend void protobuf_ShutdownFile_room_5fsync_2eproto();

  void InitAsDefaultInstance();
  static PlayerMoveInRoomReq* default_instance_;
};
// ===================================================================


// ===================================================================

// JoinRoomReq

// required bytes name = 1;
inline bool JoinRoomReq::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinRoomReq::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinRoomReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinRoomReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& JoinRoomReq::name() const {
  return *name_;
}
inline void JoinRoomReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void JoinRoomReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void JoinRoomReq::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* JoinRoomReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* JoinRoomReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void JoinRoomReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 room_id = 2;
inline bool JoinRoomReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinRoomReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinRoomReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinRoomReq::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 JoinRoomReq::room_id() const {
  return room_id_;
}
inline void JoinRoomReq::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// -------------------------------------------------------------------

// JoinRoomResp

// optional int32 nothing = 1;
inline bool JoinRoomResp::has_nothing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinRoomResp::set_has_nothing() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinRoomResp::clear_has_nothing() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinRoomResp::clear_nothing() {
  nothing_ = 0;
  clear_has_nothing();
}
inline ::google::protobuf::int32 JoinRoomResp::nothing() const {
  return nothing_;
}
inline void JoinRoomResp::set_nothing(::google::protobuf::int32 value) {
  set_has_nothing();
  nothing_ = value;
}

// -------------------------------------------------------------------

// PlayerInRoomInfo

// required bytes name = 1;
inline bool PlayerInRoomInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerInRoomInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerInRoomInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerInRoomInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PlayerInRoomInfo::name() const {
  return *name_;
}
inline void PlayerInRoomInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PlayerInRoomInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PlayerInRoomInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerInRoomInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PlayerInRoomInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PlayerInRoomInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 posi_x = 2;
inline bool PlayerInRoomInfo::has_posi_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerInRoomInfo::set_has_posi_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerInRoomInfo::clear_has_posi_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerInRoomInfo::clear_posi_x() {
  posi_x_ = 0;
  clear_has_posi_x();
}
inline ::google::protobuf::int32 PlayerInRoomInfo::posi_x() const {
  return posi_x_;
}
inline void PlayerInRoomInfo::set_posi_x(::google::protobuf::int32 value) {
  set_has_posi_x();
  posi_x_ = value;
}

// required int32 posi_y = 3;
inline bool PlayerInRoomInfo::has_posi_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerInRoomInfo::set_has_posi_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerInRoomInfo::clear_has_posi_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerInRoomInfo::clear_posi_y() {
  posi_y_ = 0;
  clear_has_posi_y();
}
inline ::google::protobuf::int32 PlayerInRoomInfo::posi_y() const {
  return posi_y_;
}
inline void PlayerInRoomInfo::set_posi_y(::google::protobuf::int32 value) {
  set_has_posi_y();
  posi_y_ = value;
}

// required int32 avatar = 4;
inline bool PlayerInRoomInfo::has_avatar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerInRoomInfo::set_has_avatar() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerInRoomInfo::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerInRoomInfo::clear_avatar() {
  avatar_ = 0;
  clear_has_avatar();
}
inline ::google::protobuf::int32 PlayerInRoomInfo::avatar() const {
  return avatar_;
}
inline void PlayerInRoomInfo::set_avatar(::google::protobuf::int32 value) {
  set_has_avatar();
  avatar_ = value;
}

// -------------------------------------------------------------------

// RoomSyncResp

// required int32 room_id = 1;
inline bool RoomSyncResp::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomSyncResp::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomSyncResp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomSyncResp::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 RoomSyncResp::room_id() const {
  return room_id_;
}
inline void RoomSyncResp::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// repeated .PlayerInRoomInfo player_list = 2;
inline int RoomSyncResp::player_list_size() const {
  return player_list_.size();
}
inline void RoomSyncResp::clear_player_list() {
  player_list_.Clear();
}
inline const ::PlayerInRoomInfo& RoomSyncResp::player_list(int index) const {
  return player_list_.Get(index);
}
inline ::PlayerInRoomInfo* RoomSyncResp::mutable_player_list(int index) {
  return player_list_.Mutable(index);
}
inline ::PlayerInRoomInfo* RoomSyncResp::add_player_list() {
  return player_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerInRoomInfo >&
RoomSyncResp::player_list() const {
  return player_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerInRoomInfo >*
RoomSyncResp::mutable_player_list() {
  return &player_list_;
}

// -------------------------------------------------------------------

// PlayerMoveInRoomReq

// required int32 posi_x = 1;
inline bool PlayerMoveInRoomReq::has_posi_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerMoveInRoomReq::set_has_posi_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerMoveInRoomReq::clear_has_posi_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerMoveInRoomReq::clear_posi_x() {
  posi_x_ = 0;
  clear_has_posi_x();
}
inline ::google::protobuf::int32 PlayerMoveInRoomReq::posi_x() const {
  return posi_x_;
}
inline void PlayerMoveInRoomReq::set_posi_x(::google::protobuf::int32 value) {
  set_has_posi_x();
  posi_x_ = value;
}

// required int32 posi_y = 2;
inline bool PlayerMoveInRoomReq::has_posi_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerMoveInRoomReq::set_has_posi_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerMoveInRoomReq::clear_has_posi_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerMoveInRoomReq::clear_posi_y() {
  posi_y_ = 0;
  clear_has_posi_y();
}
inline ::google::protobuf::int32 PlayerMoveInRoomReq::posi_y() const {
  return posi_y_;
}
inline void PlayerMoveInRoomReq::set_posi_y(::google::protobuf::int32 value) {
  set_has_posi_y();
  posi_y_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_room_5fsync_2eproto__INCLUDED
