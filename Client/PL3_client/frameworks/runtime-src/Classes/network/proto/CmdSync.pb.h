// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CmdSync.proto

#ifndef PROTOBUF_CmdSync_2eproto__INCLUDED
#define PROTOBUF_CmdSync_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "UserSync.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CmdSync_2eproto();
void protobuf_AssignDesc_CmdSync_2eproto();
void protobuf_ShutdownFile_CmdSync_2eproto();

class UserSyncResp;

// ===================================================================

class UserSyncResp : public ::google::protobuf::MessageLite {
 public:
  UserSyncResp();
  virtual ~UserSyncResp();

  UserSyncResp(const UserSyncResp& from);

  inline UserSyncResp& operator=(const UserSyncResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const UserSyncResp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const UserSyncResp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(UserSyncResp* other);

  // implements Message ----------------------------------------------

  UserSyncResp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UserSyncResp& from);
  void MergeFrom(const UserSyncResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .UserSync user_sync = 2;
  inline bool has_user_sync() const;
  inline void clear_user_sync();
  static const int kUserSyncFieldNumber = 2;
  inline const ::UserSync& user_sync() const;
  inline ::UserSync* mutable_user_sync();
  inline ::UserSync* release_user_sync();
  inline void set_allocated_user_sync(::UserSync* user_sync);

  // @@protoc_insertion_point(class_scope:UserSyncResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_sync();
  inline void clear_has_user_sync();

  ::UserSync* user_sync_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_CmdSync_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_CmdSync_2eproto();
  #endif
  friend void protobuf_AssignDesc_CmdSync_2eproto();
  friend void protobuf_ShutdownFile_CmdSync_2eproto();

  void InitAsDefaultInstance();
  static UserSyncResp* default_instance_;
};
// ===================================================================


// ===================================================================

// UserSyncResp

// required int32 result = 1;
inline bool UserSyncResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSyncResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSyncResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSyncResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 UserSyncResp::result() const {
  return result_;
}
inline void UserSyncResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .UserSync user_sync = 2;
inline bool UserSyncResp::has_user_sync() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSyncResp::set_has_user_sync() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSyncResp::clear_has_user_sync() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserSyncResp::clear_user_sync() {
  if (user_sync_ != NULL) user_sync_->::UserSync::Clear();
  clear_has_user_sync();
}
inline const ::UserSync& UserSyncResp::user_sync() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return user_sync_ != NULL ? *user_sync_ : *default_instance().user_sync_;
#else
  return user_sync_ != NULL ? *user_sync_ : *default_instance_->user_sync_;
#endif
}
inline ::UserSync* UserSyncResp::mutable_user_sync() {
  set_has_user_sync();
  if (user_sync_ == NULL) user_sync_ = new ::UserSync;
  return user_sync_;
}
inline ::UserSync* UserSyncResp::release_user_sync() {
  clear_has_user_sync();
  ::UserSync* temp = user_sync_;
  user_sync_ = NULL;
  return temp;
}
inline void UserSyncResp::set_allocated_user_sync(::UserSync* user_sync) {
  delete user_sync_;
  user_sync_ = user_sync;
  if (user_sync) {
    set_has_user_sync();
  } else {
    clear_has_user_sync();
  }
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CmdSync_2eproto__INCLUDED
