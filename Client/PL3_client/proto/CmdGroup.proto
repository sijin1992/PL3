import "Group.proto";
import "UserInfo.proto";
import "Item.proto";
import "AirShip.proto";
import "PvpInfo.proto";
import "UserSync.proto";
import "OtherInfo.proto";
import "Planet.proto";

message CreateGroupReq
{
	optional string nickname = 1;
	optional int32 icon_id = 2;
}


message CreateGroupResp
{
	required int32 result = 1;				// 0,正常,1,昵称不可用
	optional UserSync user_sync = 2;
}


message GetGroupReq
{
	required string groupid = 1;	//有值代表传other_group_info
}


message GetGroupResp
{
	required int32 result = 1;
	optional UserSync user_sync = 2; 		// 玩家自己的帮派信息
	optional OtherGroupInfo other_group_info = 3;
}



// 主动下发的group更新消息
message GroupUpdate
{
	optional GroupMainData group_main = 1;
	optional string user_name = 2; //谁的操作导致这个更新。可以用来忽略自己引起的更新。因为自己会在resp中收到
	message UserUpdate
	{
		optional string user_name = 1;
		optional UserSync user_sync = 2;
		optional PlanetUser planet_user = 3;
	};
	repeated UserUpdate user_update_list = 3;
};



//设置自动接受加入条件
message GroupJoinConditionReq 
{
	required bool needAllow = 1;
	optional int32 level = 2;
	optional int32 power = 3;
};


message GroupJoinConditionResp
{
	required int32 result = 1;
	optional UserSync user_sync = 2;
}


// 加入
message GroupJoinReq
{
	required string groupid = 1;
	required int32 type = 2;          //1:加入 2:撤销
};



message GroupJoinResp
{
	enum GroupJoinRet
	{
		OK = 0;
		FAIL = -1;
		HAS_GROUP = 999;
		NO_NUMS = 998;
		NO_TIME = 997;
		ERROR_TYPE = 995;
		DATA_ERROR = 1000;
		SAME_USER = 1;
		STATUS_ERROR = 2;
		NO_USER = 3;
		NO_POWER = 4;
		USER_COUNT_MAX = 5;
		NO_CONDITION = 6;
	};
	required GroupJoinRet result = 1;
	optional UserSync user_sync = 2;
};



// 批准
message GroupAllowReq
{
	required string username = 1;
	required int32 type = 2;        // 0,通过,1,拒绝
};



message GroupAllowResp
{
	enum GroupAllowRet
	{
		OK = 0;
		FAIL = -1;
		HAS_GROUP = 999;
		NO_NUMS = 998;
		NO_TIME = 997;
		ERROR_TYPE = 995;
		DATA_ERROR = 1000;
		SAME_USER = 1;
		STATUS_ERROR = 2;
		NO_USER = 3;
		NO_POWER = 4;
		USER_COUNT_MAX = 5;
		NO_CONDITION = 6;
	};
	required GroupAllowRet result = 1;
	optional UserSync user_sync = 2;
};


// 退出
message GroupExitGroupReq
{
	required int32 result = 1;
};


message GroupExitGroupResp
{
	required int32 result = 1;
	optional UserSync user_sync = 2;
};



// 逐出
message GroupKickReq
{
	required string user_name = 1;
};



message GroupKickResp
{
	enum GroupKickRet
	{
		OK = 0;
		FAIL = -1;
		LOCKED = -2;
		NOUSER = -3;
		NOPOWER = -4;
	};
	required GroupKickRet result = 1;
	optional UserSync user_sync = 2;
	optional GroupKickReq req = 3;
};



//改公告,简介
message GroupBroadcastReq
{
	optional string blurb = 1;               //简介
	optional string broadcast = 2;          //公告
};



message GroupBroadcastResp
{
	enum GroupBroadcastRet
	{
		OK = 0;
		FAIL = -1;
		DIRTY = 1;
		NOUSER  = 2;
		NOPOWER = 3;
		NOTYPE = 4;
	};
	required GroupBroadcastRet result = 1;
	optional UserSync user_sync = 2;
};





// 指定职位
message GroupJobReq
{
	required string user_name = 1;
	required int32 job = 2;
};



message GroupJobResp
{
	enum GroupJobRet
	{
		OK = 0;
		FAIL = -1;
		NOUSER = 1;
		NOPOWER = 2;
		ERROR_JOB = 3;
		FULL_MANAGER = 4;
		SAME_JOB = 5;
	};
	required GroupJobRet result = 1;
	optional UserSync user_sync = 2;
};



// 解散星盟
// 没有消息体
message GroupDisbandResp
{
	enum GroupDisbandRet
	{
		OK = 0;
		FAIL = -1;
		LOCKED = 1;
		NOPOWER = 2;
		ERROR = 3;
	};
	required GroupDisbandRet result = 1;
	optional UserSync user_sync = 2;
};



// 查询帮会
message GroupSearchReq
{
	optional string groupid = 1;
	optional int32 page = 2;        // 如果没有groupid 和 group name，就是拉列表，page从1开始
	optional string group_name = 3;
};



message GroupSearchResp
{
	required int32 result = 1;
	optional UserSync user_sync = 2;
	repeated GroupMainData group_list = 3;
	optional int32 total_page = 4;
};



//贡献
message GroupContributeReq
{
	required int32 type = 1;   //0:查看 1:普通 2:暴击
	required int32 tech_id = 2;
};

message GroupContributeResp
{
	required int32 result = 1;
	optional UserSync user_sync = 2;
};

//重置贡献锁
//没有请求体
message GroupContributeCDResp
{
	required int32 result = 1;
	optional UserSync user_sync = 2;
};

//科技升级
message GroupTechLevelupReq
{
	required int32 tech_id = 1;
};

message GroupTechLevelupResp
{
	required int32 result = 1;
	optional UserSync user_sync = 2;
};

//获取科技
message GroupGetTechReq
{
	required int32 tech_id = 1;
};

message GroupGetTechResp
{
	required int32 result = 1;
	optional UserSync user_sync = 2;
	optional GroupTechnology group_tech = 3;
};


//升级,req没有消息体
message GroupLevelupResp
{
	required int32 result = 1;
	optional UserSync user_sync = 2;
};



// 公会pve
//获取信息
message GroupPVEGetInfoReq
{
	required int32 group_boss_id = 1;
};
message GroupPVEGetInfoResp
{
	enum GroupPVEGetInfoRet
	{
		OK = 0;
		FAIL = -1;
		NO_GROUP = 1;

	};

	required GroupPVEGetInfoRet result = 1;
	optional UserSync user_sync = 2;
	optional GroupPVECheckpoint info = 3;
};

message GroupPVEReq
{
	required int32 group_boss_id = 1;
};

message GroupPVEResp
{
	enum GroupPVERet
	{
		OK = 0;
		FAIL = -1;
		GROUP_LEVEL = 1;
		TIME_OUT = 2;
		WDAY = 3;
		CHALLENGE_TIMES = 4;
		NO_DURABEL = 5;
		SHIP_FIXING = 6;
		NO_STRENGTH = 7;
		DEAD = 8;
		NO_GROUP = 9;
		NO_DATA = 10;
		SHIP_OUTING = 11;
	};

	required GroupPVERet result = 1;
	optional UserSync user_sync = 2;
	repeated AirShip attack_list = 3;		//我方阵型
	repeated AirShip hurter_list = 4;		//对方阵型
	repeated int32 hurter_hp_list = 5;		//防守方血量
	optional int32 group_boss_id = 6;
};

message GroupPVEOKReq{
	required int32 group_boss_id = 1;
	required int32 result = 2;  //0,战斗失败,1,战斗胜利
	repeated int32 hurter_hp_list = 3;		//防守方血量
};

message GroupPVEOKResp{
	enum GroupPVEOKRet
	{
		OK = 0;
		FAIL = -1;
		NO_DATA = 1;
		HP_LIST_ERROR0 = 2;
		HP_LIST_ERROR1 = 3;
		NO_GROUP = 4;
		ERROR_RESULT = 5;
	};
	required GroupPVEOKRet result = 1;
	optional UserSync user_sync = 2;
};

// PVE增加挑战次数
message GroupPVEAddTimsReq
{
	required int32 group_boss_id = 1;
	required int32 times = 2;
};

message GroupPVEAddTimsResp
{
	enum GroupPVEAddTimsRet
	{
		OK = 0;
		FAIL = -1;
		NO_GROUP = 1;
		NO_DATA = 2;
		MAX_TIMES = 3;
		ERROR_TIMES = 4;
		NO_MONEY = 5;
	};

	required GroupPVEAddTimsRet result = 1;
	optional UserSync user_sync = 2;
	optional GroupPVEAddTimsReq req = 3;
};



// PVE战利品申请
message GroupPVERewardReq
{
	required int32 group_boss_id = 1;
	required int32 reward_index = 2;
};

message GroupPVERewardResp
{
	enum GroupPVERewardRet
	{
		OK = 0;
		FAIL = -1;
		NO_GROUP = 1;
		NO_DATA = 2;
		NO_INDEX = 3;
		NO_INDEX_DATA = 4;
		SMALL_DAMAGE = 5;
		GETTED = 6;
	};

	required GroupPVERewardRet result = 1;
	optional UserSync user_sync = 2;
	optional GroupPVERewardReq req = 3;
};

// 请求帮助
message GroupRequestHelpReq
{
	required int32 type = 1;
	repeated int32 id = 2;	//type1:[1]建筑index    type2:[1]科技ID   type3:家园建筑[1]land_index  [2]resource_type
};

message GroupRequestHelpResp
{
	enum GroupRequestHelpRet
	{
		OK = 0;
		FAIL = -1;
		NO_DATA = 1;
		NO_CD = 2;
		REQUESTED = 3;
		REQ_DATA_ERROR = 4;
		HELPED = 5;
	};

	required GroupRequestHelpRet result = 1;
	optional UserSync user_sync = 2;
	repeated HelpInfo help_list = 3;
};


message GroupHelpListResp{
	enum GroupHelpListRet
	{
		OK = 0;
		FAIL = -1;
	};
	required GroupHelpListRet result = 1;
	optional UserSync user_sync = 2;
	repeated HelpInfo help_list = 3;
};


message GroupHelpReq{
	required string user_name = 1;
	required int32 type = 2;
	repeated int32 id = 3;
};
message GroupHelpResp
{
	enum GroupHelpRet
	{
		OK = 0;
		FAIL = -1;
		HELP_TIME_MAX = 1;
		NO_DATA = 2;
		NO_INFO_DATA = 3;
		NO_CD = 4;
		REQ_DATA_ERROR = 5;
	};
	required GroupHelpRet result = 1;
	optional UserSync user_sync = 2;
	repeated HelpInfo help_list = 3;
};

message NewGroupUpdate  //服务器主动 (有新邀请公会邮件)
{
	required string sender = 1;
};

message GroupInviteReq{
	required string recver = 1; //接受者uid
};
message GroupInviteResp
{
	enum GroupInviteRet
	{
		OK = 0;
		FAIL = -1;
		OTHER_BLACK = 1;
		MY_BLACK = 2;
		SENDED = 3;
		HAS_GROUP = 4;
		NO_POWER = 5;
		NO_OPEN = 6;
	};
	required GroupInviteRet result = 1;


};

message GroupWorshipReq{
	required int32 type = 1; 	//1:祭拜 2:领取祭拜奖励
	required int32 level = 2;
};

message GroupWorshipResp{
	enum GroupWorshipRet
	{
		OK = 0;
		FAIL = -1;
		ALREADY = 1;
		NO_CONF = 2;
		NO_GROUP = 3;
		NO_RES = 4;
		GETTED = 5;
		LOW_POINT = 6;
		NO_WORSHIP = 7;
	};
	required GroupWorshipRet result = 1;
	optional UserSync user_sync = 2;
	optional GroupWorshipReq req = 3;
};

